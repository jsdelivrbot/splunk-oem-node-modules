/*  Splunk: Button Groups */
/*  ===================== */
/*  BTN-GROUP handles rounding & spacing on btns & btn-combo */
/*  BTN-COMBO handles rounding on dropdowns & splits only, behaves like group but without grouping or spacing */

/* button combos, grouping and toolbar

    <div class="btn-toolbar">
        <div class="btn-group">
            <button class="btn">1</button> <button class="btn">2</button> <button class="btn">3</button>
            <div class="btn-combo">
                <button class="btn">Action</button>
                <button class="btn dropdown-toggle" data-toggle="dropdown">
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li>
                        <a href="#">item 1</a>
                    </li>
                    <li>
                        <a href="#">item 2</a>
                    </li>
                    <li>
                        <a href="#">item 3</a>
                    </li>
                </ul>
            </div><!-- /.btn-combo -->
        </div><!-- /.btn-group -->
    </div><!-- /.btn-toolbar -->


*/
/*  Make the div behave like a button */
.btn-group {
    position: relative;
    display: inline-block;

    font-size: 0; /*  remove as part 1 of font-size inline-block hack */
    vertical-align: middle; /*  match .btn alignment given font-size hack above */
    white-space: nowrap; /*  prevent buttons from wrapping when in tight spaces (e.g., the table on the tests page) */
}

/*  Space out series of button groups */
.btn-group + .btn-group,
.btn-combo + .btn-combo  {
    margin-left: 10px;
}

 /*  Make the div behave like a button */
.btn-combo {
    position: relative;
    font-size: 0; /*  inline-block hack */
    white-space: nowrap;
    display:inline-block;
}

/*  Optional: Group multiple button groups together for a toolbar */
.btn-toolbar {
    font-size: 0; /*  Hack to remove whitespace that results from using inline-block */
    margin-top: calc($baseLineHeight / 2);
    margin-bottom: calc($baseLineHeight / 2);

    /*  display inline for toolbar */
    .btn-combo {
        display: inline-block;
    }
    > .btn + .btn,
    > .btn-group + .btn,
    > .btn + .btn-group,
    > .btn-combo + .btn,
    > .btn + .btn-combo {
        margin-left: 5px;
    }
}


/*  Float them, remove border radius, then re-add to first and last elements */
.btn-group > .btn,
.btn-group > .btn-combo > .btn  {
    position: relative;
    border-radius: 0;
}
.btn-group > .btn + .btn {
    margin-left: -1px;
}


/*  Reset fibt sizes */
.btn-group > .btn,
.btn-group > .dropdown-menu,
.btn-group > .popover {
    font-size: $baseFontSize; /*  redeclare as part 2 of font-size inline-block hack */
}

/*  Reset fonts for other sizes */
.btn-group > .btn-mini {
    font-size: $fontSizeMini;
}
.btn-group > .btn-small {
    font-size: $fontSizeSmall;
}
.btn-group > .btn-large {
    font-size: $fontSizeLarge;
}

/*  special case for btn-combo */
.btn-combo > .btn:first-child
{
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}
/*  special case for btn-combo */
.btn-combo > .btn:last-child,
.btn-combo > .dropdown-toggle
{
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

/*  reset margin when in a group */
.btn-group > .btn-combo + .btn-combo ,
.btn-group > .btn-combo + .btn,
.btn-group > .btn + .btn-combo,
.btn-combo > .btn + .btn
{
    margin-left: -1px;
}

.btn-group > .btn,
.btn-combo > .btn,
.btn-group > .dropdown-menu,
.btn-combo > .dropdown-menu,
.btn-group > .btn-pill,
.btn-combo > .btn-pill,
.btn-group ul,
.btn-combo ul,
.btn-group .popdown-dialog,
.btn-combo .popdown-dialog,
.btn-group .dropdown-toggle,
.btn-combo .dropdown-toggle
{
    font-size: $baseFontSize; /*  redeclare as part 2 of font-size inline-block hack */
}

.btn-group > .btn-small,
.btn-combo > .btn-small,
.btn-group > .btn-mini,
.btn-combo > .btn-mini
{
    font-size: $baseFontSizeSmall; /*  redeclare as part 2 of font-size inline-block hack */
}

.btn-combo > .btn-large {
    font-size: $baseFontSizeLarge;
}


/*  Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match */
.btn-group > .btn:first-child,
.btn-group > .btn-combo:first-child > .btn:first-child ,
.btn-group > .btn-combo:first-child > .drodown-toggle ,
.btn-combo:first-child > .btn:first-child,
.btn-group > .btn-combo:first-child > .btn:first-child
{
    margin-left: 0;
    border-top-left-radius: $interactiveBorderRadius;
    border-bottom-left-radius: $interactiveBorderRadius;
}
/*  Need .dropdown-toggle since :last-child doesn't apply given a .dropdown-menu immediately after it */
.btn-group > .btn:last-child,
.btn-group > .dropdown-toggle,
.btn-group > .btn-combo:last-child > .btn:last-child,
.btn-group > .btn-combo:last-child > .dropdown-toggle,
.btn-combo > .dropdown-toggle
{
    border-top-right-radius: $interactiveBorderRadius;
    border-bottom-right-radius: $interactiveBorderRadius;
}
/*  Reset corners for large buttons */
.btn-group > .btn.large:first-child,
.btn-group > .btn-combo:first-child > .btn.large:first-child {
    margin-left: 0;
    border-top-left-radius: $borderRadiusLarge;
    border-bottom-left-radius: $borderRadiusLarge;
}
.btn-group > .btn.large:last-child,
.btn-group > .large.dropdown-toggle,
.btn-group > .btn-combo:last-child > .btn.large:last-child,
.btn-group > .btn-combo:last-child > .large.dropdown-toggle {
    border-top-right-radius: $borderRadiusLarge;
    border-bottom-right-radius: $borderRadiusLarge;
}

/*  On hover/focus/active, bring the proper btn to front */
.btn-group > .btn:hover,
.btn-group > .btn:focus,
.btn-group > .btn:active,
.btn-group > .btn.active,
.btn-group > .btn-combo > .btn:hover,
.btn-group > .btn-combo > .btn:focus,
.btn-group > .btn-combo > .btn:active,
.btn-group > .btn-combo > .btn.active {
    z-index: 2;
}

/*  On active and open, don't show outline */
.btn-group .dropdown-toggle:active,
.btn-group.open .dropdown-toggle {
    outline: 0;
}



/*  Split button dropdowns */
/*  ---------------------- */


/*  Give the line between buttons some depth */
.btn-group > .btn-combo > .btn + .dropdown-toggle,
.btn-combo > .btn + .dropdown-toggle {
    padding-left: 8px;
    padding-right: 8px;
    box-shadow: inset 1px 0 0 rgba(255,255,255,.125), inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);
}
.btn-group > .btn-mini + .dropdown-toggle,
.btn-group > .btn-combo > .btn-mini + .dropdown-toggle  {
    padding-left: 5px;
    padding-right: 5px;
}
.btn-group > .btn-large + .dropdown-toggle,
.btn-group > .btn-combo > .btn-large + .dropdown-toggle {
    padding-left: 12px;
    padding-right: 12px;
}

.btn-group.open {
  /*  The clickable button for toggling the menu */
  /*  Remove the gradient and set the same inset shadow as the :active state */
    .dropdown-toggle {
        background-image: none;
        box-shadow: inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05);
    }

    /*  Keep the hover's background when dropdown is open */
    .btn.dropdown-toggle {
        background-color: $interactiveBackgroundColorHover;
    }
    .btn-primary.dropdown-toggle {
        background-color: $primaryBackgroundColorHover;
    }
    .btn-danger.dropdown-toggle {
        background-color: $interactiveErrorBackgroundColorHover;
    }
    .btn-success.dropdown-toggle {
        background-color: $primaryBackgroundColorHover;
    }
}

/* Prevent Tooltip from spacing two buttons */
.btn-group > .btn + div.tooltip + .btn {
    margin-left: -1px;
}

/* Square Buttons */
.btn-group .btn-square {
    padding: 0;
    height: 20px;
    width: 22px;
    font-size: 15px;
    > i {
        line-height: 20px;
    }
}

/*  Vertical button groups */
/*  ---------------------- */

.btn-group-vertical {
    display: inline-block; /*  makes buttons only take up the width they need */

}
.btn-group-vertical > .btn {
    display: block;
    float: none;
    max-width: 100%;
    border-radius: 0;
}
.btn-group-vertical > .btn + .btn {
    margin-left: 0;
    margin-top: -1px;
}
.btn-group-vertical > .btn:first-child {
    border-radius: $baseBorderRadius $baseBorderRadius 0 0;
}
.btn-group-vertical > .btn:last-child {
    border-radius: 0 0 $baseBorderRadius $baseBorderRadius;
}
.btn-group-vertical > .btn-large:first-child {
    border-radius: $borderRadiusLarge $borderRadiusLarge 0 0;
}
.btn-group-vertical > .btn-large:last-child {
    border-radius: 0 0 $borderRadiusLarge $borderRadiusLarge;
}



/*  input prepend fix */
.input-prepend .add-on:first-child,
.input-prepend .btn:first-child {
    border-radius: $interactiveBorderRadius 0 0 $interactiveBorderRadius;
}

/*  input append fix for color ranges */
.input-append .add-on.color-picker-add-on,
.input-append.delta-time-range .btn:first-child {
    border-radius: 0 $interactiveBorderRadius $interactiveBorderRadius 0;
}

.btn-group-radio {
    > .btn {
        text-overflow: ellipsis;
        overflow: hidden;

        &.active, &.active:hover {
            cursor: default;
            box-shadow: $interactiveBoxShadowActive;
            background-color: $interactiveBackgroundColorHover;
            color: $textColor;
        }

        &.active:focus {
            cursor: default;
            box-shadow+: $btnBoxShadowFocus;
        }
    }
}

/*  For synthetic radio with the "locale-responsive-layout" class, align the items vertically to accommodate long words (SPL-83062). */
$(wideTextLocaleSelector) {

    .btn-group-radio.locale-responsive-layout {
        display: block;
        .btn {
            border-radius: 0;
            display: block;
            width: 100%;
            margin-left: 0;
            border-bottom-width: 0;

            &:first-child {
                border-radius: $interactiveBorderRadius $interactiveBorderRadius 0 0;
            }
            &:last-child {
                border-radius: 0 0 $interactiveBorderRadius $interactiveBorderRadius;
                border-bottom-width: 1px;
            }
        }
    }
}
