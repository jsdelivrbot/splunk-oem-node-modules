--- patches/typeahead.jquery.js.org	2016-04-12 15:48:19.000000000 -0700
+++ typeahead.jquery.js	2016-04-12 15:48:56.000000000 -0700
@@ -450,7 +450,6 @@
             this.$input = $(o.input);
             this.query = this.$input.val();
             this.queryWhenFocused = this.hasFocus() ? this.query : null;
-            this.$overflowHelper = buildOverflowHelper(this.$input);
             this._checkLanguageDirection();
             if (this.$hint.length === 0) {
                 this.setHint = this.getHint = this.clearHint = this.clearHintIfInvalid = _.noop;
@@ -587,17 +586,12 @@
                 val = this.getInputValue();
                 hint = this.getHint();
                 valIsPrefixOfHint = val !== hint && hint.indexOf(val) === 0;
-                isValid = val !== "" && valIsPrefixOfHint && !this.hasOverflow();
+                isValid = val !== "" && valIsPrefixOfHint;
                 !isValid && this.clearHint();
             },
             hasFocus: function hasFocus() {
                 return this.$input.is(":focus");
             },
-            hasOverflow: function hasOverflow() {
-                var constraint = this.$input.width() - 2;
-                this.$overflowHelper.text(this.getInputValue());
-                return this.$overflowHelper.width() >= constraint;
-            },
             isCursorAtEnd: function() {
                 var valueLength, selectionStart, range;
                 valueLength = this.$input.val().length;
@@ -614,8 +608,7 @@
             destroy: function destroy() {
                 this.$hint.off(".tt");
                 this.$input.off(".tt");
-                this.$overflowHelper.remove();
-                this.$hint = this.$input = this.$overflowHelper = $("<div>");
+                this.$hint = this.$input = $("<div>");
             }
         });
         return Input;
@@ -860,8 +853,30 @@
             }
             www.mixin(this);
             this.$node = $(o.node);
+            this.$anchor = $(o.anchor);
             this.query = null;
             this.datasets = _.map(o.datasets, initializeDataset);
+
+            if (this.$anchor.length) {
+                var offset = this.$anchor.offset();
+                var height = this.$anchor.height();
+                var width = this.$anchor.width();
+                var topOffset = _.isNumber(o.topOffset) ? o.topOffset : 0;
+                var extraWidth = _.isNumber(o.extraWidth) ? o.extraWidth : 0;
+
+                var css = {
+                    top:  offset.top + height + topOffset,
+                    left: offset.left,
+                    width: width + extraWidth
+                };
+
+                if (_.isNumber(o.zIndex)) {
+                    css.zIndex = o.zIndex;
+                }
+
+                this.$node.css(css);
+            }
+
             function initializeDataset(oDataset) {
                 var node = that.$node.find(oDataset.node).first();
                 oDataset.node = node.length ? node : $("<div>").appendTo(that.$node);
@@ -1176,7 +1191,7 @@
                 $selectable = this.menu.getTopSelectable();
                 data = this.menu.getSelectableData($selectable);
                 val = this.input.getInputValue();
-                if (data && !_.isBlankString(val) && !this.input.hasOverflow()) {
+                if (data && !_.isBlankString(val)) {
                     query = Input.normalizeQuery(val);
                     escapedQuery = _.escapeRegExChars(query);
                     frontMatchRegEx = new RegExp("^(?:" + escapedQuery + ")(.+$)", "i");
@@ -1322,7 +1337,7 @@
                 www = WWW(o.classNames);
                 return this.each(attach);
                 function attach() {
-                    var $input, $wrapper, $hint, $menu, defaultHint, defaultMenu, eventBus, input, menu, typeahead, MenuConstructor;
+                    var $input, $wrapper, $hint, $menu, defaultHint, defaultMenu, appendMenu, isAttachTo, eventBus, input, menu, typeahead, MenuConstructor;
                     _.each(datasets, function(d) {
                         d.highlight = !!o.highlight;
                     });
@@ -1330,16 +1345,23 @@
                     $wrapper = $(www.html.wrapper);
                     $hint = $elOrNull(o.hint);
                     $menu = $elOrNull(o.menu);
+                    isAttachTo = _.isString(o.attachTo);
                     defaultHint = o.hint !== false && !$hint;
                     defaultMenu = o.menu !== false && !$menu;
                     defaultHint && ($hint = buildHintFromInput($input, www));
                     defaultMenu && ($menu = $(www.html.menu).css(www.css.menu));
+                    appendMenu = defaultMenu ? $menu : null;
                     $hint && $hint.val("");
                     $input = prepInput($input, www);
                     if (defaultHint || defaultMenu) {
                         $wrapper.css(www.css.wrapper);
                         $input.css(defaultHint ? www.css.input : www.css.inputWithNoHint);
-                        $input.wrap($wrapper).parent().prepend(defaultHint ? $hint : null).append(defaultMenu ? $menu : null);
+                        $input.wrap($wrapper).parent().prepend(defaultHint ? $hint : null);
+                        if (isAttachTo) {
+                            $(o.attachTo).append(appendMenu);
+                        } else {
+                            $input.append(appendMenu);
+                        }
                     }
                     MenuConstructor = defaultMenu ? DefaultMenu : Menu;
                     eventBus = new EventBus({
@@ -1351,7 +1373,11 @@
                     }, www);
                     menu = new MenuConstructor({
                         node: $menu,
-                        datasets: datasets
+                        anchor: isAttachTo && $input,
+                        datasets: datasets,
+                        zIndex: o.zIndex,
+                        topOffset: o.topOffset,
+                        extraWidth: o.extraWidth
                     }, www);
                     typeahead = new Typeahead({
                         input: input,
@@ -1458,8 +1484,13 @@
             destroy: function destroy() {
                 ttEach(this, function(typeahead, $input) {
                     revert($input);
+
+                    // If attached to body
+                    typeahead.menu.$node.remove();
+
                     typeahead.destroy();
                 });
+
                 return this;
             }
         };
