{
    "showIntroText": "1",
    "error": "",
    "commandErrors": [],
    "fieldErrors": [],
    "fields": [],
    "commandHistory": [
        {
          "arg": "count",
          "replacement": "|stats count"
        },
        {
          "arg": "count by host",
          "replacement": "|stats count by host"
        },
        {
          "arg": "count by action, host",
          "replacement": "|stats count by action, host"
        },
        {
          "arg": "count by host, port",
          "replacement": "|stats count by host, port"
        },
        {
          "arg": "count as \"Total Count\" , dc(source) as \"Sources\" by host",
          "replacement": "|stats count as \"Total Count\" , dc(source) as \"Sources\" by host"
        },
        {
          "arg": "count by src_ip,dest_ip,dest_port",
          "replacement": "|stats count by src_ip,dest_ip,dest_port"
        },
        {
          "arg": "c by host",
          "replacement": "|stats c by host"
        },
        {
          "arg": "count by\nhost",
          "replacement": "|stats count by\nhost"
        },
        {
          "arg": "count by sourcetype",
          "replacement": "|stats count by sourcetype"
        },
        {
          "arg": "count by src_ip, DPT, action",
          "replacement": "|stats count by src_ip, DPT, action"
        },
        {
          "arg": "count by src_ip,dest_ip,severity,signature,name",
          "replacement": "|stats count by src_ip,dest_ip,severity,signature,name"
        },
        {
          "arg": "count by src_ip,dest_ip,signature,name,tag::eventtype",
          "replacement": "|stats count by src_ip,dest_ip,signature,name,tag::eventtype"
        },
        {
          "arg": "count by user",
          "replacement": "|stats count by user"
        },
        {
          "arg": "count(_raw) by host",
          "replacement": "|stats count(_raw) by host"
        },
        {
          "arg": "count(_raw) by size",
          "replacement": "|stats count(_raw) by size"
        }
    ],
    "commandArgs": [
        {
          "arg": "c",
          "replacement": "c"
        },
        {
          "arg": "c",
          "replacement": "count"
        }
    ],
    "matchingTerms": [
        {
            "term": "index=\"_audit\"",
            "replacement": "index=\"_audit\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"_blocksignature\"",
            "replacement": "index=\"_blocksignature\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"_internal\"",
            "replacement": "index=\"_internal\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"_introspection\"",
            "replacement": "index=\"_introspection\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"_thefishbucket\"",
            "replacement": "index=\"_thefishbucket\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"history\"",
            "replacement": "index=\"history\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"main\"",
            "replacement": "index=\"main\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"sample\"",
            "replacement": "index=\"sample\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"summary\"",
            "replacement": "index=\"summary\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"foosummary\"",
            "replacement": "index=\"foosummary\"",
            "matched": "index=",
            "numMatches": 0
        }, {
            "term": "index=\"bazsummary\"",
            "replacement": "index=\"bazsummary\"",
            "matched": "index=",
            "numMatches": 0
        }
    ],
    "nexts": [
        {
            "nextCommand": "abstract",
            "description": "Shortens the text of results to a brief summary representation",
            "replacement": " | abstract"
        }, {
            "nextCommand": "accum",
            "description": "Keeps a running total of a specified numeric field.",
            "replacement": " | accum"
        }, {
            "nextCommand": "addcoltotals",
            "description": "",
            "replacement": " | addcoltotals"
        }, {
            "nextCommand": "addinfo",
            "description": "Add fields that contain common information about the current search.",
            "replacement": " | addinfo"
        }, {
            "nextCommand": "addtotals",
            "description": "Computes the sum of all numeric fields for each result.",
            "replacement": " | addtotals"
        }, {
            "nextCommand": "af",
            "description": "Finds degree of correlation between a target discrete field and other numerical fields.",
            "replacement": " | af"
        }, {
            "nextCommand": "af",
            "description": "Finds degree of correlation between a target discrete field and other numerical fields.",
            "replacement": " | af"
        }, {
            "nextCommand": "anomalies",
            "description": "Computes an \"unexpectedness\" score for an event.",
            "replacement": " | anomalies"
        }, {
            "nextCommand": "anomalousvalue",
            "description": "Finds and summarizes irregular, or uncommon, search results.",
            "replacement": " | anomalousvalue"
        }, {
            "nextCommand": "append",
            "description": "Appends the results of a subsearch results to the current results.",
            "replacement": " | append"
        }, {
            "nextCommand": "appendcols",
            "description": "Appends the fields of the subsearch results to current results, first results to first result, second to second, etc.",
            "replacement": " | appendcols"
        }, {"nextCommand": "appendpipe", "description": "", "replacement": " | appendpipe"}, {
            "nextCommand": "ar",
            "description": "",
            "replacement": " | ar"
        }, {
            "nextCommand": "arules",
            "description": "Find association rules between field values",
            "replacement": " | arules"
        }, {
            "nextCommand": "associate",
            "description": "Identifies correlations between fields.",
            "replacement": " | associate"
        }, {
            "nextCommand": "audit",
            "description": "Returns audit trail information that is stored in the local audit index.",
            "replacement": " | audit"
        }, {
            "nextCommand": "autoregress",
            "description": "Prepares events or results for calculating the moving average.",
            "replacement": " | autoregress"
        }, {"nextCommand": "bin", "description": "", "replacement": " | bin"}, {
            "nextCommand": "bucket",
            "description": "Puts continuous numerical values into discrete sets.",
            "replacement": " | bucket"
        }, {
            "nextCommand": "bucketdir",
            "description": "Replaces PATHFIELD with higher-level grouping, such as replacing filenames with directories.",
            "replacement": " | bucketdir"
        }, {
            "nextCommand": "chart",
            "description": "Returns results in a tabular output for charting.",
            "replacement": " | chart"
        }, {
            "nextCommand": "cluster",
            "description": "Clusters similar events together.",
            "replacement": " | cluster"
        }, {
            "nextCommand": "cofilter",
            "description": "Find how many times field1 and field2 values occurred together",
            "replacement": " | cofilter"
        }, {"nextCommand": "collapse", "description": "", "replacement": " | collapse"}, {
            "nextCommand": "collect",
            "description": "Puts search results into a summary index.",
            "replacement": " | collect"
        }, {"nextCommand": "common", "description": "", "replacement": " | common"}, {
            "nextCommand": "concurrency",
            "description": "Given a duration field, finds the number of \"concurrent\" events for each event",
            "replacement": " | concurrency"
        }, {
            "nextCommand": "contingency",
            "description": "Builds a contingency table for two fields.",
            "replacement": " | contingency"
        }, {
            "nextCommand": "convert",
            "description": "Converts field values into numerical values.",
            "replacement": " | convert"
        }, {
            "nextCommand": "copyresults",
            "description": "",
            "replacement": " | copyresults"
        }, {
            "nextCommand": "correlate",
            "description": "Calculates the correlation between different fields.",
            "replacement": " | correlate"
        }, {"nextCommand": "counttable", "description": "", "replacement": " | counttable"}, {
            "nextCommand": "crawl",
            "description": "Crawls the filesystem for files of interest to Splunk, or network for ports of interest.",
            "replacement": " | crawl"
        }, {
            "nextCommand": "createrss",
            "description": "Adds the RSS item into the specified RSS feed.",
            "replacement": " | createrss"
        }, {"nextCommand": "ctable", "description": "", "replacement": " | ctable"}, {
            "nextCommand": "datamodel",
            "description": "Allows user to examine data models and run the search for a datamodel object.",
            "replacement": " | datamodel"
        }, {
            "nextCommand": "dbinspect",
            "description": "Returns information about the Splunk index.",
            "replacement": " | dbinspect"
        }, {
            "nextCommand": "debug",
            "description": "Performs a debug command.",
            "replacement": " | debug"
        }, {
            "nextCommand": "dedup",
            "description": "Removes events which contain an identical combination of values for selected fields.",
            "replacement": " | dedup"
        }, {
            "nextCommand": "delete",
            "description": "Deletes (makes irretrievable) events from Splunk indexes.",
            "replacement": " | delete"
        }, {
            "nextCommand": "delta",
            "description": "Computes the difference in field value between nearby results.",
            "replacement": " | delta"
        }, {
            "nextCommand": "diff",
            "description": "Returns the difference between two search results.",
            "replacement": " | diff"
        }, {"nextCommand": "discretize", "description": "", "replacement": " | discretize"}, {
            "nextCommand": "dispatch",
            "description": "",
            "replacement": " | dispatch"
        }, {"nextCommand": "editinfo", "description": "", "replacement": " | editinfo"}, {
            "nextCommand": "erex",
            "description": "Automatically extracts field values similar to the example values.",
            "replacement": " | erex"
        }, {
            "nextCommand": "eval",
            "description": "Calculates an expression and puts the resulting value into a field.",
            "replacement": " | eval"
        }, {
            "nextCommand": "eventcount",
            "description": "Returns the number of events in an index.",
            "replacement": " | eventcount"
        }, {
            "nextCommand": "eventstats",
            "description": "Adds summary statistics to all search results.",
            "replacement": " | eventstats"
        }, {"nextCommand": "excerpt", "description": "", "replacement": " | excerpt"}, {
            "nextCommand": "extract",
            "description": "Extracts field-value pairs from search results.",
            "replacement": " | extract"
        }, {"nextCommand": "fieldformat", "description": "", "replacement": " | fieldformat"}, {
            "nextCommand": "fields",
            "description": "Keeps or removes fields from search results.",
            "replacement": " | fields"
        }, {
            "nextCommand": "fieldsummary",
            "description": "Generates summary information for all or a subset of the fields.",
            "replacement": " | fieldsummary"
        }, {
            "nextCommand": "file",
            "description": "Processes the given file as if it were indexed.",
            "replacement": " | file"
        }, {
            "nextCommand": "filldown",
            "description": "Replace null values with last non-null value",
            "replacement": " | filldown"
        }, {
            "nextCommand": "fillnull",
            "description": "Replaces null values with a specified value.",
            "replacement": " | fillnull"
        }, {
            "nextCommand": "findkeywords",
            "description": "Given some integer labeling of events into groups, finds searches to generate those groups.",
            "replacement": " | findkeywords"
        }, {
            "nextCommand": "findtypes",
            "description": "Generates suggested event types.",
            "replacement": " | findtypes"
        }, {
            "nextCommand": "foreach",
            "description": "Run a templatized streaming subsearch for each field in a wildcarded field list",
            "replacement": " | foreach"
        }, {
            "nextCommand": "format",
            "description": "Takes the results of a subsearch and formats them into a single result.",
            "replacement": " | format"
        }, {
            "nextCommand": "gauge",
            "description": "Transforms results into a format suitable for display by the Gauge chart types.",
            "replacement": " | gauge"
        }, {
            "nextCommand": "gentimes",
            "description": "Generates time range results.",
            "replacement": " | gentimes"
        }, {
            "nextCommand": "geostats",
            "description": "Generate statistics which are clustered into geographical bins to be rendered on a world map.",
            "replacement": " | geostats"
        }, {
            "nextCommand": "head",
            "description": "Returns the first n number of specified results.",
            "replacement": " | head"
        }, {
            "nextCommand": "highlight",
            "description": "Causes UI to highlight selected strings.",
            "replacement": " | highlight"
        }, {
            "nextCommand": "history",
            "description": "Returns a history of searches, either as events or as non-event results (default)",
            "replacement": " | history"
        }, {"nextCommand": "iconify", "description": "", "replacement": " | iconify"}, {
            "nextCommand": "input",
            "description": "Adds or disables sources from being processed by Splunk.",
            "replacement": " | input"
        }, {
            "nextCommand": "inputcsv",
            "description": "Loads search results from the specified CSV file.",
            "replacement": " | inputcsv"
        }, {
            "nextCommand": "inputlookup",
            "description": "Loads search results from a specified static lookup table.",
            "replacement": " | inputlookup"
        }, {
            "nextCommand": "internalinputcsv",
            "description": "",
            "replacement": " | internalinputcsv"
        }, {
            "nextCommand": "iplocation",
            "description": "Extracts location information from IP addresses using 3rd-party databases.",
            "replacement": " | iplocation"
        }, {
            "nextCommand": "join",
            "description": "SQL-like joining of results from the main results pipeline with the results from the subpipeline.",
            "replacement": " | join"
        }, {
            "nextCommand": "keywordsuggestor",
            "description": "",
            "replacement": " | keywordsuggestor"
        }, {
            "nextCommand": "kmeans",
            "description": "Performs k-means clustering on selected fields.",
            "replacement": " | kmeans"
        }, {"nextCommand": "kv", "description": "", "replacement": " | kv"}, {
            "nextCommand": "kvform",
            "description": "Extracts values from search results, using a form template.",
            "replacement": " | kvform"
        }, {
            "nextCommand": "loadjob",
            "description": "Loads events or results of a previously completed search job.",
            "replacement": " | loadjob"
        }, {
            "nextCommand": "localize",
            "description": "Returns a list of time ranges in which the search results were found.",
            "replacement": " | localize"
        }, {
            "nextCommand": "localop",
            "description": "Prevents subsequent commands from being executed on remote peers.",
            "replacement": " | localop"
        }, {
            "nextCommand": "lookup",
            "description": "Explicitly invokes field value lookups.",
            "replacement": " | lookup"
        }, {"nextCommand": "macro", "description": "", "replacement": " | macro"}, {
            "nextCommand": "makecontinuous",
            "description": "",
            "replacement": " | makecontinuous"
        }, {
            "nextCommand": "makemv",
            "description": "Changes a specified field into a multi-value field during a search.",
            "replacement": " | makemv"
        }, {"nextCommand": "maketable", "description": "", "replacement": " | maketable"}, {
            "nextCommand": "map",
            "description": "Looping operator, performs a search over each search result.",
            "replacement": " | map"
        }, {
            "nextCommand": "metadata",
            "description": "Returns a list of source, sourcetypes, or hosts.",
            "replacement": " | metadata"
        }, {
            "nextCommand": "metasearch",
            "description": "Retrieves event metadata from indexes based on terms in the <logical-expression>",
            "replacement": " | metasearch"
        }, {
            "nextCommand": "multikv",
            "description": "Extracts field-values from table-formatted events.",
            "replacement": " | multikv"
        }, {
            "nextCommand": "multisearch",
            "description": "Do multiple searches at the same time",
            "replacement": " | multisearch"
        }, {
            "nextCommand": "mvcombine",
            "description": "Combines events in the search results that have a single differing field value into one result with a multi-value field of the differing field.",
            "replacement": " | mvcombine"
        }, {
            "nextCommand": "mvexpand",
            "description": "Expands the values of a multi-value field into separate events for each value of the multi-value field.",
            "replacement": " | mvexpand"
        }, {
            "nextCommand": "newseriesfilter",
            "description": "",
            "replacement": " | newseriesfilter"
        }, {"nextCommand": "nokv", "description": "", "replacement": " | nokv"}, {
            "nextCommand": "nomv",
            "description": "Changes a specified multi-value field into a single-value field at search time.",
            "replacement": " | nomv"
        }, {
            "nextCommand": "outlier",
            "description": "Removes outlying numerical values.",
            "replacement": " | outlier"
        }, {
            "nextCommand": "outlierfilter",
            "description": "",
            "replacement": " | outlierfilter"
        }, {
            "nextCommand": "outputcsv",
            "description": "Outputs search results to the specified CSV file.",
            "replacement": " | outputcsv"
        }, {
            "nextCommand": "outputlookup",
            "description": "Save search results to specified static lookup table.",
            "replacement": " | outputlookup"
        }, {
            "nextCommand": "outputrawr",
            "description": "",
            "replacement": " | outputrawr"
        }, {
            "nextCommand": "outputtext",
            "description": "Outputs the raw text (_raw) of results into the _xml field.",
            "replacement": " | outputtext"
        }, {
            "nextCommand": "overlap",
            "description": "Finds events in a summary index that overlap in time or have missed events.",
            "replacement": " | overlap"
        }, {
            "nextCommand": "pivot",
            "description": "Allows user to run pivot searches against a particular datamodel object.",
            "replacement": " | pivot"
        }, {
            "nextCommand": "predict",
            "description": "Predict future values of fields.",
            "replacement": " | predict"
        }, {
            "nextCommand": "preview",
            "description": "See what events from a file will look like when indexed without actually indexing the file.",
            "replacement": " | preview"
        }, {
            "nextCommand": "rangemap",
            "description": "Sets RANGE field to the name of the ranges that match.",
            "replacement": " | rangemap"
        }, {
            "nextCommand": "rare",
            "description": "Displays the least common values of a field.",
            "replacement": " | rare"
        }, {
            "nextCommand": "rawstats",
            "description": "Returns statistics about the raw field.",
            "replacement": " | rawstats"
        }, {
            "nextCommand": "regex",
            "description": "Removes results that do not match the specified regular expression.",
            "replacement": " | regex"
        }, {
            "nextCommand": "relevancy",
            "description": "Calculates how well the event matches the query.",
            "replacement": " | relevancy"
        }, {
            "nextCommand": "reltime",
            "description": "Sets the 'reltime' field to a human readable value of the difference between 'now' and '_time'.",
            "replacement": " | reltime"
        }, {
            "nextCommand": "rename",
            "description": "Renames a specified field (wildcards can be used to specify multiple fields).",
            "replacement": " | rename"
        }, {
            "nextCommand": "replace",
            "description": "Replaces values of specified fields with a specified new value.",
            "replacement": " | replace"
        }, {"nextCommand": "report", "description": "", "replacement": " | report"}, {
            "nextCommand": "rest",
            "description": "",
            "replacement": " | rest"
        }, {
            "nextCommand": "return",
            "description": "convenient way to return values up from a subsearch",
            "replacement": " | return"
        }, {"nextCommand": "reverse", "description": "", "replacement": " | reverse"}, {
            "nextCommand": "rex",
            "description": "Specifies a Perl regular expression named groups to extract fields while you search.",
            "replacement": " | rex"
        }, {
            "nextCommand": "rtorder",
            "description": "Buffers events from real-time search to emit them in ascending time order when possible",
            "replacement": " | rtorder"
        }, {"nextCommand": "run", "description": "", "replacement": " | run"}, {
            "nextCommand": "runshellscript",
            "description": "Internal command used to execute scripted alerts",
            "replacement": " | runshellscript"
        }, {
            "nextCommand": "sample",
            "description": "Returns a random sampling of N search results.",
            "replacement": " | sample"
        }, {
            "nextCommand": "savedsearch",
            "description": "Runs a saved search by name.",
            "replacement": " | savedsearch"
        }, {"nextCommand": "savedsplunk", "description": "", "replacement": " | savedsplunk"}, {
            "nextCommand": "script",
            "description": "Runs an external Python-imeplemented search command.",
            "replacement": " | script"
        }, {
            "nextCommand": "scrub",
            "description": "Anonymizes the search results.",
            "replacement": " | scrub"
        }, {
            "nextCommand": "search",
            "description": "Filters results using keywords, quoted phrases, wildcards, and key/value expressions.",
            "replacement": " | search"
        }, {
            "nextCommand": "searchtxn",
            "description": "finds transaction events given search constraints",
            "replacement": " | searchtxn"
        }, {
            "nextCommand": "select",
            "description": "The select command is deprecated. If you want to compute aggregate statistics, try using stats, chart, or timechart. If you want to filter search results, try using search or where.",
            "replacement": " | select"
        }, {
            "nextCommand": "selfjoin",
            "description": "Joins results with itself.",
            "replacement": " | selfjoin"
        }, {
            "nextCommand": "sendemail",
            "description": "Emails search results to specified email addresses.",
            "replacement": " | sendemail"
        }, {
            "nextCommand": "set",
            "description": "Performs set operations on subsearches.",
            "replacement": " | set"
        }, {
            "nextCommand": "shape",
            "description": "Produces a symbolic 'shape' attribute describing the shape of a numeric multivalued field",
            "replacement": " | shape"
        }, {"nextCommand": "showargs", "description": "", "replacement": " | showargs"}, {
            "nextCommand": "sichart",
            "description": "Summary indexing friendly versions of chart command.",
            "replacement": " | sichart"
        }, {
            "nextCommand": "sirare",
            "description": "Summary indexing friendly versions of rare command.",
            "replacement": " | sirare"
        }, {
            "nextCommand": "sistats",
            "description": "Summary indexing friendly versions of stats command.",
            "replacement": " | sistats"
        }, {
            "nextCommand": "sitimechart",
            "description": "Summary indexing friendly versions of timechart command.",
            "replacement": " | sitimechart"
        }, {
            "nextCommand": "sitop",
            "description": "Summary indexing friendly versions of top command.",
            "replacement": " | sitop"
        }, {"nextCommand": "slc", "description": "", "replacement": " | slc"}, {
            "nextCommand": "sort",
            "description": "Sorts search results by the specified fields.",
            "replacement": " | sort"
        }, {
            "nextCommand": "spath",
            "description": "Extracts values from structured data (XML or JSON) and stores them in a field or fields.",
            "replacement": " | spath"
        }, {"nextCommand": "stash", "description": "", "replacement": " | stash"}, {
            "nextCommand": "stats",
            "description": "Provides statistics, grouped optionally by field.",
            "replacement": " | stats"
        }, {
            "nextCommand": "strcat",
            "description": "Concatenates string values.",
            "replacement": " | strcat"
        }, {
            "nextCommand": "streamedcsv",
            "description": "",
            "replacement": " | streamedcsv"
        }, {
            "nextCommand": "streamstats",
            "description": "Adds summary statistics to all search results in a streaming manner.",
            "replacement": " | streamstats"
        }, {"nextCommand": "sumindex", "description": "", "replacement": " | sumindex"}, {
            "nextCommand": "summaryindex",
            "description": "",
            "replacement": " | summaryindex"
        }, {"nextCommand": "surrounding", "description": "", "replacement": " | surrounding"}, {
            "nextCommand": "table",
            "description": "",
            "replacement": " | table"
        }, {"nextCommand": "tagcreate", "description": "", "replacement": " | tagcreate"}, {
            "nextCommand": "tagdelete",
            "description": "",
            "replacement": " | tagdelete"
        }, {
            "nextCommand": "tags",
            "description": "Annotates specified fields in your search results with tags.",
            "replacement": " | tags"
        }, {"nextCommand": "tagset", "description": "", "replacement": " | tagset"}, {
            "nextCommand": "tail",
            "description": "Returns the last n number of specified results.",
            "replacement": " | tail"
        }, {"nextCommand": "test", "description": "", "replacement": " | test"}, {
            "nextCommand": "timechart",
            "description": "Creates a time series chart with corresponding table of statistics.",
            "replacement": " | timechart"
        }, {
            "nextCommand": "top",
            "description": "Displays the most common values of a field.",
            "replacement": " | top"
        }, {
            "nextCommand": "transaction",
            "description": "Groups events into transactions.",
            "replacement": " | transaction"
        }, {"nextCommand": "transam", "description": "", "replacement": " | transam"}, {
            "nextCommand": "transpose",
            "description": "Turns rows into columns.",
            "replacement": " | transpose"
        }, {
            "nextCommand": "trendline",
            "description": "Computes the moving averages of fields.",
            "replacement": " | trendline"
        }, {
            "nextCommand": "tscollect",
            "description": "Writes the result table into *.tsidx files using indexed fields format.",
            "replacement": " | tscollect"
        }, {
            "nextCommand": "tstats",
            "description": "Performs statistics on indexed fields in tsidx files, which could come from normal index data, tscollect data, or accelerated datamodels.",
            "replacement": " | tstats"
        }, {
            "nextCommand": "typeahead",
            "description": "Returns typeahead on a specified prefix.",
            "replacement": " | typeahead"
        }, {
            "nextCommand": "typer",
            "description": "Calculates the eventtypes for the search results",
            "replacement": " | typer"
        }, {
            "nextCommand": "uniq",
            "description": "Filters out repeated adjacent results",
            "replacement": " | uniq"
        }, {"nextCommand": "untable", "description": "", "replacement": " | untable"}, {
            "nextCommand": "where",
            "description": "Runs an eval expression to filter the results. The result of the expression must be Boolean.",
            "replacement": " | where"
        }, {
            "nextCommand": "x11",
            "description": "Remove seasonal fluctuations in fields.",
            "replacement": " | x11"
        }, {
            "nextCommand": "xmlkv",
            "description": "Extracts XML key-value pairs.",
            "replacement": " | xmlkv"
        }, {
            "nextCommand": "xmlunescape",
            "description": "Un-escapes XML characters.",
            "replacement": " | xmlunescape"
        }, {
            "nextCommand": "xpath",
            "description": "Extracts the xpath value from FIELD and sets the OUTFIELD attribute.",
            "replacement": " | xpath"
        }, {
            "nextCommand": "xyseries",
            "description": "Converts results into a format suitable for graphing.",
            "replacement": " | xyseries"
        }
    ],
    "commonNextCommands": [
        {
            "nextCommand": "set",
            "description": "Performs set operations on subsearches.",
            "replacement": " | set"
        },
        {
            "nextCommand": "stats",
            "description": "Provides statistics, grouped optionally by field.",
            "replacement": " | stats"
        },
        {
            "nextCommand": "sort",
            "description": "Sorts search results by the specified fields.",
            "replacement": " | sort"
        },
        {
            "nextCommand": "history",
            "description": "Returns a history of searches, either as events or as non-event results (default)",
            "replacement": " | history"
        }
    ],
    "matchingSearches": [
        "index=_internal | stats count by host",
        "(index=* OR index=_*) (index=_audit)"
    ],
    "matchingSearch": "index=",
    "command": {
        "aliases": "",
        "category": "reporting",
        "details": "Calculate aggregate statistics over the dataset, optionally grouped by a list of fields. Aggregate statistics include: \\\\i\\\\ * count, distinct count \\\\i\\\\ * mean, median, mode \\\\i\\\\ * min, max, range, percentiles \\\\i\\\\ * standard deviation, variance \\\\i\\\\ * sum \\\\i\\\\ * earliest and latest occurrence \\\\i\\\\ * first and last (according to input order into stats command) occurrence \\\\p\\\\ Similar to SQL aggregation. If called without a by-clause, one row is produced, which represents the aggregation over the entire incoming result set. If called with a by-clause, one row is produced for each distinct value of the by-clause. The 'partitions' option, if specified, allows stats to partition the input data based on the split-by fields for multithreaded reduce. The 'allnum' option, if true (default = false), computes numerical statistics on each field if and only if all of the values of that field are numerical. The 'delim' option is used to specify how the values in the 'list' or 'values' aggregation are delimited. (default is a single space) When called with the name \"prestats\", it will produce intermediate results (internal).",
        "name": "stats",
        "related": "eventstats, rare, sistats, streamstats, top",
        "shortdesc": "Provides statistics, grouped optionally by field.",
        "syntax": "stats (((c|count|dc|distinct_count|estdc|estdc_error|earliest|latest|avg|stdev|stdevp|var|varp|sum|min|max|mode|median|first|last|earliest|latest|percint|list|values|range) \"(\" <field> \")\") (as <field>)? )+ (by <field-list>)?",
        "examples": [
          [
            "sourcetype=access_combined | top limit=100 referer_domain | stats sum(count)",
            "Search the access logs, and return the number of hits from the top 100 values of \"referer_domain\"."
          ],
          [
            "... | stats avg(*lay) BY date_hour",
            "Return the average for each hour, of any unique field that ends with the string \"lay\" (for example, delay, xdelay, relay, etc)."
          ],
          [
            "... | stats distinct_count(host)",
            "Remove duplicates of results with the same \"host\" value and return the total count of the remaining results."
          ],
          [
            "sourcetype=access* | stats avg(kbps) by host",
            ""
          ],
          [
            "sourcetype=access* | top limit=100 referer_domain | stats sum(count)",
            ""
          ]
        ]
    },
    "search": "index=",
    "searchPrefix": "",
    "savedSearches": [],
    "hasFieldArgs": "1",
    "considers": []
}