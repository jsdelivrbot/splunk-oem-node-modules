import React from 'react';
import DocPage from 'components/DocPage';
import DocExample from 'components/DocExample';
import Specs from 'components/Specs';
import packageData from 'splunk-ui/components/Text/package.json';
import docs from '!!docgen-loader!splunk-ui/components/Text';

const examples = require.context('splunk-ui/components/Text/examples/');
const examplesRaw = require.context('!!raw!splunk-ui/components/Text/examples/');

function Text() {
    return (
        <DocPage {...packageData} description={docs[0].description}>
            <DocExample
                title="Basic"
                description={`Text requires a value prop and an onChange
                    callback to update the value prop for most use cases.`}
                code={examplesRaw('./Basic')}
                example={examples('./Basic').default}
            />
            <DocExample
                title="Uncontrolled"
                description={`Alternately, Text can be uncontrolled and optionally provided a
                    defaultValue. The onChange callback still fires. The value prop cannot be
                    set or updated externally.`}
                code={examplesRaw('./Uncontrolled')}
                example={examples('./Uncontrolled').default}
            />
            <DocExample
                title="Inline"
                description="Passing inline will create an inline element and the input will
                    be it's default size."
                code={examplesRaw('./Inline')}
                example={examples('./Inline').default}
            />
            <DocExample
                title="Disabled"
                description="Disabled will just display text."
                code={examplesRaw('./Disabled')}
                example={examples('./Disabled').default}
            />
            <DocExample
                title="Error"
                description="Setting error will hightlight the field."
                code={examplesRaw('./Error')}
                example={examples('./Error').default}
            />
            <DocExample
                title="Search"
                description="Setting the appearance to search changes the style of the input."
                code={examplesRaw('./Search')}
                example={examples('./Search').default}
            />
            <DocExample
                title="Multiline"
                description="The text control also allows multiline input."
                code={examplesRaw('./Multiline')}
                example={examples('./Multiline').default}
            />
            <DocExample
                title="Size"
                code={examplesRaw('./Size')}
                example={examples('./Size').default}
            />
            <Specs docs={docs[0]} />
        </DocPage>
    );
}

export default Text;
