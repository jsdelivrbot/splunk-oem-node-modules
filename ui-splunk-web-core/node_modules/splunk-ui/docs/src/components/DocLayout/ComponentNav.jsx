import React, { PropTypes } from 'react';
import { _ } from 'splunk-ui/util/i18n';
import { createTestHook } from 'splunk-ui/util/testSupport';
import Nav from 'components/Nav';
import history from 'core/history';
import packageJSON from '../../../../package.json';

const propTypes = {
    current: PropTypes.string,
};

function ComponentNav(props) {
    const { current } = props;
    function createItem(label, to, newTab) {
        const handleClick = (event) => {
            // Internal links are handled internally
            if (/^\//.test(to)) {
                event.preventDefault();
                history.push(to);
            }
        };
        return (
            <Nav.Item
                to={to}
                onClick={handleClick}
                selected={!!to && current === to}
                openInNewContext={newTab}
            >
                {label}
            </Nav.Item>
        );
    }

    return (
        <Nav {...createTestHook(__filename)} version={packageJSON.version}>
            {createItem('Overview', 'Overview')}
            {createItem('Getting Started', 'GettingStarted')}
            {createItem('Change Log', 'ChangeLog')}
            {createItem(
                _('Repo'),
                'https://git.splunk.com/projects/UI/repos/splunk-ui',
                true
            )}
            {createItem(
                _('Report Bug'),
                'https://jira.splunk.com/secure/CreateIssueDetails!init.jspa?pid=15423&issuetype=1&summary=&components=19077&priority=3',
                true
            )}
            {createItem(
                _('Request Feature'),
                'https://jira.splunk.com/secure/CreateIssueDetails!init.jspa?pid=15423&issuetype=35&summary=&components=19077&priority=3',
                true
            )}
            <Nav.Heading>{_('Base')}</Nav.Heading>
            {createItem('Accordion', '/Accordion')}
            {createItem('Button', '/Button')}
            {createItem('Button Group', '/ButtonGroup')}
            {createItem('Code', '/Code')}
            {createItem('Collapsible Panel', '/CollapsiblePanel')}
            {createItem('Concertina', '/Concertina')}
            {createItem('Definition List', '/DefinitionList')}
            {createItem('Dropdown', '/Dropdown')}
            {createItem('Heading', '/Heading')}
            {createItem('Icon', '/Icon')}
            {createItem('JSONTree', '/JSONTree')}
            {createItem('Link', '/Link')}
            {createItem('List', '/List')}
            {createItem('Logo', '/Logo')}
            {createItem('Markdown', '/Markdown')}
            {createItem('Message', '/Message')}
            {createItem('Modal', '/Modal')}
            {createItem('Paginator', '/Paginator')}
            {createItem('Paragraph', '/Paragraph')}
            {createItem('Progress', '/Progress')}
            {createItem('Step Bar', '/StepBar')}
            {createItem('Tab Bar', '/TabBar')}
            {createItem('Tab Layout', '/TabLayout')}
            {createItem('Table', '/Table')}
            {createItem('Tooltip', '/Tooltip')}
            {createItem('Wait Spinner', '/WaitSpinner')}
            <Nav.Heading>{_('Data Entry')}</Nav.Heading>
            {createItem('Color', '/Color')}
            {createItem('Combo Box', '/ComboBox')}
            {createItem('Control Group', '/ControlGroup')}
            {createItem('Date', '/Date')}
            {createItem('File', '/File')}
            {createItem('Multiselect', '/Multiselect')}
            {createItem('Number', '/Number')}
            {createItem('Radio Bar', '/RadioBar')}
            {createItem('Radio List', '/RadioList')}
            {createItem('Select', '/Select')}
            {createItem('Slider', '/Slider')}
            {createItem('Static Content', '/StaticContent')}
            {createItem('Switch', '/Switch')}
            {createItem('Text', '/Text')}
            <Nav.Heading>{_('Utility Components')}</Nav.Heading>
            {createItem('Menu', '/Menu')}
            {createItem('Popover', '/Popover')}
            {createItem('Screen Reader Content', '/ScreenReaderContent')}
            {createItem('Sliding Panels', '/SlidingPanels')}
            {createItem('TransitionOpen', '/TransitionOpen')}
            <Nav.Heading>{_('Utilities')}</Nav.Heading>
            {createItem('Internationalization', '/Internationalization')}
        </Nav>
    );
}
ComponentNav.propTypes = propTypes;
export default ComponentNav;
