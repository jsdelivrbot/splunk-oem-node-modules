import 'core-js';
import React from 'react';
import { render } from 'react-dom';
import { includes } from 'lodash';
import { resolve } from 'universal-router';
import history from 'core/history';
import DocLayout from 'components/DocLayout';
import Error from 'components/Error';
import NotFound from 'components/NotFound';

const requireRoute = require.context('./pages');
const routes = [
    {
        path: '/',
        children: [
            {
                path: '/',
                action: () => ({ redirect: './Overview' }),
            },
            {
                path: '*',
                action: ({ path }) => {
                    const webpackPath = `.${path}`;
                    if (includes(requireRoute.keys(), webpackPath)) {
                        return requireRoute(webpackPath).default;
                    }
                    return NotFound;
                },
            },
        ],
    },
];
const containerEl = document.getElementById('main-app-container');

function handleDidRender() {
    window.scroll(0, 0);
}

function handleLocationChange(location) {
    resolve(routes, {
        path: location.pathname,
    }).then(Content => {
        if (Content.redirect) {
            history.replace(Content.redirect);
            return;
        }
        const page = (
            <DocLayout location={location.pathname}>
                <Content />
            </DocLayout>
        );
        render(page, containerEl, handleDidRender);
    }).catch((error) => {
        const page = (
            <DocLayout location={location.pathname}>
                <Error error={error} />
            </DocLayout>
        );
        render(page, containerEl, handleDidRender);
    });
}
history.listen(handleLocationChange);
handleLocationChange(history.location);
