/* eslint-env mocha */

import React from 'react';
import { assert } from 'chai';
import { mount } from 'enzyme';
import Button from 'splunk-ui/components/Button';
import Popover from './Popover';

const popoverSelector = '[data-component="splunk-ui:/components/Popover/Popover"]';

describe('Popover', () => {
    it('renders', () => {
        const wrapper = mount(<Popover name="World" />);
        assert.ok(wrapper);
        wrapper.unmount();
    });

    it('first element takes focus', (done) => {
        const anchor = mount(<a href="" />);
        const wrapper = mount(
            <Popover open takeFocus anchor={anchor.instance()}>
                <Button>1</Button>
                <Button>2</Button>
            </Popover>
        );
        setTimeout(() => {
            const menu = document.querySelector(popoverSelector);
            assert.isTrue(menu.contains(document.activeElement));
            assert.ok(document.activeElement.webkitMatchesSelector(':first-child'));
            wrapper.unmount();
            done();
        }, 10);
    });

    it('container takes focus', (done) => {
        const anchor = mount(<a href="" />);
        const wrapper = mount(<Popover open takeFocus anchor={anchor.instance()} />);
        setTimeout(() => {
            const menu = document.querySelector(popoverSelector);
            assert.equal(menu.firstChild, document.activeElement);
            wrapper.unmount();
            done();
        }, 10);
    });

    it('does not container takes focus', (done) => {
        const anchor = mount(<a href="" />);
        const wrapper = mount(<Popover open anchor={anchor.instance()} />);
        setTimeout(() => {
            const menu = document.querySelector(popoverSelector);
            assert.notEqual(menu.firstChild, document.activeElement);
            wrapper.unmount();
            done();
        }, 10);
    });
});
