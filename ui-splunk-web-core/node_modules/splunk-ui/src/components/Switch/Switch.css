.main {
    position: relative;
    padding: 5px 0;

    &[data-size=small] {
        font-size: $fontSizeSmall;
        padding: 3px 0;
    }
}

$diameter: $baseLineHeight;

.switch {
    display: inline-block;
    position: relative;
    width: $diameter;
    height: $diameter;

    &:not([disabled]) {
        @mixin interactive;
    }

    &:focus {
        border-color: color($focusColor a(80%));
        outline: 0;
        box-shadow: $focusShadow;
    }

    &[disabled] {
        color: $textDisabledColor;
        background-color: $gray96;
        border: 1px solid $borderLightColor;
        cursor: not-allowed;
    }
}

.radio {
    composes: switch;

    &:not([disabled]),
    & {
        border-radius: 50%;
    }

    &[aria-checked=true]::after {
        @mixin reset block;
        content: '';

        position: absolute;
        left: 3px;
        top: 3px;

        width: calc($diameter - 8px);
        height: calc($diameter - 8px);
        border-radius: 50%;

        background-color: currentColor;
    }

    &[disabled]::after {
        background-color: $textDisabledColor;
    }
}

.checkbox {
    composes: switch;
    border-radius: $baseBorderRadius;

    padding: 2px;
    line-height: $diameter;

    margin-bottom: 0;
    font-size: 10px;
    text-align: center;
    vertical-align: middle;
}

.toggle {
    display: inline-block;
    position: relative;

    width: calc($diameter * 2);
    height: $diameter;
    background-color: $gray96;
    border-radius: calc($diameter / 2);
    transition: background-color 200ms;

    &:not([disabled]) {
        border: 1px solid $borderColor;
        box-shadow: inset 0 2px 2px rgba(0, 0, 0, 0.12);

        .indicator {
            @mixin interactive;
            border-radius: 50%;
        }

        &:hover  .indicator {
            @mixin interactive-hover;
        }
    }

    &[disabled] {
        border: 1px solid $borderLightColor;
        box-shadow: inset 0 2px 2px rgba(0, 0, 0, 0.06);
        background-color: $gray96;

        .indicator {
            border-color: color($borderLightColor a(0.8));
        }
    }

    &[aria-checked=true] {
        background-color: $brandColor;
        border-color: $brandColor;

        &[disabled] {
            background-color: color($brandColor blend($white 50%));
            border-color: transparent;
        }
    }

    &:focus {
        outline: 0;
        box-shadow: $focusShadow;

        .toggleFocus {
            border-color: color($focusColor a(80%));
        }
    }
}

.toggleFocus {
    position: absolute;
    border: 1px solid transparent;
    transition: border-color 200ms;
    border-radius: calc($diameter / 2);
    top: -1px;
    right: -1px;
    bottom: -1px;
    left: -1px;
    z-index: 1;
}

.indicator {
    @mixin interactive;

    box-sizing: border-box;
    height: $diameter;
    width: $diameter;
    border-radius: calc($diameter / 2);
    position: absolute;
    left: -1px;
    top: -1px;
    transition: left 200ms;

    [aria-checked=true] & {
        left: calc(100% - $diameter + 1px);
    }
}

.label {
    @mixin reset inline-block;
    /* stylelint-disable length-zero-no-unit */
    flex: 1 1 auto;
    /* stylelint-enable */
    margin-left: 5px;

    &[data-size=small] {
        font-size: $fontSizeSmall;
        margin-top: 1px;
    }
}
