import React, { Component, PropTypes } from 'react';
import { map } from 'lodash';
import toClassName from 'splunk-ui/util/toClassName';

import Row from './Row';
import css from './Head.css';

class Head extends Component {
    static splunkUiType = 'Table.Head';

    static propTypes = {
        /**
         * `children` should be `Table.HeadCell`.
         */
        children: PropTypes.node,
        /** @docs-ignore. */
        className: PropTypes.string,
    };

    getCellWidths() {
        const headRowCells = this.el
            .firstElementChild
            .children;
        return map(headRowCells, el => {
            const computedStyle = window.getComputedStyle(el);
            return el.clientWidth -
                parseFloat(computedStyle.getPropertyValue('padding-right')) -
                parseFloat(computedStyle.getPropertyValue('padding-left'));
        });
    }

    getClientHeight() {
        return this.el.clientHeight;
    }

    render() {
        const { children, className, ...otherProps } = this.props;
        return (
            <thead
                ref={el => this.el = el}
                className={toClassName(css.main, className)}
                {...otherProps}
            >
                <Row>
                    {children}
                </Row>
            </thead>
        );
    }
}

export default Head;
