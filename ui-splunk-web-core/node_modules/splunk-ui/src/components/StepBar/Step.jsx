import React, { PropTypes } from 'react';
import { createTestHook } from 'splunk-ui/util/testSupport';
import toClassName from 'splunk-ui/util/toClassName';
import css from './Step.css';

const propTypes = {
    /** @docs-ignore */
    className: PropTypes.string,
    /** The text shown in the button. */
    label: PropTypes.string,
    /** @docs-ignore. */
    isLast: PropTypes.bool,
    /** @docs-ignore. Is the tab active. */
    status: PropTypes.oneOf(['prev', 'active', 'next']),
    /**
     * A unique id for this step and used by the StepBar to keep track of the open Step.
     * Defaults to a zero-based index matching the component's position in StepBar.
     */
    stepId: PropTypes.any,
};

const defaultProps = {
    status: 'next',
    isLast: false,
};

export default function Step(props) {
    const { className, label, isLast, status, stepId, ...otherProps } = props;
    const classes = toClassName(css.main, className);
    return (
        <li
            className={classes}
            data-status={status}
            data-step-id={stepId}
            {...createTestHook(__filename)}
            {...otherProps}
        >
            <svg
                className={css.svg}
                data-status={status}
                width="100%"
                height="21px"
                viewBox="0 0 100 21"
                preserveAspectRatio="none"
                xmlns="http://www.w3.org/2000/svg"
            >
                <rect x="0" y="9" width={isLast ? '50%' : '100%'} height="3" className={css.gray} />
                {status === 'active' && (
                    <rect x="0" y="9" width="50%" height="3" className={css.brand} />
                )}
                {status === 'prev' && (
                    <rect x="0" y="9" width="100%" height="3" className={css.brand} />
                )}
            </svg>
            <svg
                className={css.svg}
                data-status={status}
                width="100%"
                height="21px"
                viewBox="0 0 21 21"
                xmlns="http://www.w3.org/2000/svg"
            >
                {!isLast && status === 'active' && (
                    <circle cx="50%" cy="50%" r="8.5" className={css.brand} />
                )}
                {isLast && (
                    <circle cx="50%" cy="50%" r="8.5" className={css.last} />
                )}
                {isLast && status === 'active' && (
                    <circle cx="50%" cy="50%" r="10.5" className={css.brand} />
                )}
                {isLast && status === 'active' && (
                    <path d="M5.5 11L9 14.5, 16 7" className={css.check} />
                )}
            </svg>
            {label}
        </li>
    );
}

Step.propTypes = propTypes;
Step.defaultProps = defaultProps;
