/* eslint-env mocha */

import React from 'react';
import { assert } from 'chai';
import { mount } from 'enzyme';
import sinon from 'sinon';
import RadioList from './RadioList';

describe('RadioList', () => {
    describe('uncontrolled', () => {
        let container;
        let wrapper;
        beforeEach(() => {
            container = document.createElement('div');
            document.body.appendChild(container);
            wrapper = mount((
                <RadioList defaultValue={3}>
                    <RadioList.Option value={1}>One</RadioList.Option>
                    <RadioList.Option value={2}>Two</RadioList.Option>
                    <RadioList.Option value={3}>Three Three Three</RadioList.Option>
                    <RadioList.Option value={4}>Four</RadioList.Option>
                </RadioList>
            ), {
                attachTo: container,
            });
            assert.ok(wrapper);
        });

        afterEach(() => {
            container.remove();
            wrapper.unmount();
            container = null;
            wrapper = null;
        });

        it('sets default', () => {
            const selected = wrapper.find('Option').at(2).find('button[aria-checked=true]');
            assert.equal(selected.length, 1);
        });

        it('updates state', () => {
            const newOption = wrapper.find('Option').at(0).find('button');

            newOption.simulate('click');

            assert.equal(newOption.prop('aria-checked'), true);
        });

        it('throws if update defaultValue', () => {
            assert.throws(() => wrapper.setProps({ defaultValue: 4 }));
        });

        it('throws if convert to controlled', () => {
            assert.throws(() => wrapper.setProps({ value: 4 }));
        });
    });

    describe('controlled', () => {
        let container;
        let wrapper;
        const handleChange = sinon.spy();

        beforeEach(() => {
            container = document.createElement('div');
            document.body.appendChild(container);

            wrapper = mount((
                <RadioList value={3} onChange={handleChange}>
                    <RadioList.Option value={1}>One</RadioList.Option>
                    <RadioList.Option value={2}>Two</RadioList.Option>
                    <RadioList.Option value={3}>Three Three Three</RadioList.Option>
                    <RadioList.Option value={4}>Four</RadioList.Option>
                </RadioList>
            ), {
                attachTo: container,
            });
            assert.ok(wrapper);
        });

        afterEach(() => {
            container.remove();
            wrapper.unmount();
            container = null;
            wrapper = null;

            handleChange.reset();
        });

        it('click events trigger callbacks', () => {
            wrapper.find('button').first().simulate('click');

            assert(handleChange.calledOnce,
                'The onChange handler is called exactly once');
        });

        it('can update value', () => {
            wrapper.setProps({ value: 1 });
            assert.equal(wrapper.prop('value'), 1);
            const selected = wrapper.find('Option').at(0).find('button[aria-checked=true]');
            assert.equal(selected.length, 1);
        });
    });
});
