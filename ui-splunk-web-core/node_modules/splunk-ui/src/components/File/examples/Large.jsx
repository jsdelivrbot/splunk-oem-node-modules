import React, { Component } from 'react';
import File from 'splunk-ui/components/File';
import Button from 'splunk-ui/components/Button';


class Example extends Component {
    constructor(props, ...rest) {
        super(props, ...rest);

        this.state = {
            open: false,
        };


        this.fileReader = new FileReader();
    }

    handleAddFiles = (files) => {
        const file = files[0];

        if (this.fileReader.readyState === 1) {
            this.fileReader.abort();
        }

        this.fileReader.onload = () => {
            this.setState({
                filename: file.name,
                value: this.fileReader.result,
            });
        };

        this.fileReader.readAsBinaryString(file);
    }

    handleRemoveFile = () => {
        if (this.fileReader.readyState === 1) {
            this.fileReader.abort();
        }

        this.setState({
            filename: null,
            value: null,
        });
    }

    handleOpen = () => {
        this.setState({
            open: true,
        });
    }

    handleClose = () => {
        this.setState({
            open: false,
        });
    }

    render() {
        const modalStyles = {
            position: 'fixed',
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            zIndex: 100,
            backgroundColor: 'white',
        };

        const closeStyles = {
            position: 'absolute',
            bottom: 20,
            left: '50%',
        };

        return (
            <div style={{ maxWidth: 300 }}>
                <Button onClick={this.handleOpen} label="Open Example" />

                {this.state.open &&
                    <div style={modalStyles}>
                        <File
                            size="large"
                            help="This is some help content suggesting a max size of 2MB."
                            onAddFiles={this.handleAddFiles}
                            onRemoveFile={this.handleRemoveFile}
                        >

                            {this.state.filename && <File.Item name={this.state.filename} />}
                        </File>

                        <Button
                            onClick={this.handleClose}
                            label="Close Example"
                            style={closeStyles}
                        />
                    </div>
                }
            </div>
        );
    }
}

export default Example;
