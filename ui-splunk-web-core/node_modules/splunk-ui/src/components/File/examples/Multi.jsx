import React, { Component } from 'react';
import File from 'splunk-ui/components/File';

class Example extends Component {
    constructor(props, ...rest) {
        super(props, ...rest);

        this.state = {
            files: [],
            size: 'medium',
        };
    }

    handleAddFiles = (files) => {
        const newItems = files.map(this.loadFile);

        this.setState({
            files: this.state.files.concat(newItems),
        });
    }

    loadFile(file) {
        const fileItem = {
            name: file.name,
        };

        const fileReader = new FileReader();
        fileReader.onload = () => fileItem.value = fileReader.result;
        fileReader.readAsBinaryString(file);

        return fileItem;
    }

    handleRemoveFile = ({ itemId }) => {
        const files = this.state.files.slice(0);
        files.splice(itemId, 1);

        this.setState({
            files,
        });
    }

    render() {
        const children = this.state.files.map((item, i) => (
            <File.Item name={item.name} key={i} />
        ));

        return (
            <div style={{ maxWidth: 300 }}>
                <File
                    size={this.state.size}
                    onAddFiles={this.handleAddFiles}
                    onRemoveFile={this.handleRemoveFile}
                    allowMultiple
                >
                    {children}
                </File>
            </div>
        );
    }
}

export default Example;
