module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__filename) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _lodash = __webpack_require__(9);
	
	var _errorHandling = __webpack_require__(11);
	
	var _filter = __webpack_require__(31);
	
	var _filter2 = _interopRequireDefault(_filter);
	
	var _guid = __webpack_require__(16);
	
	var _guid2 = _interopRequireDefault(_guid);
	
	var _i18n = __webpack_require__(3);
	
	var _keyboard = __webpack_require__(12);
	
	var _testSupport = __webpack_require__(2);
	
	var _toClassName = __webpack_require__(7);
	
	var _toClassName2 = _interopRequireDefault(_toClassName);
	
	var _userAgent = __webpack_require__(33);
	
	var _Box = __webpack_require__(10);
	
	var _Box2 = _interopRequireDefault(_Box);
	
	var _ResultsMenu = __webpack_require__(26);
	
	var _ResultsMenu2 = _interopRequireDefault(_ResultsMenu);
	
	var _Popover = __webpack_require__(19);
	
	var _Popover2 = _interopRequireDefault(_Popover);
	
	var _Divider = __webpack_require__(194);
	
	var _Divider2 = _interopRequireDefault(_Divider);
	
	var _Item = __webpack_require__(195);
	
	var _Item2 = _interopRequireDefault(_Item);
	
	var _Option = __webpack_require__(196);
	
	var _Option2 = _interopRequireDefault(_Option);
	
	var _Multiselect = __webpack_require__(495);
	
	var _Multiselect2 = _interopRequireDefault(_Multiselect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Multiselect = function (_Component) {
	    _inherits(Multiselect, _Component);
	
	    function Multiselect(props) {
	        var _ref;
	
	        _classCallCheck(this, Multiselect);
	
	        for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	            rest[_key - 1] = arguments[_key];
	        }
	
	        var _this = _possibleConstructorReturn(this, (_ref = Multiselect.__proto__ || Object.getPrototypeOf(Multiselect)).call.apply(_ref, [this, props].concat(rest)));
	
	        _this.handleClick = function () {
	            _this.input.focus();
	        };
	
	        _this.handleRequestRemove = function (e, _ref2) {
	            var value = _ref2.value;
	
	            (0, _lodash.defer)(function () {
	                return _this.removeValue(e, value);
	            }); // allow the event to bubble before removing.
	        };
	
	        _this.handleInputFocus = function () {
	            _this.setState({
	                hasFocus: true,
	                open: true
	            });
	        };
	
	        _this.handleInputKeyDown = function (e) {
	            if ((0, _keyboard.keycode)(e) === 'tab' && _this.state.open) {
	                _this.setState({
	                    open: false
	                });
	            }
	
	            if (e.shiftKey || e.metaKey || e.ctrlKey) {
	                return;
	            }
	
	            if ((0, _keyboard.keycode)(e) === 'down') {
	                e.preventDefault();
	
	                if (_this.state.open) {
	                    _this.setState({
	                        activeIndex: Math.min(_this.state.activeIndex + 1, _this.availableOptionCount - 1)
	                    });
	                } else {
	                    _this.setState({
	                        activeIndex: 0,
	                        open: true
	                    });
	                }
	            }
	
	            if ((0, _keyboard.keycode)(e) === 'up') {
	                e.preventDefault();
	
	                if (_this.state.open) {
	                    _this.setState({
	                        activeIndex: Math.max(_this.state.activeIndex - 1, 0)
	                    });
	                } else {
	                    _this.setState({
	                        activeIndex: 0,
	                        open: true
	                    });
	                }
	            }
	
	            if ((0, _keyboard.keycode)(e) === 'enter' && _this.activeValue && _this.state.open) {
	                _this.addValue(e, _this.activeValue);
	            }
	
	            if ((0, _keyboard.keycode)(e) === 'backspace' && _this.input.value === '' && _this.getCurrentValues().length) {
	                _this.removeValue(e, (0, _lodash.last)(_this.getCurrentValues()));
	            }
	        };
	
	        _this.handleInputChange = function (e) {
	            _this.setState({
	                filterKeyword: e.target.value,
	                open: true,
	                activeIndex: 0
	            });
	
	            _this.props.onFilterChange(e, { keyword: e.target.value });
	        };
	
	        _this.handleMenuOptionClick = function (e, _ref3) {
	            var value = _ref3.value;
	
	            _this.addValue(e, value);
	            _this.input.focus();
	        };
	
	        _this.handleInputBlur = function () {
	            _this.setState({
	                hasFocus: false
	            });
	        };
	
	        _this.handleRequestClose = function (_ref4) {
	            var reason = _ref4.reason,
	                event = _ref4.event;
	
	            if (reason === 'escapeKey' || reason === 'offScreen' || !_this.state.el.contains(event.target)) {
	                _this.setState({
	                    open: false
	                });
	            }
	
	            if (reason === 'escapeKey') {
	                _this.input.focus();
	            }
	        };
	
	        _this.handleMount = function (container) {
	            _this.setState({
	                el: container && container.getEl()
	            });
	        };
	
	        _this.handleActiveOptionMount = function (c) {
	            if (c) {
	                c.scrollIntoViewIfNeeded();
	            }
	        };
	
	        _this.renderMenu = function (_ref5) {
	            var anchorWidth = _ref5.anchorWidth,
	                maxHeight = _ref5.maxHeight,
	                placement = _ref5.placement;
	            return _react2.default.createElement(
	                _ResultsMenu2.default,
	                _extends({
	                    placement: placement,
	                    maxHeight: maxHeight,
	                    isLoading: _this.props.isLoadingOptions
	                }, (0, _lodash.pick)(_this.props, 'noOptionsMessage', 'footerMessage', 'animateLoading', 'loadingMessage'), {
	                    style: {
	                        minWidth: (0, _userAgent.isIE11)() && anchorWidth < 300 ? 300 : anchorWidth,
	                        maxWidth: Math.max(anchorWidth, 300)
	                    }
	                }),
	                _this.children
	            );
	        };
	
	        _this.controlledExternally = (0, _lodash.has)(props, 'values');
	
	        _this.state = {
	            hasFocus: false,
	            open: false,
	            menuId: (0, _guid2.default)(),
	            values: props.defaultValues || [],
	            activeIndex: 0,
	            filterKeyword: '',
	            el: null
	        };
	
	        if ((process.env.NODE_ENV !== "production") && _this.isControlled() && (0, _lodash.has)(props, 'defaultValues')) {
	            (0, _errorHandling.invariant)('Multiselect defaultValues prop is not compatible with value prop.');
	        }
	
	        if ((process.env.NODE_ENV !== "production") && _this.isControlled() && props.onChange === _lodash.noop) {
	            (0, _errorHandling.invariant)('Multiselect onChange prop is required. This must update the value prop\n                to retain user input.');
	        }
	        return _this;
	    }
	
	    _createClass(Multiselect, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            if ((process.env.NODE_ENV !== "production") && !this.isControlled() && (0, _lodash.has)(nextProps, 'values')) {
	                (0, _errorHandling.invariant)('Cannot change Multiselect from an uncontrolled component to a\n                controlled one. Prop \'values\' is not valid in subsequent updates if not provided in\n                the initial props.');
	            }
	
	            if ((process.env.NODE_ENV !== "production") && nextProps.defaultValues !== this.props.defaultValues) {
	                (0, _errorHandling.invariant)('Cannot change Multiselect defaultValues after set.');
	            }
	
	            if (this.isControlled() && nextProps.values !== this.props.values) {
	                this.setState({
	                    filterKeyword: '',
	                    activeIndex: 0
	                });
	            }
	        }
	    }, {
	        key: 'getCurrentValues',
	        value: function getCurrentValues() {
	            return this.isControlled() ? this.props.values : this.state.values;
	        }
	    }, {
	        key: 'isControlled',
	        value: function isControlled() {
	            return this.controlledExternally;
	        }
	
	        /**
	        * Place focus on the text input.
	        */
	
	    }, {
	        key: 'focus',
	        value: function focus() {
	            if (this.input) {
	                this.input.focus();
	            }
	        }
	    }, {
	        key: 'addValue',
	        value: function addValue(e, value) {
	            var values = this.getCurrentValues().concat([value]);
	
	            if (!this.isControlled()) {
	                this.setState({
	                    values: values,
	                    activeIndex: 0,
	                    open: true,
	                    filterKeyword: ''
	                });
	            }
	
	            this.props.onChange(e, { values: values });
	        }
	    }, {
	        key: 'removeValue',
	        value: function removeValue(e, value) {
	            var values = (0, _lodash.without)(this.getCurrentValues(), value);
	
	            if (!this.isControlled()) {
	                this.setState({ values: values });
	            }
	
	            this.props.onChange(e, { values: values });
	        }
	    }, {
	        key: 'renderButtons',
	        value: function renderButtons(selectedItems) {
	            var _this2 = this;
	
	            // selectedItems may contain items or unmatched values at this point
	            return selectedItems.map(function (item, index) {
	                var button = _react2.default.createElement(
	                    'span',
	                    {
	                        className: _Multiselect2.default.selectedItem,
	                        key: index + 1
	                    },
	                    _react2.default.createElement(_Item2.default, {
	                        label: item.props ? item.props.label : item,
	                        icon: item.props ? item.props.icon : null,
	                        size: _this2.props.size,
	                        disabled: _this2.props.disabled,
	                        onRequestRemove: _this2.handleRequestRemove,
	                        value: item.props ? item.props.value : item
	                    })
	                );
	                return button;
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this3 = this;
	
	            var _props = this.props,
	                allowNewValues = _props.allowNewValues,
	                children = _props.children,
	                className = _props.className,
	                controlledFilter = _props.controlledFilter,
	                describedBy = _props.describedBy,
	                disabled = _props.disabled,
	                error = _props.error,
	                inline = _props.inline,
	                placeholder = _props.placeholder,
	                scrollContainer = _props.scrollContainer,
	                size = _props.size,
	                otherProps = _objectWithoutProperties(_props, ['allowNewValues', 'children', 'className', 'controlledFilter', 'describedBy', 'disabled', 'error', 'inline', 'placeholder', 'scrollContainer', 'size']);
	
	            var currentValues = this.getCurrentValues();
	            var selectedItems = currentValues.slice(0);
	            var menuId = this.state.menuId;
	            var foundExactMatch = currentValues.indexOf(this.state.filterKeyword) >= 0;
	
	            // Map Options to selected values
	            if (currentValues && currentValues.length) {
	                _react.Children.forEach(children, function (item) {
	                    var selectedIndex = currentValues.indexOf(item.props.value);
	
	                    if (selectedIndex !== -1) {
	                        selectedItems[selectedIndex] = item;
	                    }
	                });
	            }
	
	            // Filter the items
	            var childrenFiltered = controlledFilter ? children : _filter2.default.filterByKeywords(_react.Children.toArray(children), this.state.filterKeyword, function (item) {
	                // Return the filtering value
	                if (item.type === _Option2.default) {
	                    return item.props.label;
	                }
	                return null;
	            });
	
	            this.availableOptionCount = 0;
	            this.activeValue = null;
	
	            this.children = _react.Children.map(childrenFiltered, function (item, i) {
	                if (item.type === _Divider2.default) {
	                    return item;
	                }
	
	                // find out if the search string exactly matches a value
	                if (item.props.value === _this3.state.filterKeyword) {
	                    foundExactMatch = true;
	                }
	
	                // remove items that are already selected
	                var selectedIndex = currentValues.indexOf(item.props.value);
	                if (selectedIndex >= 0) {
	                    return null;
	                }
	
	                // find out if the search string exactly matches a value
	                var clonedItem = _react2.default.cloneElement(item, {
	                    key: item.key || i,
	                    onClick: _this3.handleMenuOptionClick,
	                    selectable: false
	                });
	
	                return clonedItem;
	            });
	
	            // Add the option to add the new value
	            if (allowNewValues && !foundExactMatch && this.state.filterKeyword) {
	                this.children.unshift(_react2.default.createElement(_ResultsMenu2.default.Item, {
	                    label: this.state.filterKeyword + ' (new value)',
	                    value: this.state.filterKeyword,
	                    key: 'newValue'
	                }));
	            }
	            if (open) {
	                // highlight the selected Item
	                this.children = _react.Children.map(this.children, function (item) {
	                    if (item.type === _Divider2.default) {
	                        return item;
	                    }
	
	                    var active = _this3.availableOptionCount === _this3.state.activeIndex;
	                    _this3.availableOptionCount++;
	
	                    if (!active) {
	                        return item;
	                    }
	
	                    _this3.activeValue = item.props.value;
	
	                    var clonedItem = _react2.default.cloneElement(item, {
	                        active: active,
	                        id: menuId + '-active',
	                        ref: _this3.handleActiveOptionMount
	                    });
	
	                    return clonedItem;
	                })
	
	                // remove consecutive dividers and last divider
	                .reduce(function (accum, current, index, original) {
	                    if (current.type === _Divider2.default) {
	                        if (accum.length === 0 || accum[accum.length - 1].type === _Divider2.default || original.length - 1 === index) {
	                            return accum;
	                        }
	                    }
	                    accum.push(current);
	                    return accum;
	                }, []);
	            }
	
	            var inputWidth = this.state.filterKeyword.length * 0.8 + 'em';
	
	            return _react2.default.createElement(
	                _Box2.default,
	                _extends({
	                    className: (0, _toClassName2.default)(_Multiselect2.default.main, className),
	                    inline: inline,
	                    'data-hasFocus': this.state.hasFocus || null
	                }, (0, _testSupport.createTestHook)(__filename), (0, _lodash.omit)(otherProps, 'animateLoading', 'controlledFilter', 'defaultValues', 'footerMessage', 'isLoadingOptions', 'noOptionsMessage', 'onChange', 'onFilterChange', 'values'), {
	                    onClick: disabled ? null : this.handleClick,
	                    'data-disabled': disabled || null,
	                    'data-size': size,
	                    ref: this.handleMount,
	                    role: 'combobox',
	                    'aria-haspopup': !disabled || null,
	                    'aria-disabled': disabled || null,
	                    'aria-expanded': this.state.open,
	                    'aria-invalid': error || null,
	                    'aria-owns': menuId,
	                    'aria-activedescendant': disabled ? null : menuId + '-active',
	                    'aria-describedby': describedBy
	                }),
	                this.renderButtons(selectedItems),
	                !disabled && _react2.default.createElement('input', {
	                    className: _Multiselect2.default.input,
	                    ref: function ref(el) {
	                        return _this3.input = el;
	                    },
	                    onBlur: this.handleInputBlur,
	                    onFocus: this.handleInputFocus,
	                    onChange: this.handleInputChange,
	                    onKeyDown: this.handleInputKeyDown,
	                    value: this.state.filterKeyword,
	                    autoComplete: 'off',
	                    autoCorrect: 'off',
	                    autoCapitalize: 'off',
	                    spellCheck: 'false',
	                    role: 'textbox',
	                    'aria-autocomplete': 'list',
	                    style: { flexBasis: inputWidth, width: inputWidth },
	                    placeholder: currentValues.length ? '' : placeholder,
	                    'data-size': size
	                }),
	                !disabled && _react2.default.createElement(
	                    _Popover2.default,
	                    {
	                        open: this.state.open && !!this.state.el,
	                        autoCloseWhenOffScreen: true,
	                        anchor: this.state.el,
	                        appearance: 'light',
	                        onRequestClose: this.handleRequestClose,
	                        scrollContainer: scrollContainer,
	                        canCoverAnchor: false,
	                        defaultPlacement: 'vertical',
	                        repositionMode: 'flip',
	                        id: menuId
	                    },
	                    this.renderMenu
	                )
	            );
	        }
	    }]);
	
	    return Multiselect;
	}(_react.Component);
	
	Multiselect.propTypes = {
	    /*
	     * Whether or not to show the wait spinner when loading. It's recommended to set this to
	     * `true` when loading may take more than one second.
	     */
	    animateLoading: _react.PropTypes.bool,
	    /**
	    * Allow the user to add arbitrary values.
	    */
	    allowNewValues: _react.PropTypes.bool,
	    /**
	     * `children` should be `Multiselect.Option` or `Multiselect.Divider`.
	     **/
	    children: _react.PropTypes.node,
	    /** @docs-ignore */
	    className: _react.PropTypes.string,
	    /** If true, this component will not handle filtering. The parent must update the
	     * Options based on the onFilterChange value. */
	    controlledFilter: _react.PropTypes.bool,
	    /**
	    * Set this property instead of value to keep the value uncontrolled.
	    */
	    defaultValues: _react.PropTypes.array,
	    /**
	     * The id of the description. When placed in a ControlGroup, this automatically set to the
	     * ControlGroup's help component.
	     */
	    describedBy: _react.PropTypes.string,
	    /** Disable adding and removing. */
	    disabled: _react.PropTypes.bool,
	    /** Display as in an error. */
	    error: _react.PropTypes.bool,
	    /**
	     * The footer message can show additional information, such as a truncation message.
	     */
	    footerMessage: _react.PropTypes.node,
	    /** Make the control an inline block with variable width. */
	    inline: _react.PropTypes.bool,
	    /*
	     * Whether or not to show the loading message and/or wait spinner. It's recommended to
	     * remove the old children while loading new children to ensure the loading message is
	     * not hidden.
	     */
	    isLoadingOptions: _react.PropTypes.bool,
	    /**
	    * The id of the label. When placed in a ControlGroup, this automatically set to the
	    * ControlGroup's label.
	    */
	    labelledBy: _react.PropTypes.string,
	    /**
	     * The loading message to show when isLoadingOptions. */
	    loadingMessage: _react.PropTypes.node,
	    /**
	     * The noOptionsMessage is shown when there are no children and not loading, such as when
	     * there are no Options matching the filter. This can be customized to the type of content,
	     * such as "No matching dashboards"; insert other content, such as an error message; or
	     * communicate a minimum number of chararters to enter to see results. */
	    noOptionsMessage: _react.PropTypes.node,
	    /**
	    * A callback to receive the change events.  If values is set, this callback is required.
	    * This must set the values prop to retain the change.
	    */
	    onChange: _react.PropTypes.func,
	    /**
	    * A callback with the change event and value of the filter box. Providing this callback and
	    * setting controlledFilter to true enables you to filter and update the children by other
	    * criteria.
	    */
	    onFilterChange: _react.PropTypes.func,
	    /**
	    * If 'value' is undefined or don't match an item, the Button will display this text.
	    */
	    placeholder: _react.PropTypes.string,
	    /**
	     * The container with which the popover must scroll to stay aligned with the anchor.
	     */
	    scrollContainer: _react.PropTypes.oneOfType([_react2.default.PropTypes.object, _react2.default.PropTypes.string]),
	    /** The overall size of the control. */
	    size: _react.PropTypes.oneOf(['small', 'medium']),
	    /**
	     * Value will be matched to one of the children to deduce the label and/or icon for the
	     * toggle.
	     */
	    values: _react.PropTypes.array
	};
	Multiselect.defaultProps = {
	    animateLoading: false,
	    allowNewValues: false,
	    disabled: false,
	    inline: false,
	    isLoadingOptions: false,
	    noOptionsMessage: (0, _i18n._)('No matches'),
	    onChange: _lodash.noop,
	    onFilterChange: _lodash.noop,
	    placeholder: (0, _i18n._)('Select...'),
	    scrollContainer: 'window',
	    size: 'medium'
	};
	Multiselect.Option = _Option2.default;
	Multiselect.Divider = _Divider2.default;
	exports.default = Multiselect;
	/* WEBPACK VAR INJECTION */}.call(exports, "src/components/Multiselect/Multiselect.jsx"))

/***/ },

/***/ 1:
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },

/***/ 2:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/testSupport");

/***/ },

/***/ 3:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/i18n");

/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },

/***/ 6:
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },

/***/ 7:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/toClassName");

/***/ },

/***/ 9:
/***/ function(module, exports) {

	module.exports = require("lodash");

/***/ },

/***/ 10:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/components/Box");

/***/ },

/***/ 11:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/errorHandling");

/***/ },

/***/ 12:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/keyboard");

/***/ },

/***/ 13:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/components/Clickable");

/***/ },

/***/ 16:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/guid");

/***/ },

/***/ 18:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/components/Menu");

/***/ },

/***/ 19:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/components/Popover");

/***/ },

/***/ 26:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/components/ResultsMenu");

/***/ },

/***/ 31:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/filter");

/***/ },

/***/ 33:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/userAgent");

/***/ },

/***/ 54:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/icons/Remove");

/***/ },

/***/ 194:
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Menu = __webpack_require__(18);
	
	var _Menu2 = _interopRequireDefault(_Menu);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Menu2.default.Divider;

/***/ },

/***/ 195:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__filename) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = Item;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _testSupport = __webpack_require__(2);
	
	var _Clickable = __webpack_require__(13);
	
	var _Clickable2 = _interopRequireDefault(_Clickable);
	
	var _Remove = __webpack_require__(54);
	
	var _Remove2 = _interopRequireDefault(_Remove);
	
	var _Item = __webpack_require__(494);
	
	var _Item2 = _interopRequireDefault(_Item);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var propTypes = {
	    /** Disabled click events.  */
	    disabled: _react.PropTypes.bool,
	    /** The label on the left.  */
	    label: _react.PropTypes.string,
	    /** Adds a remove link to the right.  */
	    onRequestRemove: _react.PropTypes.func,
	    size: _react.PropTypes.oneOf(['small', 'medium']),
	    /** value is included in data for onLabelClick and onRequestRemove */
	    value: _react.PropTypes.any
	};
	
	var defaultProps = {
	    size: 'medium'
	};
	
	function Item(props) {
	    var disabled = props.disabled,
	        label = props.label,
	        onRequestRemove = props.onRequestRemove,
	        size = props.size,
	        value = props.value,
	        otherProps = _objectWithoutProperties(props, ['disabled', 'label', 'onRequestRemove', 'size', 'value']);
	
	    function handleRemoveClick(e) {
	        onRequestRemove(e, { value: value });
	    }
	
	    return _react2.default.createElement(
	        _Clickable2.default,
	        _extends({
	            className: _Item2.default.main,
	            onClick: handleRemoveClick,
	            disabled: disabled,
	            contentWrapperClassName: _Item2.default.inner,
	            'data-size': size
	        }, (0, _testSupport.createTestHook)(__filename), otherProps),
	        _react2.default.createElement(
	            'div',
	            { className: _Item2.default.labelInline },
	            label
	        ),
	        !disabled && _react2.default.createElement(
	            'span',
	            { className: _Item2.default.removeInline },
	            _react2.default.createElement(_Remove2.default, null)
	        )
	    );
	}
	
	Item.propTypes = propTypes;
	Item.defaultProps = defaultProps;
	/* WEBPACK VAR INJECTION */}.call(exports, "src/components/Multiselect/Item.jsx"))

/***/ },

/***/ 196:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__filename) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _lodash = __webpack_require__(9);
	
	var _testSupport = __webpack_require__(2);
	
	var _Menu = __webpack_require__(18);
	
	var _Menu2 = _interopRequireDefault(_Menu);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Option = function (_Component) {
	    _inherits(Option, _Component);
	
	    function Option() {
	        var _ref;
	
	        var _temp, _this, _ret;
	
	        _classCallCheck(this, Option);
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Option.__proto__ || Object.getPrototypeOf(Option)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
	            var _this$props = _this.props,
	                onClick = _this$props.onClick,
	                value = _this$props.value,
	                disabled = _this$props.disabled;
	
	            if (!disabled) {
	                onClick(e, { value: value });
	            }
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    _createClass(Option, [{
	        key: 'scrollIntoViewIfNeeded',
	        value: function scrollIntoViewIfNeeded() {
	            this.c.scrollIntoViewIfNeeded();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;
	
	            return _react2.default.createElement(_Menu2.default.Item, _extends({
	                ref: function ref(c) {
	                    return _this2.c = c;
	                }
	            }, (0, _testSupport.createTestHook)(__filename), {
	                selectable: true }, this.props, {
	                onClick: this.handleClick
	            }));
	        }
	    }]);
	
	    return Option;
	}(_react.Component);
	
	Option.propTypes = {
	    /**
	    * Additional information to explain the option, such as "Recommended".
	    */
	    description: _react.PropTypes.string,
	    /**
	    * The description text may appear to the right of the label or under the label.
	    */
	    descriptionPosition: _react2.default.PropTypes.oneOf(['right', 'bottom']),
	    /**
	    * If disabled=true, the option is grayed out and cannot be clicked.
	    */
	    disabled: _react.PropTypes.bool,
	    /**
	    * Adding hidden options can be useful for resolving the selected display label and icon,
	    * when the option should not be in the list. This scenario can arise when Select's filter is
	    * controlled, because the selected item may be filtered out; and when a legacy option is
	    * valid, but should no longer be displayed as a selectable option.
	    */
	    hidden: _react.PropTypes.bool,
	    /**
	    * The icon to show before the label. See the Icon component for more information.
	    */
	    icon: _react.PropTypes.node,
	    /**
	    * The text to show for the option.
	    */
	    label: _react.PropTypes.string.isRequired,
	    /** @docs-ignore */
	    onClick: _react.PropTypes.func,
	    /** @docs-ignore */
	    selected: _react.PropTypes.bool,
	    /**
	    * If truncate=false, wrapping will be disabled and any additional text will be ellipsised.
	    */
	    truncate: _react.PropTypes.bool,
	    /**
	    * The label and/or icon will be placed on the Control's toggle if it matches this value.
	    */
	    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.bool]).isRequired
	};
	Option.defaultProps = {
	    descriptionPosition: 'bottom',
	    disabled: false,
	    onClick: _lodash.noop,
	    selected: false,
	    truncate: false
	};
	exports.default = Option;
	/* WEBPACK VAR INJECTION */}.call(exports, "src/components/Multiselect/Option.jsx"))

/***/ },

/***/ 494:
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(562);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(6)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../tools/web_loaders/theme-loader/index.js!./Item.css", function() {
				var newContent = require("!!./../../../tools/web_loaders/theme-loader/index.js!./Item.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },

/***/ 495:
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(563);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(6)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../tools/web_loaders/theme-loader/index.js!./Multiselect.css", function() {
				var newContent = require("!!./../../../tools/web_loaders/theme-loader/index.js!./Multiselect.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },

/***/ 562:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var styles = {"enterprise":".main_Item__guid__c90191{background-color:#eee;line-height:24px;max-width:100%;border-radius:2px;height:32px;color:#999;display:-webkit-inline-box;display:-webkit-inline-flex;display:inline-flex;-webkit-box-flex:0;-webkit-flex:0 1 auto;flex:0 1 auto;line-height:14px}.main_Item__guid__c90191[data-size=small]{height:18px;padding:2px 5px;font-size:11px;margin-right:2px;margin-bottom:1px}.main_Item__guid__c90191[data-size=medium]{height:20px;padding:3px 5px;margin-right:3px;margin-bottom:2px}.main_Item__guid__c90191:focus{background-color:rgba(61,171,255,.12);color:#3863a0}.main_Item__guid__c90191:not([disabled]):hover{background-color:#f5f5f5;color:#3863a0}.main_Item__guid__c90191[disabled]{cursor:default;background-color:rgba(0,0,0,.05)}.inner_Item__guid__c90191{display:-webkit-box;display:-webkit-flex;display:flex;max-width:100%}.label_Item__guid__c90191{color:#333;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.labelBlock_Item__guid__c90191{-webkit-box-flex:1;-webkit-flex:1 0 0;flex:1 0 0;white-space:nowrap;padding:3px 0 3px 10px}.labelInline_Item__guid__c90191{-webkit-box-flex:0;-webkit-flex:0 1 auto;flex:0 1 auto;white-space:nowrap}[disabled]>.inner_Item__guid__c90191>.labelInline_Item__guid__c90191{color:#bbb}.remove_Item__guid__c90191{color:inherit}.removeBlock_Item__guid__c90191{-webkit-box-flex:0;-webkit-flex:0 0 auto;flex:0 0 auto;border-top-right-radius:2px;border-bottom-right-radius:2px;padding:3px 10px;height:inherit}[data-size=medium]>.removeBlock_Item__guid__c90191{padding:3px 5px}[data-size=small]>.removeBlock_Item__guid__c90191{padding:3px 5px}.removeBlock_Item__guid__c90191:focus{background-color:#e5f4ff;color:#3863a0}.removeBlock_Item__guid__c90191:hover{background-color:#f5f5f5;color:#3863a0}.removeInline_Item__guid__c90191{padding-left:5px;-webkit-box-flex:0;-webkit-flex:0 0 auto;flex:0 0 auto}","lite":".main_Item__guid__c90191{background-color:#eee;line-height:24px;max-width:100%;border-radius:2px;height:32px;color:#999;display:-webkit-inline-box;display:-webkit-inline-flex;display:inline-flex;-webkit-box-flex:0;-webkit-flex:0 1 auto;flex:0 1 auto;line-height:14px}.main_Item__guid__c90191[data-size=small]{height:18px;padding:2px 5px;font-size:11px;margin-right:2px;margin-bottom:1px}.main_Item__guid__c90191[data-size=medium]{height:20px;padding:3px 5px;margin-right:3px;margin-bottom:2px}.main_Item__guid__c90191:focus{background-color:rgba(61,171,255,.12);color:#3863a0}.main_Item__guid__c90191:not([disabled]):hover{background-color:#f5f5f5;color:#3863a0}.main_Item__guid__c90191[disabled]{cursor:default;background-color:rgba(0,0,0,.05)}.inner_Item__guid__c90191{display:-webkit-box;display:-webkit-flex;display:flex;max-width:100%}.label_Item__guid__c90191{color:#333;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.labelBlock_Item__guid__c90191{-webkit-box-flex:1;-webkit-flex:1 0 0;flex:1 0 0;white-space:nowrap;padding:3px 0 3px 10px}.labelInline_Item__guid__c90191{-webkit-box-flex:0;-webkit-flex:0 1 auto;flex:0 1 auto;white-space:nowrap}[disabled]>.inner_Item__guid__c90191>.labelInline_Item__guid__c90191{color:#bbb}.remove_Item__guid__c90191{color:inherit}.removeBlock_Item__guid__c90191{-webkit-box-flex:0;-webkit-flex:0 0 auto;flex:0 0 auto;border-top-right-radius:2px;border-bottom-right-radius:2px;padding:3px 10px;height:inherit}[data-size=medium]>.removeBlock_Item__guid__c90191{padding:3px 5px}[data-size=small]>.removeBlock_Item__guid__c90191{padding:3px 5px}.removeBlock_Item__guid__c90191:focus{background-color:#e5f4ff;color:#3863a0}.removeBlock_Item__guid__c90191:hover{background-color:#f5f5f5;color:#3863a0}.removeInline_Item__guid__c90191{padding-left:5px;-webkit-box-flex:0;-webkit-flex:0 0 auto;flex:0 0 auto}"};
	var themeLocals = {"enterprise":{"main":"main_Item__guid__c90191","inner":"inner_Item__guid__c90191","label":"label_Item__guid__c90191","labelBlock":"labelBlock_Item__guid__c90191 label_Item__guid__c90191","labelInline":"labelInline_Item__guid__c90191 label_Item__guid__c90191","remove":"remove_Item__guid__c90191","removeBlock":"removeBlock_Item__guid__c90191 remove_Item__guid__c90191","removeInline":"removeInline_Item__guid__c90191 remove_Item__guid__c90191"},"lite":{"main":"main_Item__guid__c90191","inner":"inner_Item__guid__c90191","label":"label_Item__guid__c90191","labelBlock":"labelBlock_Item__guid__c90191 label_Item__guid__c90191","labelInline":"labelInline_Item__guid__c90191 label_Item__guid__c90191","remove":"remove_Item__guid__c90191","removeBlock":"removeBlock_Item__guid__c90191 remove_Item__guid__c90191","removeInline":"removeInline_Item__guid__c90191 remove_Item__guid__c90191"}};
	var isLite =
	    window.__splunkd_partials__ &&
	    window.__splunkd_partials__['/services/server/info'] &&
	    window.__splunkd_partials__['/services/server/info']
	        .entry[0].content.product_type === 'lite';
	var theme = window.__splunk_ui_theme__ || (isLite ? 'lite' : 'enterprise');
	
	function s4() {
	  return Math.floor((1 + Math.random()) * 0x10000)
	    .toString(16)
	    .substring(1);
	}
	var guid = module.guid ||  s4() + s4() + s4() + s4();
	// Add guid to locals
	Object.keys(themeLocals[theme]).forEach(function(className) {
	    var value = themeLocals[theme][className];
	    themeLocals[theme][className] =
	        value.replace(/_guid_/g, guid);
	 });
	//  Add guid to styles
	styles[theme] = styles[theme].replace(/_guid_/g, guid);
	module.exports = [[module.id, styles[theme], '']];
	module.exports.locals = themeLocals[theme];
	module.guid = guid;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))

/***/ },

/***/ 563:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var styles = {"enterprise":".main_Multiselect__guid__c90191{border:1px solid #bfbfbf;border-radius:4px;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;flex-wrap:wrap;width:400px;padding:2px 0 0 2px;min-height:26px}.main_Multiselect__guid__c90191[data-hasFocus]{border-color:#52a8ec;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.main_Multiselect__guid__c90191[aria-disabled]{cursor:not-allowed;background-color:#f5f5f5}.main_Multiselect__guid__c90191[aria-invalid]{border-color:#d6563c;color:#d6563c}.main_Multiselect__guid__c90191[data-size=small]{min-height:22px;padding:1px 0 0 1px}.clear_Multiselect__guid__c90191{color:#999}.input_Multiselect__guid__c90191{-webkit-animation:none 0s ease 0s 1 normal none running;-o-animation:none 0s ease 0s 1 normal none running;-webkit-backface-visibility:visible;-o-border-image:none;-webkit-box-shadow:none;-webkit-box-sizing:content-box;-webkit-columns:auto;-moz-columns:auto;-webkit-column-count:auto;-moz-column-count:auto;-webkit-column-fill:balance;-moz-column-fill:balance;-webkit-column-gap:normal;-moz-column-gap:normal;-webkit-column-rule:medium none currentColor;-moz-column-rule:medium none currentColor;-webkit-column-span:1;-moz-column-span:1;-webkit-column-width:auto;-moz-column-width:auto;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;-webkit-perspective:none;-webkit-perspective-origin:50% 50%;-moz-tab-size:8;-o-tab-size:8;-moz-text-align-last:auto;-webkit-transform:none;-o-transform:none;-webkit-transform-origin:50% 50% 0;-o-transform-origin:50% 50% 0;-webkit-transform-style:flat;-webkit-transition:none 0s ease 0s;-o-transition:none 0s ease 0s;animation:none 0s ease 0s 1 normal none running;backface-visibility:visible;background:transparent none repeat 0 0/auto auto padding-box border-box scroll;border:medium none currentColor;border-collapse:separate;border-image:none;border-radius:0;border-spacing:0;bottom:auto;box-shadow:none;box-sizing:content-box;caption-side:top;clear:none;clip:auto;color:#000;columns:auto;column-count:auto;column-fill:balance;column-gap:normal;column-rule:medium none currentColor;column-span:1;column-width:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;display:inline;empty-cells:show;float:none;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:400;font-stretch:normal;line-height:normal;height:auto;hyphens:none;left:auto;letter-spacing:normal;list-style:disc outside none;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;orphans:2;outline:medium none invert;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;position:static;right:auto;tab-size:8;table-layout:auto;text-align:left;text-align-last:auto;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-origin:50% 50% 0;transform-style:flat;transition:none 0s ease 0s;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:2;width:auto;word-spacing:normal;z-index:auto;all:initial;font-family:Splunk Platform Sans,Roboto,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:12px;line-height:16px;color:#333;-webkit-box-sizing:border-box;box-sizing:border-box;display:block;-webkit-box-flex:1;-webkit-flex:1 0 auto;flex:1 0 auto;line-height:12px;padding:4px}.selectedItem_Multiselect__guid__c90191+.input_Multiselect__guid__c90191{padding-left:2px}.input_Multiselect__guid__c90191[data-size=small]{padding:3px;font-size:11px}","lite":".main_Multiselect__guid__c90191{border:1px solid #333;border-radius:2px;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;align-items:flex-start;-webkit-flex-wrap:wrap;flex-wrap:wrap;width:400px;padding:2px 0 0 2px;min-height:26px}.main_Multiselect__guid__c90191[data-hasFocus]{border-color:#52a8ec;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.main_Multiselect__guid__c90191[aria-disabled]{cursor:not-allowed;background-color:#f5f5f5}.main_Multiselect__guid__c90191[aria-invalid]{border-color:#d6563c;color:#d6563c}.main_Multiselect__guid__c90191[data-size=small]{min-height:22px;padding:1px 0 0 1px}.clear_Multiselect__guid__c90191{color:#999}.input_Multiselect__guid__c90191{-webkit-animation:none 0s ease 0s 1 normal none running;-o-animation:none 0s ease 0s 1 normal none running;-webkit-backface-visibility:visible;-o-border-image:none;-webkit-box-shadow:none;-webkit-box-sizing:content-box;-webkit-columns:auto;-moz-columns:auto;-webkit-column-count:auto;-moz-column-count:auto;-webkit-column-fill:balance;-moz-column-fill:balance;-webkit-column-gap:normal;-moz-column-gap:normal;-webkit-column-rule:medium none currentColor;-moz-column-rule:medium none currentColor;-webkit-column-span:1;-moz-column-span:1;-webkit-column-width:auto;-moz-column-width:auto;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;-webkit-perspective:none;-webkit-perspective-origin:50% 50%;-moz-tab-size:8;-o-tab-size:8;-moz-text-align-last:auto;-webkit-transform:none;-o-transform:none;-webkit-transform-origin:50% 50% 0;-o-transform-origin:50% 50% 0;-webkit-transform-style:flat;-webkit-transition:none 0s ease 0s;-o-transition:none 0s ease 0s;animation:none 0s ease 0s 1 normal none running;backface-visibility:visible;background:transparent none repeat 0 0/auto auto padding-box border-box scroll;border:medium none currentColor;border-collapse:separate;border-image:none;border-radius:0;border-spacing:0;bottom:auto;box-shadow:none;box-sizing:content-box;caption-side:top;clear:none;clip:auto;color:#000;columns:auto;column-count:auto;column-fill:balance;column-gap:normal;column-rule:medium none currentColor;column-span:1;column-width:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;display:inline;empty-cells:show;float:none;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:400;font-stretch:normal;line-height:normal;height:auto;hyphens:none;left:auto;letter-spacing:normal;list-style:disc outside none;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;orphans:2;outline:medium none invert;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;position:static;right:auto;tab-size:8;table-layout:auto;text-align:left;text-align-last:auto;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-origin:50% 50% 0;transform-style:flat;transition:none 0s ease 0s;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:2;width:auto;word-spacing:normal;z-index:auto;all:initial;font-family:Splunk Platform Sans,Roboto,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:12px;line-height:16px;color:#333;-webkit-box-sizing:border-box;box-sizing:border-box;display:block;-webkit-box-flex:1;-webkit-flex:1 0 auto;flex:1 0 auto;line-height:12px;padding:4px}.selectedItem_Multiselect__guid__c90191+.input_Multiselect__guid__c90191{padding-left:2px}.input_Multiselect__guid__c90191[data-size=small]{padding:3px;font-size:11px}"};
	var themeLocals = {"enterprise":{"main":"main_Multiselect__guid__c90191","clear":"clear_Multiselect__guid__c90191","input":"input_Multiselect__guid__c90191","selectedItem":"selectedItem_Multiselect__guid__c90191"},"lite":{"main":"main_Multiselect__guid__c90191","clear":"clear_Multiselect__guid__c90191","input":"input_Multiselect__guid__c90191","selectedItem":"selectedItem_Multiselect__guid__c90191"}};
	var isLite =
	    window.__splunkd_partials__ &&
	    window.__splunkd_partials__['/services/server/info'] &&
	    window.__splunkd_partials__['/services/server/info']
	        .entry[0].content.product_type === 'lite';
	var theme = window.__splunk_ui_theme__ || (isLite ? 'lite' : 'enterprise');
	
	function s4() {
	  return Math.floor((1 + Math.random()) * 0x10000)
	    .toString(16)
	    .substring(1);
	}
	var guid = module.guid ||  s4() + s4() + s4() + s4();
	// Add guid to locals
	Object.keys(themeLocals[theme]).forEach(function(className) {
	    var value = themeLocals[theme][className];
	    themeLocals[theme][className] =
	        value.replace(/_guid_/g, guid);
	 });
	//  Add guid to styles
	styles[theme] = styles[theme].replace(/_guid_/g, guid);
	module.exports = [[module.id, styles[theme], '']];
	module.exports.locals = themeLocals[theme];
	module.guid = guid;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))

/***/ }

/******/ });
//# sourceMappingURL=Multiselect.js.map