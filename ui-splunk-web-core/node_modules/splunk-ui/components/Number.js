module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__filename) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _lodash = __webpack_require__(9);
	
	var _errorHandling = __webpack_require__(11);
	
	var _keyboard = __webpack_require__(12);
	
	var _keyboard2 = _interopRequireDefault(_keyboard);
	
	var _testSupport = __webpack_require__(2);
	
	var _Button = __webpack_require__(15);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Minus = __webpack_require__(52);
	
	var _Minus2 = _interopRequireDefault(_Minus);
	
	var _Plus = __webpack_require__(53);
	
	var _Plus2 = _interopRequireDefault(_Plus);
	
	var _Text = __webpack_require__(20);
	
	var _Text2 = _interopRequireDefault(_Text);
	
	var _Number = __webpack_require__(496);
	
	var _Number2 = _interopRequireDefault(_Number);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function noop() {}
	
	var Number = function (_Component) {
	    _inherits(Number, _Component);
	
	    function Number(props) {
	        var _ref;
	
	        _classCallCheck(this, Number);
	
	        for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	            rest[_key - 1] = arguments[_key];
	        }
	
	        var _this = _possibleConstructorReturn(this, (_ref = Number.__proto__ || Object.getPrototypeOf(Number)).call.apply(_ref, [this, props].concat(rest)));
	
	        _initialiseProps.call(_this);
	
	        _this.controlledExternally = (0, _lodash.has)(props, 'value');
	
	        var value = _this.isControlled() ? props.value : props.defaultValue;
	
	        _this.state = {
	            value: _this.isControlled() ? null : value,
	            stringValue: (0, _lodash.isFinite)(value) ? value.toString() : ''
	        };
	
	        if ((process.env.NODE_ENV !== "production") && _this.isControlled() && (0, _lodash.has)(props, 'defaultValue')) {
	            (0, _errorHandling.invariant)('Number\'s defaultValue prop is not compatible with value prop.');
	        }
	        return _this;
	    }
	
	    _createClass(Number, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            if ((process.env.NODE_ENV !== "production") && !this.isControlled() && (0, _lodash.has)(nextProps, 'value')) {
	                (0, _errorHandling.invariant)('Cannot change Number from an uncontrolled component to a controlled\n    one. Prop \'value\' is not valid in subsequent updates if not provided in the initial props.');
	            }
	
	            if ((process.env.NODE_ENV !== "production") && nextProps.defaultValue !== this.props.defaultValue) {
	                (0, _errorHandling.invariant)('Cannot change defaultValue after set. Consider using a controlled\n                component instead.');
	            }
	
	            var valNumeric = this.stringToNumber(this.state.stringValue);
	            if (nextProps.value !== valNumeric) {
	                this.setState({
	                    stringValue: (0, _lodash.isFinite)(nextProps.value) ? nextProps.value.toString() : ''
	                });
	            }
	        }
	    }, {
	        key: 'getValue',
	        value: function getValue() {
	            return this.isControlled() ? this.props.value : this.state.value;
	        }
	    }, {
	        key: 'setValueFromString',
	        value: function setValueFromString(e, str) {
	            var _this2 = this;
	
	            var value = this.stringToNumber(str);
	
	            this.setState({
	                value: this.isControlled() ? null : value,
	                stringValue: str
	            }, function () {
	                if (_this2.getValue() !== value) {
	                    _this2.props.onChange(e, { value: value });
	                }
	            });
	        }
	    }, {
	        key: 'setValue',
	        value: function setValue(e, value) {
	            var _this3 = this;
	
	            this.setState({
	                value: this.isControlled() ? null : value,
	                stringValue: value.toString()
	            }, function () {
	                if (_this3.getValue() !== value) {
	                    _this3.props.onChange(e, { value: value });
	                }
	            });
	        }
	
	        /**
	         * Place focus on the input.
	         */
	
	    }, {
	        key: 'focus',
	        value: function focus() {
	            if (this.text) {
	                this.text.focus();
	            }
	        }
	    }, {
	        key: 'isControlled',
	        value: function isControlled() {
	            return this.controlledExternally;
	        }
	    }, {
	        key: 'updateString',
	        value: function updateString() {
	            var value = this.getValue();
	            this.setState({
	                stringValue: (0, _lodash.isFinite)(value) ? value.toString() : ''
	            });
	        }
	    }, {
	        key: 'increment',
	        value: function increment(e, amount) {
	            var valNumeric = this.stringToNumber(this.state.stringValue);
	
	            var targetValNumeric = void 0;
	
	            // increment appropriate number
	            if ((0, _lodash.isFinite)(valNumeric)) {
	                // increment the entered value
	                targetValNumeric = valNumeric + amount;
	            } else if ((0, _lodash.isFinite)(this.props.defaultValue)) {
	                // increment the defaultValue
	                targetValNumeric = this.props.defaultValue + amount;
	            } else if (amount > 0) {
	                // increment up to max or step value
	                targetValNumeric = this.props.max || this.props.step;
	            } else {
	                // increment down to min or 0
	                targetValNumeric = this.props.min || 0; // set to min or 0
	            }
	
	            this.setValue(e, this.limitValue(targetValNumeric));
	        }
	    }, {
	        key: 'preventNegativeNumbers',
	        value: function preventNegativeNumbers() {
	            return (0, _lodash.isFinite)(this.props.min) && this.props.min >= 0;
	        }
	    }, {
	        key: 'stringToNumber',
	        value: function stringToNumber(str) {
	            var val = str;
	
	            if (!(0, _lodash.isString)(val) || val === '') {
	                return undefined;
	            }
	
	            // remove leading non-numeric characters.
	            val = val.replace(/^[^\d.-]/, '');
	
	            var valNumeric = this.limitValue(parseFloat(val, 10));
	
	            if ((0, _lodash.isFinite)(valNumeric)) {
	                return valNumeric;
	            }
	
	            return undefined;
	        }
	    }, {
	        key: 'limitValue',
	        value: function limitValue(val) {
	            var newVal = val;
	
	            if (!(0, _lodash.isFinite)(val)) {
	                return newVal;
	            }
	
	            if ((0, _lodash.isFinite)(this.props.min)) {
	                newVal = Math.max(this.props.min, newVal);
	            }
	            if ((0, _lodash.isFinite)(this.props.max)) {
	                newVal = Math.min(this.props.max, newVal);
	            }
	
	            var pow = Math.pow(10, this.props.roundTo);
	            return Math.round(newVal * pow) / pow;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this4 = this;
	
	            var _props = this.props,
	                describedBy = _props.describedBy,
	                disabled = _props.disabled,
	                _props$value = _props.value,
	                value = _props$value === undefined ? this.state.value : _props$value,
	                max = _props.max,
	                min = _props.min;
	
	
	            var textProps = (0, _lodash.omit)(this.props, ['defaultValue', 'min', 'max', 'roundTo', 'step']);
	
	            var disableIncrement = (0, _lodash.isFinite)(value) && (0, _lodash.isFinite)(max) && value >= max;
	            var disableDecrement = (0, _lodash.isFinite)(value) && (0, _lodash.isFinite)(min) && value <= min;
	
	            return _react2.default.createElement(
	                _Text2.default,
	                _extends({
	                    inputClassName: _Number2.default.input,
	                    autoComplete: false,
	                    ref: function ref(c) {
	                        return _this4.text = c;
	                    }
	                }, (0, _testSupport.createTestHook)(__filename), textProps, {
	                    onChange: this.handleInputChange,
	                    onBlur: this.handleInputBlur,
	                    onKeyDown: this.handleKeyDown,
	                    onKeyUp: this.handleKeyUp,
	                    value: this.state.stringValue,
	                    'aria-describedby': describedBy
	                }),
	                !disabled && _react2.default.createElement(
	                    'div',
	                    { className: _Number2.default.controls },
	                    _react2.default.createElement(_Button2.default, {
	                        icon: _react2.default.createElement(_Plus2.default, { size: 1 }),
	                        className: _Number2.default.plus,
	                        appearance: 'pill',
	                        onClick: this.handleIncrement,
	                        disabled: disableIncrement,
	                        inline: false
	                    }),
	                    _react2.default.createElement(_Button2.default, {
	                        icon: _react2.default.createElement(_Minus2.default, { size: 1 }),
	                        className: _Number2.default.minus,
	                        appearance: 'pill',
	                        onClick: this.handleDecrement,
	                        disabled: disableDecrement,
	                        inline: false
	                    })
	                )
	            );
	        }
	    }]);
	
	    return Number;
	}(_react.Component);
	
	Number.propTypes = {
	    /** Append removes rounded borders and border from the right side. */
	    append: _react.PropTypes.bool,
	    /** @docs-ignore */
	    children: _react.PropTypes.node,
	    /** @docs-ignore. */
	    className: _react.PropTypes.string,
	    /**
	     * Set this property instead of value to make value uncontrolled. */
	    defaultValue: _react.PropTypes.number,
	    /**
	     * The id of the description. When placed in a ControlGroup, this automatically set to the
	     * ControlGroup's help component.
	     */
	    describedBy: _react.PropTypes.string,
	    /** Whether or not the input is editable. */
	    disabled: _react.PropTypes.bool,
	    /**
	     * Highlight the field as having an error. The border and text will turn red
	     * except when focused.
	     */
	    error: _react.PropTypes.bool,
	    /**
	     * An id for the input, which may be necessary for accessibility, such as for aria
	     * attributes.
	     */
	    inputId: _react.PropTypes.string,
	    /** When false, display as inline-block with the default width. */
	    inline: _react.PropTypes.bool,
	    /**
	     * The number of decimal places for rounding. Set to zero to limit input to integers.
	     * Negative numbers are supported. For instance, -2 will round to the nearest hundred.
	     */
	    roundTo: _react.PropTypes.number,
	    /**
	     * The id of the label. When placed in a ControlGroup, this automatically set to the
	     * ControlGroup's label.
	     */
	    labelledBy: _react.PropTypes.string,
	    /** The smallest allowable value. */
	    min: _react.PropTypes.number,
	    /** The largest allowable value. */
	    max: _react.PropTypes.number,
	    /** The name property for the input, which can be useful for accessibility and form data. */
	    name: _react.PropTypes.string,
	    /** A callback for when the input loses focus. */
	    onBlur: _react.PropTypes.func,
	    /**
	     * This is equivalent to onInput which is called on keydown, paste, etc.
	     * If value is set, this callback is required. This must set the value prop to retain the
	     * change.
	     */
	    onChange: _react.PropTypes.func,
	    /** A callback for when the input takes focus. */
	    onFocus: _react.PropTypes.func,
	    /** A keydown callback can be used to prevent certain input by returning false. */
	    onKeyDown: _react.PropTypes.func,
	    /** A keyup callback. */
	    onKeyUp: _react.PropTypes.func,
	    /** A callback for when the users selects text. */
	    onSelect: _react.PropTypes.func,
	    /** The gray text shown when the input is empty. */
	    placeholder: _react.PropTypes.string,
	    /** Prepend removes rounded borders from the left side. */
	    prepend: _react.PropTypes.bool,
	    /** The overall size of the input. */
	    size: _react.PropTypes.oneOf(['small', 'medium', 'large']),
	    /** The amount of increment and decrement applied by the buttons and arrow keys. */
	    step: _react.PropTypes.number,
	    /** Some browsers remove placeholder text on focus. The synthetic placeholder never does. */
	    useSyntheticPlaceholder: _react.PropTypes.bool,
	    /**
	     * The contents of the input. Setting this value makes the property controlled. A callback
	     * is required. */
	    value: _react.PropTypes.number
	};
	Number.defaultProps = {
	    append: false,
	    disabled: false,
	    error: false,
	    inline: false,
	    onChange: noop,
	    onKeyDown: noop,
	    onKeyUp: noop,
	    onSelect: noop,
	    onBlur: noop,
	    onFocus: noop,
	    placeholder: '',
	    prepend: false,
	    roundTo: 5,
	    size: 'medium',
	    step: 1,
	    useSyntheticPlaceholder: false
	};
	
	var _initialiseProps = function _initialiseProps() {
	    var _this5 = this;
	
	    this.handleInputBlur = function (e) {
	        _this5.updateString(e);
	        _this5.props.onBlur(e);
	    };
	
	    this.handleInputChange = function (e, _ref2) {
	        var value = _ref2.value;
	
	        _this5.setValueFromString(e, value);
	    };
	
	    this.handleKeyDown = function (e) {
	        if (!e.metaKey && !e.ctrlKey && !e.altKey && _keyboard2.default.addsCharacter(e)) {
	            // only allow numbers, negative and decimals
	            if (!_keyboard2.default.isNumeric(e)) {
	                e.preventDefault();
	            }
	
	            // if minus is not allowed or there is already one, prevent input
	            if (_keyboard2.default.isMinus(e) && (_this5.preventNegativeNumbers() || _this5.state.stringValue.indexOf('-') >= 0)) {
	                e.preventDefault();
	            }
	
	            // if decimal is not allowed or there is already one, prevent input
	            if (_keyboard2.default.isDecimal(e) && (_this5.props.roundTo <= 0 || _this5.state.stringValue.indexOf('.') >= 0)) {
	                e.preventDefault();
	            }
	        }
	
	        // Arrow up and down will increment
	        if ((0, _keyboard.keycode)(e) === 'up') {
	            _this5.increment(e, _this5.props.step);
	            e.preventDefault();
	        } else if ((0, _keyboard.keycode)(e) === 'down') {
	            _this5.increment(e, -_this5.props.step);
	            e.preventDefault();
	        }
	
	        _this5.props.onKeyDown(e);
	    };
	
	    this.handleKeyUp = function (e) {
	        if ((0, _keyboard.keycode)(e) === 'enter') {
	            _this5.updateString(e);
	        }
	        _this5.props.onKeyUp(e);
	    };
	
	    this.handleIncrement = function (e) {
	        _this5.increment(e, _this5.props.step);
	    };
	
	    this.handleDecrement = function (e) {
	        _this5.increment(e, -_this5.props.step);
	    };
	};
	
	exports.default = Number;
	/* WEBPACK VAR INJECTION */}.call(exports, "src/components/Number/Number.jsx"))

/***/ },

/***/ 1:
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },

/***/ 2:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/testSupport");

/***/ },

/***/ 5:
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },

/***/ 6:
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },

/***/ 9:
/***/ function(module, exports) {

	module.exports = require("lodash");

/***/ },

/***/ 11:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/errorHandling");

/***/ },

/***/ 12:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/util/keyboard");

/***/ },

/***/ 15:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/components/Button");

/***/ },

/***/ 20:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/components/Text");

/***/ },

/***/ 52:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/icons/Minus");

/***/ },

/***/ 53:
/***/ function(module, exports) {

	module.exports = require("splunk-ui/icons/Plus");

/***/ },

/***/ 496:
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(564);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(6)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../tools/web_loaders/theme-loader/index.js!./Number.css", function() {
				var newContent = require("!!./../../../tools/web_loaders/theme-loader/index.js!./Number.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },

/***/ 564:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var styles = {"enterprise":"[data-size=medium]>.input_Number__guid__c90191[type],[data-size=small]>.input_Number__guid__c90191[type]{padding-right:45px}[data-size=large]>.input_Number__guid__c90191[type]{padding-right:75px}.controls_Number__guid__c90191{display:-webkit-box;display:-webkit-flex;display:flex;position:absolute;right:1px;top:1px;bottom:1px}.minus_Number__guid__c90191,.plus_Number__guid__c90191{z-index:2;width:auto;padding:3px;top:0;bottom:0;font-size:inherit;min-height:24px;min-width:24px}[data-size=large]>.controls_Number__guid__c90191>.minus_Number__guid__c90191,[data-size=large]>.controls_Number__guid__c90191>.plus_Number__guid__c90191{min-width:36px}","lite":"[data-size=medium]>.input_Number__guid__c90191[type],[data-size=small]>.input_Number__guid__c90191[type]{padding-right:45px}[data-size=large]>.input_Number__guid__c90191[type]{padding-right:75px}.controls_Number__guid__c90191{display:-webkit-box;display:-webkit-flex;display:flex;position:absolute;right:1px;top:1px;bottom:1px}.minus_Number__guid__c90191,.plus_Number__guid__c90191{z-index:2;width:auto;padding:3px;top:0;bottom:0;font-size:inherit;min-height:24px;min-width:24px}[data-size=large]>.controls_Number__guid__c90191>.minus_Number__guid__c90191,[data-size=large]>.controls_Number__guid__c90191>.plus_Number__guid__c90191{min-width:36px}"};
	var themeLocals = {"enterprise":{"input":"input_Number__guid__c90191","controls":"controls_Number__guid__c90191","plus":"plus_Number__guid__c90191","minus":"minus_Number__guid__c90191"},"lite":{"input":"input_Number__guid__c90191","controls":"controls_Number__guid__c90191","plus":"plus_Number__guid__c90191","minus":"minus_Number__guid__c90191"}};
	var isLite =
	    window.__splunkd_partials__ &&
	    window.__splunkd_partials__['/services/server/info'] &&
	    window.__splunkd_partials__['/services/server/info']
	        .entry[0].content.product_type === 'lite';
	var theme = window.__splunk_ui_theme__ || (isLite ? 'lite' : 'enterprise');
	
	function s4() {
	  return Math.floor((1 + Math.random()) * 0x10000)
	    .toString(16)
	    .substring(1);
	}
	var guid = module.guid ||  s4() + s4() + s4() + s4();
	// Add guid to locals
	Object.keys(themeLocals[theme]).forEach(function(className) {
	    var value = themeLocals[theme][className];
	    themeLocals[theme][className] =
	        value.replace(/_guid_/g, guid);
	 });
	//  Add guid to styles
	styles[theme] = styles[theme].replace(/_guid_/g, guid);
	module.exports = [[module.id, styles[theme], '']];
	module.exports.locals = themeLocals[theme];
	module.guid = guid;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))

/***/ }

/******/ });
//# sourceMappingURL=Number.js.map