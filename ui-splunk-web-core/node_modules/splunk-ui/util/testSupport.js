module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.componentId = componentId;
	exports.createTestHook = createTestHook;
	function componentId(fileName) {
	    return fileName.replace(/^(\.\.\/)?src\//, '').replace(/\.js?x$/, '');
	}
	
	/**
	 * Returns an object that can be passed as props to a react component for setting standard test
	 * hooks for automated testing.
	 *
	 * @param {String} fileName - The path of the file. Pass `__filename` to have webpack set this
	 * dynamically at build time.
	 * @param {String|Object} options - If a string is passed, it is used as the component name for the
	 * test hook. Otherwise, the component name is accessed as a property of the options object. This
	 * means that a components props can be passed here.
	 * @returns {Object}
	 */
	function createTestHook(fileName, options) {
	    var componentName = (typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object' ? options.componentName : options;
	    return {
	        'data-component': fileName && 'splunk-ui:/' + componentId(fileName),
	        'data-component-name': componentName
	    };
	}

/***/ }
/******/ ]);
//# sourceMappingURL=testSupport.js.map