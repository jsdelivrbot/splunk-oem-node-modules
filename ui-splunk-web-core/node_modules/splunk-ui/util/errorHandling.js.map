{"version":3,"sources":["webpack:///webpack/bootstrap e6bb1ea7630797156c25?3f0f******************************************************************************************************************************************************************************************************","webpack:///./src/util/errorHandling/errorHandling.js"],"names":["warning","invariant","cleanMessage","message","replace","console","error","Error","e"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;SCrBgBA,O,GAAAA,O;SAcAC,S,GAAAA,S;AA/BhB;AACA;;;;;;;;;AASA,UAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC3B,YAAOA,QAAQC,OAAR,CAAgB,MAAhB,EAAwB,GAAxB,CAAP;AACH;;AAED;;;AAGO,UAASJ,OAAT,CAAiBG,OAAjB,EAA0B;AAC7B,SAAIE,WAAWA,QAAQC,KAAvB,EAA8B;AAC1BD,iBAAQC,KAAR,CAAcJ,aAAaC,OAAb,CAAd;AACH,MAFD,MAEO;AACH,aAAI;AACA,mBAAM,IAAII,KAAJ,CAAUL,aAAaC,OAAb,CAAV,CAAN;AACH,UAFD,CAEE,OAAOK,CAAP,EAAU,CAAE,CAHX,CAGY;AAClB;AACJ;;AAED;;;;AAIO,UAASP,SAAT,CAAmBE,OAAnB,EAA4B;AAC/B,WAAM,IAAII,KAAJ,CAAUL,aAAaC,OAAb,CAAV,CAAN;AACH,E","file":"util/errorHandling.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e6bb1ea7630797156c25","/* eslint-disable no-console */\n/**\n * The objective of this utility is to funnel all error handling through a single module. This will\n * enable us to do a variety of things with errors, like manipulate the messages, or log them\n * somewhere.\n *\n * Currently this module only cleans up the error messages by removing excess whitespace and\n * thereby enabling multi-line strings in error messages to be displayed correctly in the console.\n */\n\nfunction cleanMessage(message) {\n    return message.replace(/\\s+/g, ' ');\n}\n\n/**\n * Warnings do not block the execution of code. Use to provide developer feedback on best practices.\n */\nexport function warning(message) {\n    if (console && console.error) {\n        console.error(cleanMessage(message));\n    } else {\n        try {\n            throw new Error(cleanMessage(message));\n        } catch (e) {} // eslint-disable-line no-empty\n    }\n}\n\n/**\n * Invariant blocks execution of the code. Use when something has truly gone wrong, and the code\n * path needs to be stopped immediately and completely.\n */\nexport function invariant(message) {\n    throw new Error(cleanMessage(message));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/errorHandling/errorHandling.js"],"sourceRoot":""}