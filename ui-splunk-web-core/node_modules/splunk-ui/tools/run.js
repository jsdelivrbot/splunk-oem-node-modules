#!/usr/bin/env node
/*
 * This file is written in es5 to be more portable.
 * It loads babel for subsequent modules, so the modules loaded by 'run' can use
 * es2015.
 */
/* eslint-disable no-console, no-var, prefer-rest-params, prefer-spread, func-names, prefer-arrow-callback, vars-on-top, space-before-function-paren, max-len */

require('babel-register')({
    presets: ['es2015'],
});

// TODO: Make an executable alias for this and add all the niceties of a cli tool

function format(time) {
    return time.toTimeString().replace(/.*(\d{2}:\d{2}:\d{2}).*/, '$1');
}

function run(fn) {
    var args = Array.prototype.slice.call(arguments, 1);
    var task = typeof fn.default === 'undefined' ? fn : fn.default;
    var start = new Date();
    console.log(
        `[${format(start)}] Starting '${task.name}${args ? `(${args})` : ''}'...`
    );
    return task.apply(null, args).then(function(resolution) {
        var end = new Date();
        var time = end.getTime() - start.getTime();
        console.log(
            `[${format(end)}] Finished '${task.name}${args ? `(${args})` : ''}' after ${time} ms`
        );
        return resolution;
    });
}

if (require.main === module && process.argv.length > 2) {
    var mod = require(`./${process.argv[2]}.js`).default; // eslint-disable-line global-require
    var args = [mod].concat(process.argv.slice(3));
    delete require.cache[__filename]; // eslint-disable-line no-underscore-dangle
    run.apply(null, args)
        .catch(err => { console.error(err.stack); process.exit(1); });
}

module.exports = run;
