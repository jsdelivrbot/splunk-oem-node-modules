/* This file is written in es5, and disables many eslint features */
/* eslint-disable global-require, max-len, no-var, object-shorthand */

var path = require('path');
var webpack = require('webpack');

var DEBUG = process.env.NODE_ENV !== 'production';
var VERBOSE = false;

// Determine if this file is in the build directory and set paths accordingly
var inBuild = /build\/tools\/base\.config\.js$/.test(__filename);
var nodeDir = path.resolve(__dirname, inBuild ? '../../node_modules' : '../node_modules');

//
// Common configuration chunk
// -----------------------------------------------------------------------------

console.log('DEBUG:', DEBUG); // eslint-disable-line no-console
module.exports = {
    node: {
        __filename: true,
    },
    module: {
        loaders: [
            {
                test: /\.jsx?$/,
                loader: 'babel-loader',
                exclude: /node_modules/,
                query: { cacheDirectory: DEBUG },
            },
            {
                test: /\.css$/,
                loaders: [
                    'style-loader',
                    DEBUG ? 'theme-loader?debug' : 'theme-loader',
                ],
            },
            {
                test: /\.json$/,
                loader: 'json-loader',
            },
            {
                test: /\.txt$/,
                loader: 'raw-loader',
            },
            {
                test: /\.(png|jpg|jpeg|gif|svg|woff|woff2)$/,
                loader: 'url-loader',
                query: {
                    name: DEBUG ? '[path][name].[ext]?[hash]' : '[hash].[ext]',
                    limit: 100000,
                },
            },
            {
                test: /\.(eot|ttf|wav|mp3)$/,
                loader: 'file-loader',
                query: {
                    name: DEBUG ? '[path][name].[ext]?[hash]' : '[hash].[ext]',
                },
            },
        ],
    },

    resolve: {
        extensions: ['', '.js', '.jsx'],
        fallback: nodeDir,
    },

    resolveLoader: {
        modulesDirectories: [
            'web_loaders',
            'tools/web_loaders',
            'node_modules',
            nodeDir,
        ],
        fallback: nodeDir,
    },

    cache: DEBUG,
    debug: DEBUG,

    stats: {
        colors: true,
        reasons: DEBUG,
        hash: VERBOSE,
        version: VERBOSE,
        timings: true,
        chunks: VERBOSE,
        chunkModules: VERBOSE,
        cached: VERBOSE,
        cachedAssets: VERBOSE,
    },

    output: {
        filename: DEBUG ? '[name].js?[chunkhash]' : '[name].[chunkhash].js',
        chunkFilename: DEBUG ? '[name].[id].js?[chunkhash]' : '[name].[id].[chunkhash].js',
    },

    plugins: [
        // Assign the module and chunk ids by occurrence count
        // Consistent ordering of modules required if using any hashing ([hash] or [chunkhash])
        // https://webpack.github.io/docs/list-of-plugins.html#occurrenceorderplugin
        new webpack.optimize.OccurrenceOrderPlugin(true),
    ],
};
