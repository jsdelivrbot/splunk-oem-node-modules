.main {
    flex-grow: 1;
    flex-shrink: 1;
    position: relative;

    &[data-inline] {
        width: 230px;
        flex-basis: 230px;

        [data-inline] + & {
            margin-left: 10px;
        }
    }

    &[data-size=small] {
        font-size: $fontSizeSmall;
    }

    &[data-size=large] {
        font-size: $fontSizeLarge;
        line-height: 20px;
    }
}

/* Some of these need greater specificity than input[type=text] */
.input {
    &,
    &[type] {
        /* needed for composition */
        box-sizing: border-box;
        display: block;
        margin: 0;
        line-height: inherit;
        color: $textColor;
        border-radius: $baseBorderRadius;
        background-color: $white;
        border: 1px solid $borderColor;
        font-size: inherit;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        transition: border linear 0.2s, box-shadow linear 0.2s;
        width: 100%;
        padding: 4px 6px;
        min-height: $inputHeight;
        position: relative;

        @if $theme == lite {
            border-color: $gray20;
        }

        [data-size=small] > & {
            padding: 2px 4px;
            min-height: $inputHeightSmall;
        }

        [data-size=large] > & {
            padding: 9px 11px;
            min-height: $inputHeightLarge;
        }

        &::placeholder {
            color: $textGray;
            opacity: 1;
        }

        &[data-append] {
            margin-right: -1px;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            border-right: none;

            &:focus {
                background-image: linear-gradient(-90deg, $focusColor 1px, transparent 1px);
            }
        }

        &[data-prepend] {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }

        /*  Focus state */
        &:focus {
            border-color: color($focusColor a(80%));
            color: $textColor;
            outline: 0;
            border-collapse: separate; /* Fix IE9 Issue with box-shadow */
            box-shadow: 0 0 8px color($focusColor a(60%));
            z-index: 1;

            &[data-can-clear] {
                padding-right: 22px;

                [data-size=large] > & {
                    padding-right: 32px;
                }
            }
        }

        &[aria-invalid] {
            border-color: $errorColor;
            color: $errorColor;

            &:focus {
                box-shadow: 0 0 8px color($errorColor a(60%));
            }
        }

        &::-ms-clear {
            display: none;
            width: 0; /* IE 11 on windows 8 */
            height: 0; /* IE 11 on windows 8 */
        }

        &::placeholder {
            color: $textGray;
            opacity: 1;
        }
    }

    textarea& {
        resize: none;
    }
}

.inputSearch {
    composes: input;

    &[type] {
        border-radius: 100px;
        padding-left: 10px;

        [data-size=small] > & {
            padding-left: 8px;
        }

        [data-size=large] > & {
            padding-left: 15px;
        }
    }
}

.uneditableInput {
    composes: input;
    color: $textDisabledColor;
    background-color: $gray96;
    border-color: $borderColor;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.025);
    cursor: not-allowed;
    overflow: hidden; /*  prevent text from wrapping, but still cut it off like an input does */
    white-space: nowrap;
    text-overflow: ellipsis;

    &[data-multiline] {
        white-space: pre-wrap;
        word-wrap: break-word;
        overflow-y: auto;
        height: auto;
        min-height: 43px;
        max-height: 140px;
        text-overflow: clip;
    }
}

.clear {
    position: absolute;
    right: 1px;
    top: 1px;
    font-size: 0.83333em; /* sets height and width */
    color: #999;
    cursor: pointer;
    z-index: 1;

    [data-size=small] > & {
        padding: 6px;
    }

    [data-size=medium] > & {
        padding: 7px;
    }

    [data-size=large] > & {
        padding: 13px;
    }
}

.placeholder {
    color: $textGray;
    position: absolute;
    max-width: 100%;
    font-size: inherit;
    line-height: inherit;
    z-index: 1;

    [data-size=small] > & {
        top: 4px;
        left: 5px;
    }

    [data-size=medium] > & {
        top: 5px;
        left: 7px;
    }

    [data-size=large] > & {
        top: 10px;
        left: 12px;
    }

    .inputSearch + & {
        margin-left: 5px;
    }
}
