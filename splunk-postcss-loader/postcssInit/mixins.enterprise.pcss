@import "mixins.shared.pcss";

/*  Mixins */
/*  ================== */
/*  Snippets and functions to replicate common styles. */

/** interactive
 *  --------------------------------------------------
 *  This applies colors to an element that can be clicked, such as buttons, menus and table headings.
 *
 *  ##### Example
 *  ``` css
 *  .myButton {
 *      @mixin interactive;
 *      border-style: solid;
 *      padding: 10px;
 *  }
 *  ```
 */
@define-mixin interactive  {
    background-image: linear-gradient(180deg, color($black l(97%)), $gray93);
    border-color: color($black l(75%));
    color: $textColor;
    box-shadow: inset 0px 1px 0 color($black l(95%));
}

/**  interactive-hover
 *  --------------------------------------------------
 *  This applies colors to an interactive element in a hover state.
 *
 *  ##### Example
 *  ``` css
 *  .myButton {
 *      @mixin interactive;
 *      border-style: solid;
 *      padding: 10px;
 *
 *      &:hover {
 *          @mixin interactive-hover;
 *      }
 *  }
 *  ```
 */
@define-mixin interactive-hover  {
    background-image: none;
    background-color: color($black l(97%));
    border-color: color($black l(78%));
    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.08);
    color: $textColor;
    text-decoration: none;
}

/**  interactive-warning
 *  --------------------------------------------------
 *  This applies colors to an interactive element in a warning state.
 *
 *  ##### Example
 *  ``` css
 *  .myButton {
 *      @mixin interactive-warning;
 *      border-style: solid;
 *      padding: 10px;
 *  }
 *  ```
 *   */
@define-mixin interactive-warning  {
    background-image: linear-gradient(color($warningColor l(85%)), color($warningColor l(78%)));
    border-color: color($warningColor l(62%));
    color: color($warningColor l(45%));
}

/**  interactive-warning-hover
 *  --------------------------------------------------
 *  This applies colors to an interactive element in a warning and hover state.
 *
 *  ##### Example
 *  ``` css
 *  .myButton {
 *      @mixin interactive-warning;
 *      border-style: solid;
 *      padding: 10px;
 *
 *      &:hover {
 *          @mixin interactive-warning-hover;
 *      }
 *  }
 *  ```
 */
@define-mixin interactive-warning-hover  {
    background-image: linear-gradient(color($warningColor l(89%)), color($warningColor l(82%)));
    border-color: color($warningColor l(65%));
    color: color($warningColor l(45%));
    text-decoration: none;
}

/** interactive-error
*  --------------------------------------------------
*  This applies colors to an interactive element in an error state.
*
*  ##### Example
*  ``` css
*  .myButton {
*      @mixin interactive-error;
*      border-style: solid;
*      padding: 10px;
*  }
*  ```
*/
@define-mixin interactive-error  {
    background-image: linear-gradient(color($errorBackgroundColor l(86%)), color($errorBackgroundColor l(82%)));
    border-color: color($errorBackgroundColor l(62%) s(-30%));
    color: $errorColor;
}
/** interactive-error-warning
*  --------------------------------------------------
*  This applies colors to an interactive element in an error and hover state.
*
*  ##### Example
*  ``` css
*  .myButton {
*      @mixin interactive-error;
*      border-style: solid;
*      padding: 10px;
*
*      &:hover {
*          @mixin interactive-error-hover;
*      }
*  }
*  ```
*/
@define-mixin interactive-error-hover  {
    background-image: linear-gradient(color($errorBackgroundColor l(90%)), color($errorBackgroundColor l(86%)));
    border-color: color($errorBackgroundColor l(64%) s(-30%));
    color: $errorColor;
    text-decoration: none;
}
