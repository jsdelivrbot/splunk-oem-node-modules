/*  Splunk: Forms */
/*  ============= */
/*  Base styles for various input types, form layouts, and states */



/*  GENERAL STYLES */
/*  -------------- */

/*  Make all forms have space below them */
form {
  margin: 0 0 $baseLineHeight;

  &:last-child {
  	margin: 0 0 $baseLineHeight;
  }
}

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
}

/*  Groups of fields with labels on top (legends) */
legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: $baseLineHeight;
  font-size: calc($baseFontSize * 1.5);
  line-height: calc($baseLineHeight * 2);
  color: $grayDark;
  border: 0;
  border-bottom: 1px solid #e5e5e5;

  /*  Small */
  small {
    font-size: calc($baseLineHeight * .75);
    color: $grayLight;
  }
}

/*  Set font for forms */
label,
input,
button,
select,
textarea {
  @mixin font-shorthand $baseFontSize,normal,$baseLineHeight; /*  Set size, weight, line-height here */
}
input,
button,
select,
textarea {
  font-family: $baseFontFamily; /*  And only set font-family here for those that need it (note the missing label element) */
}

/*  Identify controls by their labels */
label {
  display: block;
  margin-bottom: 5px;
  cursor: default; /* reset pointer */
}


/*  Form controls */
/*  ------------------------- */

/*  Shared size and type resets */
select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
  display: inline-block;
  height: $baseLineHeight;
  padding: 4px 6px;
  margin-bottom: calc($baseLineHeight / 2);
  font-size: $baseFontSize;
  line-height: $baseLineHeight;
  color: $gray;
  border-radius: $inputBorderRadius;
  vertical-align: middle;
}

/*  Reset appearance properties for textual inputs and textarea */
/*  Declare width for legacy (can't be on input[type=*] selectors or it's too specific) */
input,
textarea,
.uneditable-input {
  width: 206px; /*  plus 12px padding and 2px border */
}
/*  Reset height since textareas have rows */
textarea {
  height: auto;
}
/*  Everything else */
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
  background-color: $inputBackground;
  border: 1px solid $inputBorder;
  box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
  transition: border linear .2s, box-shadow linear .2s;

  /*  Focus state */
  &:focus {
    @mixin focus-field;
  }

  /* Don't show IE clear button when an artificial one is shown. */
  &.text-clear::-ms-clear {
    display: none;
    width: 0;  /* IE 11 on windows 8 */ 
    height: 0; /* IE 11 on windows 8 */
  }
}



/*  Position radios and checkboxes better */
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; /* IE9 */
  line-height: normal;
}

/*  Reset width of input images, buttons, radios, checkboxes */
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
  width: auto; /*  Override of generic input selector */
}

/*  Set the height of select and file controls to match text inputs */
select,
input[type="file"] {
  height: $inputHeight;
  line-height: $inputHeight;
}

/*  Make select elements obey height by applying a border */
select {
  width: 220px; /*  default input width + 10px of padding that doesn't get applied */
  border: 1px solid $inputBorder;
  background-color: $inputBackground; /*  Chrome on Linux and Mobile Safari need background-color */
}

/*  Make multiple select elements height not fixed */
select[multiple],
select[size] {
  height: auto;
}

/*  Focus for select, file, radio, and checkbox */
select:focus,
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  @mixin tab-focus;
}


/*  Uneditable inputs */
/*  ------------------------- */

/*  Make uneditable inputs look inactive */
.uneditable-input,
.uneditable-textarea {
  color: $grayLight;
  background-color: color($inputBackground l(-1%));
  border-color: $inputBorder;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.025);
  cursor: not-allowed;
}

/*  For text that needs to appear as an input but should not be an input */
.uneditable-input {
  overflow: hidden; /*  prevent text from wrapping, but still cut it off like an input does */
  white-space: nowrap;
}

/*  Make uneditable textareas behave like a textarea */
.uneditable-textarea {
  width: auto;
  height: auto;
}


/*  restrict text area resize */
textarea {
	min-height: 2em;
	resize: vertical;
}


/*  Placeholder */
/*  ------------------------- */

/*  Placeholder text gets special styles because when browsers invalidate entire lines if it doesn't understand a selector */
input,
textarea {
  @mixin placeholder;
}



/*  CHECKBOXES & RADIOS */
/*  ------------------- */

/*  Indent the labels to position radios/checkboxes as hanging */
.radio,
.checkbox {
  min-height: $baseLineHeight; /*  clear the floating input if there is no label text */
  padding-left: 20px;
}
.radio input[type="radio"],
.checkbox input[type="checkbox"] {
  float: left;
  margin-left: -20px;
}

/*  Move the options list down to align with labels */
.controls > .radio:first-child,
.controls > .checkbox:first-child {
  padding-top: 5px; /*  has to be padding because margin collaspes */
}

/*  Radios and checkboxes on same line */
/*  TODO v3: Convert .inline to .control-inline */
.radio.inline,
.checkbox.inline {
  display: inline-block;
  padding-top: 5px;
  margin-bottom: 0;
  vertical-align: middle;
}
.radio.inline + .radio.inline,
.checkbox.inline + .checkbox.inline {
  margin-left: 10px; /*  space out consecutive inline controls */
}


/*  INPUT SIZES */
/*  ----------- */

/*  General classes for quick sizes */
.input-very-small {	width: 25px; }
.input-mini       { width: 60px; }
.input-small      { width: 90px; }
.input-medium     { width: 150px; }
.input-large      { width: 210px; }
.input-xlarge     { width: 270px; }
.input-xxlarge    { width: 530px; }

/*  Grid style input sizes */
input[class*="span"],
select[class*="span"],
textarea[class*="span"],
.uneditable-input[class*="span"],
/*  Redeclare since the fluid row class is more specific */
.row-fluid input[class*="span"],
.row-fluid select[class*="span"],
.row-fluid textarea[class*="span"],
.row-fluid .uneditable-input[class*="span"] {
  float: none;
  margin-left: 0;
}
/*  Ensure input-prepend/append never wraps */
.input-append input[class*="span"],
.input-append .uneditable-input[class*="span"],
.input-prepend input[class*="span"],
.input-prepend .uneditable-input[class*="span"],
.row-fluid input[class*="span"],
.row-fluid select[class*="span"],
.row-fluid textarea[class*="span"],
.row-fluid .uneditable-input[class*="span"],
.row-fluid .input-prepend [class*="span"],
.row-fluid .input-append [class*="span"] {
  display: inline-block;
}





/*  GRID SIZING FOR INPUTS */
/*  ---------------------- */

/*  Grid sizes */
@mixin grid-input $gridColumnWidth, $gridGutterWidth;

/*  Control row for multiple inputs per line */
.controls-row {
  @mixin clearfix; /*  Clear the float from controls */
}

/*  Float to collapse white-space for proper grid alignment */
.controls-row [class*="span"],
/*  Redeclare the fluid grid collapse since we undo the float for inputs */
.row-fluid .controls-row [class*="span"] {
  float: left;
}
/*  Explicity set top padding on all checkboxes/radios, not just first-child */
.controls-row .checkbox[class*="span"],
.controls-row .radio[class*="span"] {
  padding-top: 5px;
}




/*  DISABLED STATE */
/*  -------------- */

/*  Disabled and read-only inputs */
input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly] {
  cursor: not-allowed;
  background-color: $inputDisabledBackground;
}
/*  Explicitly reset the colors here */
input[type="radio"][disabled],
input[type="checkbox"][disabled],
input[type="radio"][readonly],
input[type="checkbox"][readonly] {
  background-color: transparent;
}






/*  FORM FIELD FEEDBACK STATES */
/*  -------------------------- */

/*  Warning */
.control-group.warning {
  @mixin formFieldState $warningText, $warningText, $warningBackground;
}
/*  Error */
.control-group.error {
  @mixin formFieldState $errorText, $errorText, $errorBackground;
}
/*  Success */
.control-group.success {
  @mixin formFieldState $successText, $successText, $successBackground;
}
/*  Success */
.control-group.info {
  @mixin formFieldState $infoText, $infoText, $infoBackground;
}

/*  HTML5 invalid states */
/*  Shares styles with the .control-group.error above */
input:focus:invalid,
textarea:focus:invalid,
select:focus:invalid {
  color: #b94a48;
  border-color: #ee5f5b;
  &:focus {
    border-color: color(#ee5f5b l(-10%));
    box-shadow: 0 0 6px color(#ee5f5b  l(+20%));
  }
}



/*  FORM ACTIONS */
/*  ------------ */

.form-actions {
  padding: calc($baseLineHeight - 1px) 20px $baseLineHeight;
  margin-top: $baseLineHeight;
  margin-bottom: $baseLineHeight;
  background-color: $formActionsBackground;
  border-top: 1px solid #e5e5e5;
  @mixin clearfix; /*  Adding clearfix to allow for .pull-right button containers */
}



/*  HELP TEXT */
/*  --------- */

.help-block,
.help-inline {
    color: $textGray;
}

.help-block {
  display: block; /*  account for any element using help-block */
  margin-bottom: calc($baseLineHeight / 2);
  font-size: 85%;
  word-wrap: break-word;
}

.help-inline {
  display: inline-block;
  vertical-align: middle;
  padding-left: 5px;
}



/*  INPUT GROUPS */
/*  ------------ */

/*  Allow us to put symbols and text within the input field for a cleaner look */
.input-append,
.input-prepend {
  display: inline-block;
  margin-bottom: calc($baseLineHeight / 2);
  vertical-align: middle;
  font-size: 0; /*  white space collapse hack */
  white-space: nowrap; /*  Prevent span and input from separating */

  /*  Reset the white space collapse hack */
  input,
  select,
  .uneditable-input,
  .dropdown-menu,
  .popover {
    font-size: $baseFontSize;
  }

  input,
  select,
  .uneditable-input {
    position: relative; /*  placed here by default so that on :focus we can place the input above the .add-on for full border and box-shadow goodness */
    margin-bottom: 0; /*  prevent bottom margin from screwing up alignment in stacked forms */
    vertical-align: top;
    border-radius: 0 $inputBorderRadius $inputBorderRadius 0;
    /*  Make input on top when focused so blue border and shadow always show */
    &:focus {
      z-index: 2;
    }
  }
  .add-on {
    display: inline-block;
    width: auto;
    height: $baseLineHeight;
    min-width: 16px;
    padding: 4px 5px;
    font-size: $baseFontSize;
    font-weight: normal;
    line-height: $baseLineHeight;
    text-align: center;
    text-shadow: 0 1px 0 $white;
    background-color: $grayLighter;
    border: 1px solid #ccc;
  }
  .add-on,
  .btn,
  .btn-group > .dropdown-toggle {
    vertical-align: top;
    border-radius: 0;
  }
  .active {
    background-color: color($green l(+30));
    border-color: $green;
  }
}

.input-prepend {
  .add-on,
  .btn {
    margin-right: -1px;
  }
  .add-on:first-child,
  .btn:first-child {
    /*  FYI, `.btn:first-child` accounts for a button group that's prepended */
    border-radius: $inputBorderRadius 0 0 $inputBorderRadius;
  }
}

.input-append {
  input,
  select,
  .uneditable-input {
    border-radius: $inputBorderRadius 0 0 $inputBorderRadius;
    + .btn-group .btn:last-child {
      border-radius: 0 $inputBorderRadius $inputBorderRadius 0;
    }
  }
  .add-on,
  .btn,
  .btn-group {
    margin-left: -1px;
  }
  .add-on:last-child,
  .btn:last-child,
  .btn-group:last-child > .dropdown-toggle {
    border-radius: 0 $inputBorderRadius $inputBorderRadius 0;
  }
}

/*  Remove all border-radius for inputs with both prepend and append */
.input-prepend.input-append {
  input,
  select,
  .uneditable-input {
    border-radius: 0;
    + .btn-group .btn {
      border-radius: 0 $inputBorderRadius $inputBorderRadius 0;
    }
  }
  .add-on:first-child,
  .btn:first-child {
    margin-right: -1px;
    border-radius: $inputBorderRadius 0 0 $inputBorderRadius;
  }
  .add-on:last-child,
  .btn:last-child {
    margin-left: -1px;
    border-radius: 0 $inputBorderRadius $inputBorderRadius 0;
  }
  .btn-group:first-child {
    margin-left: 0;
  }
}




/*  SEARCH FORM */
/*  ----------- */

input.search-query {
  padding-right: 14px;
  padding-right: 4px \9;
  padding-left: 14px;
  margin-bottom: 0; /*  Remove the default margin on all inputs */
  border-radius: 15px;
}

/* Allow for input prepend/append in search forms */
.form-search .input-append .search-query,
.form-search .input-prepend .search-query {
  border-radius: 0; /*  Override due to specificity */
}
.form-search .input-append .search-query {
  border-radius: 14px 0 0 14px;
}
.form-search .input-append .btn {
  border-radius: 0 14px 14px 0;
}
.form-search .input-prepend .search-query {
  border-radius: 0 14px 14px 0;
}
.form-search .input-prepend .btn {
  border-radius: 14px 0 0 14px;
}




/*  HORIZONTAL & VERTICAL FORMS */
/*  --------------------------- */

/*  Common properties */
/*  ----------------- */

.form-search,
.form-inline,
.form-horizontal {
  input,
  textarea,
  select,
  .help-inline,
  .uneditable-input,
  .input-prepend,
  .input-append {
    display: inline-block;

    margin-bottom: 0;
    vertical-align: middle;
  }
  /*  Re-hide hidden elements due to specifity */
  .hide {
    display: none;
  }
}
.form-search label,
.form-inline label,
.form-search .btn-group,
.form-inline .btn-group {
  display: inline-block;
}
/*  Remove margin for input-prepend/-append */
.form-search .input-append,
.form-inline .input-append,
.form-search .input-prepend,
.form-inline .input-prepend {
  margin-bottom: 0;
}
/*  Inline checkbox/radio labels (remove padding on left) */
.form-search .radio,
.form-search .checkbox,
.form-inline .radio,
.form-inline .checkbox {
  padding-left: 0;
  margin-bottom: 0;
  vertical-align: middle;
}
/*  Remove float and margin, set to inline-block */
.form-search .radio input[type="radio"],
.form-search .checkbox input[type="checkbox"],
.form-inline .radio input[type="radio"],
.form-inline .checkbox input[type="checkbox"] {
  float: left;
  margin-right: 3px;
  margin-left: 0;
}


/*  Margin to space out fieldsets */
.control-group {
  margin-bottom: calc($baseLineHeight / 2);
}

/*  Legend collapses margin, so next element is responsible for spacing */
legend + .control-group {
  margin-top: $baseLineHeight;
  -webkit-margin-top-collapse: separate;
}

/*  If a control is disabled, also gray out the control label */
.control-group.disabled  .control-label {
	color: $textGray;
	cursor: default;
}

/*  Tooltop link */
.control-group .tooltip-link {
	top: -0.5em;
	position: relative;
	font-size: 75%;
	line-height: 0;
	vertical-align: baseline;
	padding: 2px;
	cursor: default;
	font-weight: normal;
}


/*  Horizontal-specific styles */
/*  -------------------------- */

.form-horizontal {
  /*  Increase spacing between groups */
  .control-group {
    margin-bottom: $baseLineHeight;
    @mixin clearfix;
  }
  /*  Float the labels left */
  .control-label {
    float: left;
    width: calc($horizontalComponentOffset - 20px);
    padding-top: 5px;
    text-align: right;
  }
  /*  Move over all input controls and content */
  .controls {
    margin-left: $horizontalComponentOffset;
  }
  /*  Remove bottom margin on block level help text since that's accounted for on .control-group */
  .help-block {
    margin-bottom: 0;
  }
  /*  And apply it only to .help-block instances that follow a form control */
  input,
  select,
  textarea,
  .uneditable-input,
  .input-prepend,
  .input-append {
    + .help-block {
      margin-top: calc($baseLineHeight / 2);
    }
  }
  /*  Move over buttons in .form-actions to align with .controls */
  .form-actions {
    padding-left: $horizontalComponentOffset;
  }
}



/*  Inline-specific styles */
/*  -------------------------- */
.form-inline {
    label {
        line-height: 28px;
    }
    .form-value {
        line-height: 28px;
        margin-right: 15px;
    }
    input {
        width: auto;
        margin-right: 15px;
    }
}

/*  Form elements */
/*  ---------------------- */

.control {
	position: relative;
    font-size: @baseFontSize;
	/*  synthetic placeholder */
	.placeholder {
		color: $placeholderText;
		position: absolute;
		max-width: 100%;
		top: 3px;
		left: 6px;
		font-size: inherit;
	}
	::placeholder {
		color:$placeholderText;
		opacity:1;
	}
	/* uneditable-input a read only text field or text area */
	.uneditable-input {
		background-color: $offWhite;
		min-height: $baseLineHeight;
		font-size: inherit;
		&.uneditable-input-multiline {
			overflow-y: auto;
			white-space: normal;
			white-space: pre-wrap;
			word-break: break-all;
			word-break: break-word;
			height: auto;
			max-height: 100px;
		}
	}
    &.shared-controls-textcontrol {
        .control-clear {
            position: absolute;
            top: 50%;
            @mixin translate 0,-50%;
            right: 10px;
            font-size: 150%;
            color: $textGray;
            display: none;
        }
        input {
            padding-right: 25px;
        }
    }
    &.shared-controls-spinnercontrol {
        text-align: center;
        input, .uneditable-input {
            display: block;
            width: calc(100% - 56px); /* 100% minus padding and border */
            padding: 4px 48px 4px 6px;

            transition: border-color 2s, box-shadow 2s;
        }

        input.corrected-value {
            border-color: $red;
            box-shadow: color($red a(50%)) 0px 0px 8px 0px;
        }

        .increment-down, .increment-up {
            position: absolute;
            right: 1px;
            top: 1px;
            width: 20px;
            line-height: 20px;

            &:focus {
                @mixin focus-pill;
            }

            &.disabled {
                color: $textGray;
            }
        }

        .increment-down {
            right: 26px;
        }
    }

    &.shared-findinput {
        display: inline-block;
        margin: 5px 0;
        input {
            width: 250px;
        }
    }
}


/* simple text only control (LabelControl) */
.input-label {
    max-width: 100%;
    padding: 6px 0 4px 0;
    line-height: 15px;
    font-size: $baseFontSize;
    display: inline-block;
    word-wrap: break-word;
    word-break: break-word;
}

/* wrapper for checkbox */
label.checkbox {
	padding: 2px 0 2px 22px;
	margin-bottom: 0;
	min-height: $baseLineHeight;
	position: relative;
	min-height: 16px;
    overflow: hidden;
    text-overflow: ellipsis;

	&.disabled {
		color: $textGray;
	}
	>.btn {
		padding: 0;
		width: 14px;
		height: 14px;
		line-height: 14px;
    	position: absolute;
        left: 0;
		> [class*="icon-"] {
			margin: 0;
		}
	}
}

/*  Checkbox Controls */
/*  ---------------- */

.control label.checkbox {
	padding: 6px 0 4px 22px;
}

.shared-controls-checkboxgroup label.checkbox {
    padding-top: 2px;
    padding-bottom: 2px;
}


/*  Key Value Control */
/*  ---------------- */
.shared-controls-keyvaluecontrol {
  .shared-controls-textcontrol {
    margin-right: 10px;
  }

  .key-text-control-placeholder,
  .value-text-control-placeholder {
    float: left;
  }


}


/*  Accumulator Control */
/*  ------------------- */
.accumulator {
  width: 700px;

  .controls-block & {
	width: 100%;
  }
  .availableOptionsContainer,
  .selectedOptionsContainer {
	float: left;
	width: calc(50% - 10px);
	margin: 0px 20px 0px 0px;
  }
  .addAllLink, .removeAllLink {
	float: right;
  }
  .selectedOptionsContainer {
	margin-right:0px;
  }
  .availableOptionsHeader {
	font-weight: normal;
	font-size: $baseFontSize;
	width: 200px;
	margin-right: 22px;
	padding-bottom: 5px;
	line-height: 0px;
  }
  .selectedOptionsHeader {
	width: 200px;
	margin-right:0px;
  }
  ul.availableOptions, ul.selectedOptions {
	height: 100px;
	overflow: auto;
	list-style: none;
	margin: 0;
	padding: 0;
	border: 1px solid $borderColor;
	clear: left;
  }
  .accDisabled ul.availableOptions,
  .accDisabled ul.selectedOptions {
  	background-color: $offWhite;
  }
  ul.availableOptions li, ul.selectedOptions li {
	clear: left;
	padding: 4px 5px;
	font-size: $baseFontSize;
	cursor: pointer;
	line-height: 1;
  }
  ul.availableOptions li:hover,
  ul.selectedOptions li:hover {
  	background-color: $pillBackgroundColorHover;
  }
  ul.availableOptions li span, ul.selectedOptions li span {
	margin:0px 8px 0 0;
	display: block;
	float: left;
  }
  ul span.splIcon-arrow-e {
  	background-color: $splunkGreen;
  }
  ul.availableOptions li.selected, .accDisabled ul li {
  	color: $textGray;
  }
  ul.availableOptions li.selected span.splIcon,
  .accDisabled ul li span.splIcon {
  	background-color: $grayLightMedium;
  }
  .selected {
  	background-color: transparent;
  }
  .control-group.error & ul {
  	border-color: $red;
  }
  .icon-class {
  	color: $textGray;
  }
  div.wide {
	width: 340px;
  }
}

/*  table forms? */
/*  ---------------------- */

/* TODO: figure out what this is for

	<table class="form">
		<tr>
			<td>cell</td>
			<td>
				<div class="help-block">help-block</div>
			</td>
		</tr>
		<tr>
			<td>cell</td>
			<td>
				<div class="help-block">help-block</div>
			</td>
		</tr>
	</table>

*/
table.form td {
	padding-right: 10px;
	padding-bottom: 5px;
}

table.form tr:last-child td {
	padding-bottom: 0;
}

table.form tr:last-child .help-block {
	margin-bottom: 0;
}


/*  Format Dialogs */
/*  --------------- */

/* format controls

	<div class="form-format">
		...
	</div>

*/

.form-format {
	.control-label {
		width: 100px;
	}
	/*  remove margin from last group */
	.control-group:last-child {
		margin-bottom: 0;
	}

	.controls {
		margin-left: 120px;
	}
}

/*  TODO: not sure why this is needed */
.form-horizontal textarea {
	max-height: 250px;
	max-width: 206px;
}

.form-horizontal .control-group {
	margin-bottom: 10px;
}

/*  SPL-72247 - aad margin to help block */
.form-horizontal .controls > .help-block {
	margin-top: $baseLineHeight / 4;
}

/*  Horizontal form, left-aligned */

.form-horizontal.align-left {
    .control-label {
        width: auto;
        text-align: left;
        display: inline-block;
        float: none;
    }
    .controls {
        margin-left: 15px;
        display: inline-block;
    }
}

/*  Complex Forms */
/*  ===================================== */


/*  Form Justified */
/*  --------------- */
/*  justified forms & block btn-group */
/*  if there's only one input block per control group */

/*
	<form class="form-horizontal form-justified">
		<div class="control-group">
			<label class="control-label" for="inputEmail">Email</label>
			<div class="controls">
				<input type="text" id="inputEmail" placeholder="Email">
			</div>
		</div>
		<div class="control-group">
			<label class="control-label" for="inputPassword">Password</label>
			<div class="controls">
				<input type="password" id="inputPassword" placeholder="Password">
			</div>
		</div>
		<div class="control-group">
			<div class="controls">
				<label class="checkbox">
					<input type="checkbox"> Remember me
				</label>
				<button type="submit" class="btn">Sign in</button>
			</div>
		</div>
	</form>
*/
.form-justified {
	.btn-group,
	input[type="text"],
	input[type="password"],
	textarea,
	.uneditable-input
	 {
		width: 100%;
		max-width: 100%;
		box-sizing: border-box;
	}
	input[type="text"],
	input[type="password"] {
		min-height: 26px; /*  should use a var here maybe */
	}
	.btn-combo {
		display: block;
	}
	.btn {
		width: 100%;
		box-sizing: border-box;
	}
}



/*  Form Complex */
/*  -------------- */

/*
	<form class="form-horizontal form-complex">
		<div class="control-group">
			<label class="control-label" for="">Email</label>
			<div class="controls">
				<input type="text" id="" placeholder="Email">
			</div>
		</div>
		<div class="control-group">
			<label class="control-label" for="">Password</label>
			<div class="controls">
				<input type="password" id="" placeholder="Password">
				<span class="help-block help-outer">
					eg. this is some help text <br>
					that goes outside the form for some reason ;_;
				</span>
			</div>
		</div>
		<div class="control-group">
			<div class="controls">
				<label class="checkbox">
					<input type="checkbox"> Remember me
				</label>
				<button type="submit" class="btn">Sign in</button>
			</div>
		</div>
	</form>

*/
/*  complex forms? maybe use form-narrow? */
.form-complex {
	.controls {
		position: relative;
	}
	.control-group {
		width: 440px;/*  magic number ;_; maybe move width to container */
	}
	.control-heading { /*  like control-label but without the float */
		padding-top: 5px;
		text-align: right;
		width: 160px;
		font-weight: bold;
	}
	.help-block, .help-outer {
		position: absolute;
		top: 4px;
		left: 100%;
		margin-left: 10px;
		margin-top: 0 !important; /*  TODO: get rid of important; */
		width: 280px;
	}
	.outline {
		border: 1px solid $borderColor;
		border-radius: 3px;
		margin-bottom: 10px; /*  TOOD: use var here; */
		margin-top: -5px;
		padding-top: 5px;
	}
	fieldset {border: 1px solid transparent;}
	.btn-check {
		display: inline-block;
		height: $baseLineHeight;
		line-height: $baseLineHeight;
		padding: 0;
		text-align: center;
		vertical-align: middle;
		width: $baseLineHeight;
	}
	.control-feedback {
		display: block;
		width: 100%;
	}
}

/*  feedback for controls */
.control-feedback {
	color: $textGray;
	background-color: $grayLighter;
	border-radius: 3px;
	font-size: 85%;
	text-align: center;
	margin-top: 3px;
}

/*  SyntheticRadioControl */
/*  --------------------- */


.shared-controls-syntheticradiocontrol {
    > .tooltip {
    	white-space:normal;
    }

    .btn-radio {
        display: block;
        position: relative;
        padding: 3px 0 3px 20px;
        color: $textColor;
        text-decoration: none;

        &:before {
            content:'';
            @mixin interactive;
            line-height: 12px;

            position: absolute;
            left: 0;
            top: 2px;
            box-sizing: border-box;
            width: 16px;
            height: 16px;
            border-radius: 8px;

        }

        &.disabled {
            cursor: not-allowed;
            color: $textGray;
            opacity: 0.65;

            &:before {
                background: $interactiveDisabledBackgroundColor;
                filter: none;
                border-color: $borderColor;
            }
        }

        &.active:after {
            content:'';
            position: absolute;
            left: 4px;
            top: 6px;
            box-sizing: border-box;
            width: 8px;
            height: 8px;
            border-radius: 4px;
            background-color: currentColor;
        }
    }
}

/*  Button Combo Block */
/*  ------------------- */

/*  btn-combo block , just the combo */
.btn-combo-block {
	display:block;
	width: 100%;
	/*  box-sizing: border-box; */
	.btn {
		width: 100%;
		box-sizing: border-box;
	}
}

/*  Block Controls */
/*  ------------------- */

/*
	<form action="#" method="post" class="form-horizontal form-complex">
		<div class="control-group">
			<label for="#" class="control-label">label</label>
			<div class="controls controls-block">
				<div class="btn-combo">
					<button class="btn dropdown-toggle" data-toggle="dropdown">
						dropdown
						<span class="caret"></span>
					</button>
					<ul class="dropdown-menu">
						<li><a href="#">foo</a></li>
					</ul>
				</div><!-- /.btn-combo -->
			</div><!-- /.controls -->
		</div><!-- /.control-group -->
	</form>
*/

/*  for block level controls */
.controls-block {
	.btn-group ,
	.btn-combo {
		display: block;
	}
	.btn {
		width: 100%;
		box-sizing: border-box;
	}
	input[type="text"], .uneditable-input {
		width: 100%;
		box-sizing: border-box;
		min-height: 26px;
		display: block;
	}
	textarea {
		width: 100%;
		max-width: 100%;
		min-height: 2em;
		resize: vertical;
		box-sizing: border-box;
	}
}


/*  Controls Half Block */
/*  --------------------- */

.controls-fill {
	.btn-group,
	.btn-combo {
		display:block;
        display: flex;
        flex-direction: row;
	}
	.btn {
		box-sizing: border-box;
        flex: auto;
	}
	input {
		box-sizing: border-box;
		min-height: 26px;
        flex: auto;
	}
}

/*  50% width controls */
.controls-halfblock {
	.btn-group,
	.btn-combo {
		display:block;
        display: flex;
        flex-direction: row;
	}
	.btn {
		width: 50%;
		box-sizing: border-box;
        flex: 1 0 0px;
	}
	input {
		width: 50%;
		box-sizing: border-box;
		min-height: 26px;
        flex: 1 0 0px;
	}
}

/*  1/3 controls */
.controls-thirdblock {

	.btn-group,
	.btn-combo {
		display:block;
        display: flex;
        flex-direction: row;

	}
	.btn {
		width: 33.333%;
		box-sizing: border-box;
        flex: auto;
	}
}

/*  1/4 controls */
.controls-quarterblock {
	.btn-group,
	.btn-combo {
		display:block;
	}
	.btn {
		width: 25%;
		box-sizing: border-box;
	}
}

/*  Controls Split */
/*  ------------------- */

/*
	<form action="#" method="post" class="form-horizontal form-complex">
		<div class="control-group">
			<label for="#" class="control-label">in</label>
			<div class="controls controls-split">
				<input type="text" placeholder="5">
				<div class="btn-combo">
					<button class="btn dropdown-toggle" data-toggle="dropdown">
						minutes
						<span class="caret"></span>
					</button>
					<ul class="dropdown-menu">
						<li><a href="#">foo</a></li>
					</ul>
				</div><!-- /.btn-combo -->
			</div><!-- /.controls -->
		</div><!-- /.control-group -->
	</form>
*/

/*  for controls with text & combo */
.controls-split {
	.btn-combo,
	.btn-group {
		display:inline-block;
		width: 50%;
		vertical-align: middle;
		.btn {
			width: 100%;
		}
	}
	.btn {
		display:block;
		vertical-align: middle;
		box-sizing: border-box;
	}

	input[type="text"]
	{
		box-sizing: border-box;
		width: 50%;
		min-height: 26px;
		vertical-align: middle;
	}
	/*  FIXME: this doesn't scale well ;_; */
	.btn-combo + input ,
	input + .btn-combo ,
	.btn-combo + .shared-controls-textcontrol,
	.btn-group + .shared-controls-textcontrol,
	.shared-controls-textcontrol + .btn-combo,
	.shared-controls-textcontrol + .btn-group
	{
		margin-left: 0;
	}
	/*  alert controls */
	.shared-controls-textcontrol {
		display: inline;
	}
}

/* Small forms
/* ===================================== */


.control-group-small {
	.control-label {
		font-size: $baseFontSizeSmall;
	}
}

.control-small {
    font-size: $baseFontSizeSmall;

    input[type="text"],
    .uneditable-input,
    textarea {
        padding-top: 2px;
        padding-bottom: 2px;
        font-size: inherit;
    }

    .uneditable-input {
        min-height: 16px;
    }

    .btn, &.btn-group > .btn {
        padding-top: 2px;
        padding-bottom: 2px;
        font-size: $baseFontSizeSmall;
    }
}

/*  Form add-ons */
/*  ------------ */

.controls.input-append, .controls.input-prepend {
	display: block;
}

.controls-split.input-prepend .btn-group {
    margin-right: -1px;
}

.controls-split.input-append .btn-group {
    margin-left: -1px;
}

.input-append input + .add-on.dropdown-toggle {
	border-top-right-radius: $interactiveBorderRadius;
	border-bottom-right-radius: $interactiveBorderRadius;
}

.input-append input.active{
	/* need this to override some weird library rule. */
	border-color: rgba(82,168,236,.8);

	&:focus {
		background-color: $white;
	}

	&:not(:focus) {
	     background-color: $white;
	}
}

a.add-on {
 @mixin interactive;
 &:hover {
	@mixin interactive-hover;
	text-decoration: none;
	}
}

/*  Error States */
/*  ---------------- */

.error {
	.btn {
		@mixin interactive-error;

		&.active {
			@mixin interactive-error-hover;
			background-image: none;
		}
		&:hover {
			@mixin interactive-error-hover;
		}
	}
}

.required {
	color: $errorText;
}

/*  Custom shared form components for color editing */
/*  ------------------------------------------------------ */

.color-square {
  display: block;
  width: 18px;
  height: 18px;
  background: $green;
  border: 1px solid $borderDarkColor;
  border-radius: 2px;

  &:focus {
    @mixin focus-button;
  }
}

.color-square-standalone {
	margin-top: 3px;
}

/*  Lite UI */
/*  ================ */
@if $theme == lite {
	textarea,input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], .uneditable-input {

		&:not(:focus) {
			border-color: $splunkLiteBlack;
		}

		&:focus {
			box-shadow: none;
		}
	}
}
