--- jquery.iphone-style-checkboxes.js	2011-05-05 16:41:16.000000000 -0700
+++ jquery.iphone-style-checkboxes.js.org	2011-05-05 13:05:46.000000000 -0700
@@ -30,15 +30,15 @@
   wrapCheckboxWithDivs: function() {
     this.$elem.wrap('<div class="' + this.containerClass + '" />');
     this.container = this.$elem.parent();
-    
-    this.offLabel  = $('<label class="'+ this.labelOffClass +'">' +
+       
+    this.offLabel  = $('<span class="'+ this.labelOffClass +'">' +
                          '<span>'+ this.uncheckedLabel +'</span>' +
-                       '</label>').appendTo(this.container);
+                       '</span>').appendTo(this.container);
     this.offSpan   = this.offLabel.children('span');
     
-    this.onLabel   = $('<label class="'+ this.labelOnClass +'">' +
+    this.onLabel   = $('<span class="'+ this.labelOnClass +'">' +
                          '<span>'+ this.checkedLabel +'</span>' +
-                       '</label>').appendTo(this.container);
+                       '</span>').appendTo(this.container);
     this.onSpan    = this.onLabel.children('span');
     
     this.handle    = $('<div class="' + this.handleClass + '">' +
@@ -135,10 +135,13 @@
   
   // Setup the control's inital position
   initialPosition: function() {
-    this.offLabel.css({ width: this.container.width() - 5 });
-
+    this.contWidth = (this.container.width() <= 0) ? 63 : this.container.width();
+    this.handleWidth = (this.handle.width() <= 0) ? 25 : this.handle.width();
+    
+    this.offLabel.css({ width: this.contWidth - 5 });
+	
     var offset = ($.browser.msie && $.browser.version < 7) ? 3 : 6;
-    this.rightSide = this.container.width() - this.handle.width() - offset;
+    this.rightSide = this.contWidth - this.handleWidth - offset;
 
     if (this.$elem.is(':checked')) {
       this.handle.css({ left: this.rightSide });
