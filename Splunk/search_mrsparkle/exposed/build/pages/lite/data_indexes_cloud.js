webpackJsonp([25],{0:function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__.p=function(){function make_url(){for(var seg,len,output="",i=0,l=arguments.length;i<l;i++)seg=arguments[i].toString(),len=seg.length,len>1&&"/"==seg.charAt(len-1)&&(seg=seg.substring(0,len-1)),output+="/"!=seg.charAt(0)?"/"+seg:seg;if("/"!=output){var segments=output.split("/"),firstseg=segments[1];if("static"==firstseg||"modules"==firstseg){var postfix=output.substring(firstseg.length+2,output.length);output="/"+firstseg,window.$C.BUILD_NUMBER&&(output+="/@"+window.$C.BUILD_NUMBER),window.$C.BUILD_PUSH_NUMBER&&(output+="."+window.$C.BUILD_PUSH_NUMBER),"app"==segments[2]&&(output+=":"+getConfigValue("APP_BUILD",0)),output+="/"+postfix}}var root=getConfigValue("MRSPARKLE_ROOT_PATH","/"),djangoRoot=getConfigValue("DJANGO_ROOT_PATH",""),locale=getConfigValue("LOCALE","en-US"),combinedPath="";return combinedPath=djangoRoot&&output.substring(0,djangoRoot.length)===djangoRoot?output.replace(djangoRoot,djangoRoot+"/"+locale.toLowerCase()):"/"+locale+output,""==root||"/"==root?combinedPath:root+combinedPath}function getConfigValue(key,defaultValue){if(window.$C&&window.$C.hasOwnProperty(key))return window.$C[key];if(void 0!==defaultValue)return defaultValue;throw new Error("getConfigValue - "+key+" not set, no default provided")}return make_url("/static/build/pages/lite")+"/"}(),__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("require/underscore"),__webpack_require__("routers/IndexesCloud"),__webpack_require__("models/indexes/cloud/Index"),__webpack_require__("util/router_utils")],__WEBPACK_AMD_DEFINE_RESULT__=function(_,IndexesRouter,IndexModel,router_utils){var createRouter=function(isSingleInstanceCloud,pageError){new IndexesRouter({isSingleInstanceCloud:isSingleInstanceCloud,pageError:pageError});try{router_utils.start_backbone_history()}catch(e){window.location="./"}};(new IndexModel).fetch().then(function(){createRouter(!1,null)}).fail(function(error){404===error.status?createRouter(!0,null):createRouter(!0,error)})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"routers/IndexesCloud":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("require/underscore"),__webpack_require__("require/backbone"),__webpack_require__("routers/IndexesBase"),__webpack_require__("models/indexes/cloud/Index"),__webpack_require__("models/services/data/Indexes"),__webpack_require__("collections/indexes/cloud/Indexes"),__webpack_require__("collections/services/data/Indexes"),__webpack_require__("collections/indexes/cloud/Archives"),__webpack_require__("models/indexes/shared/IndexFetchData"),__webpack_require__("models/indexes/shared/NoInternalIndexFetchData"),__webpack_require__("views/error/Master"),__webpack_require__("views/indexes/cloud/AddEditIndexDialog"),__webpack_require__("views/indexes/shared/PageController"),__webpack_require__(1037),__webpack_require__(1038)],__WEBPACK_AMD_DEFINE_RESULT__=function(_,Backbone,BaseRouter,IndexModel,IndexSingleInstanceModel,IndexesCollection,IndexesSingleInstanceCollection,ArchivesCollection,IndexFetchData,IndexSingleInstanceFetchData,ErrorView,AddEditIndexDialog,IndexesController,IndexesGridRowTemplate,IndexesGridRowSingleInstanceTemplate){return BaseRouter.extend({initialize:function(options){BaseRouter.prototype.initialize.apply(this,arguments),this.setPageTitle(_("Manage Indexes").t()),this.isSingleInstanceCloud=!!_.isObject(options)&&!!options.isSingleInstanceCloud,this.pageError=options.pageError},createController:function(model,collection){if(!this.model.user.canEditIndexes()||this.pageError){var status=_("Access Denied").t(),message=_("You do not have permission to view this page.").t();this.pageError&&(status=this.pageError.status+" - "+this.pageError.statusText,message=this.pageError.statusText);var errorController=new ErrorView({model:{application:this.model.application,error:new Backbone.Model({status:status,message:message})}});return errorController.model.controller=new Backbone.Model,errorController}return new IndexesController({model:model||this.model,router:this,isCloud:!0,isSingleInstanceCloud:this.isSingleInstanceCloud,collection:collection||this.collection,archivesCollectionClass:ArchivesCollection,indexModelClass:this.isSingleInstanceCloud?IndexSingleInstanceModel:IndexModel,indexesCollectionClass:this.isSingleInstanceCloud?IndexesSingleInstanceCollection:IndexesCollection,indexesFetchDataClass:this.isSingleInstanceCloud?IndexSingleInstanceFetchData:IndexFetchData,addEditDialogClass:AddEditIndexDialog,showAppFilter:!1,showConfirmSaveDialog:!this.isSingleInstanceCloud,showConfirmDeleteDialog:!this.isSingleInstanceCloud,templates:{gridRow:this.isSingleInstanceCloud?IndexesGridRowSingleInstanceTemplate:IndexesGridRowTemplate}})}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"models/indexes/shared/IndexFetchData":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("require/underscore"),__webpack_require__("models/shared/EAIFilterFetchData")],__WEBPACK_AMD_DEFINE_RESULT__=function(_,EAIFilterFetchData){return EAIFilterFetchData.extend({getCalculatedSearch:function(){var searchString=EAIFilterFetchData.prototype.getCalculatedSearch.apply(this,arguments);return""==searchString?searchString="isVirtual=0":""!=searchString&&(searchString+=" AND isVirtual=0"),searchString}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"models/indexes/cloud/Index":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),__webpack_require__("models/Base"),__webpack_require__("models/services/data/Indexes"),__webpack_require__("util/splunkd_utils")],__WEBPACK_AMD_DEFINE_RESULT__=function($,_,BaseModel,BaseIndexesModel,splunkdutils){var Index=BaseIndexesModel.extend({url:"cluster_blaster_indexes/sh_indexes_manager",initialize:function(){BaseIndexesModel.prototype.initialize.apply(this,arguments)},_onerror:function(model,response,options){var text,message;response&&response.hasOwnProperty("fetchXhr")&&response.fetchXhr&&response.fetchXhr.hasOwnProperty("status")&&404==response.fetchXhr.status&&response.fetchXhr.hasOwnProperty("responseJSON")&&"object"==typeof response.fetchXhr.responseJSON&&response.fetchXhr.responseJSON.messages.length&&response.fetchXhr.responseJSON.messages[0].hasOwnProperty("text")&&(text=response.fetchXhr.responseJSON.messages[0].text,message=splunkdutils.createMessageObject("error",text)),message?(this.trigger("serverValidated",!1,this,[message]),model.error.set("message",message)):BaseModel.prototype._onerror.call(this,model,response,options)}});return Index}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"collections/indexes/cloud/Indexes":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("require/underscore"),__webpack_require__("models/indexes/cloud/Index"),__webpack_require__("collections/services/data/Indexes")],__WEBPACK_AMD_DEFINE_RESULT__=function(_,IndexModel,BaseIndexesCollection){return BaseIndexesCollection.extend({model:IndexModel,url:"cluster_blaster_indexes/sh_indexes_manager",initialize:function(){BaseIndexesCollection.prototype.initialize.apply(this,arguments)}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"models/indexes/shared/NoInternalIndexFetchData":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("require/underscore"),__webpack_require__("models/shared/EAIFilterFetchData")],__WEBPACK_AMD_DEFINE_RESULT__=function(_,EAIFilterFetchData){return EAIFilterFetchData.extend({getCalculatedSearch:function(){var searchString=EAIFilterFetchData.prototype.getCalculatedSearch.apply(this,arguments);return""==searchString?searchString="isVirtual=0":""!=searchString&&(searchString+=" AND isVirtual=0"),searchString+=" AND isInternal=0"}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},1037:function(module,exports){module.exports='<td class="index-name">\n    <% if (model.entity.entry.links.get("edit")) { %>\n    <a href=<%- editLink %> class="editAction"><%- model.entity.entry.get("name") %></a>\n    <% } else { %>\n    <span class="disabled-action"><%- model.entity.entry.get("name") %></span>\n    <% } %>\n</td>\n<td class="actions">\n    <% if (model.entity.entry.links.get("edit")) { %>\n    <a href=<%- editLink %> class="editAction"><%= _("Edit").t() %></a>\n    <% } else { %>\n    <span class="disabled-action"><%= _("Edit").t() %></span>\n    <% } %>\n    <% if (isInternal) { %>\n    <span class="disabled-action"><%= _("Delete").t() %></span>\n    <% if (isEnabled) { %>\n    <span class="disabled-action"><%= _("Disable").t() %></span>\n    <% } else { %>\n    <span class="disabled-action"><%= _("Enable").t() %></span>\n    <% } %>\n    <% } else { %>\n    <% if (isEnabled) { %>\n    <a href="#" class="deleteAction"><%= _("Delete").t() %></a>\n    <a href="#" class="disableAction"><%= _("Disable").t() %></a>\n    <% } else { %>\n    <span class="disabled-action"><%= _("Delete").t() %></span>\n    <a href="#" class="enableAction"><%= _("Enable").t() %></a>\n    <% } %>\n    <% } %>\n</td>\n<td class="index-type">\n    <i class="icon-<%-model.entity.getDataType()%> icon-large"></i>\n    <%- formatDataType(model.entity.getDataType()) %>\n</td>\n<% if (user.canUseApps()) { %>\n<td class="index-app"><%- model.entity.entry.content.get("eai:acl.appDisplayName") %></td>\n<% } %>\n<td class="current-size"><%- formatNumbersUtils.bytesToFileSize(model.entity.entry.content.get("currentDBSizeMB") * 1024 * 1024) %></td> <!-- format w/ size units -->\n<td class="max-size"><%- formatNumbersUtils.bytesToFileSize(model.entity.entry.content.get("maxTotalDataSizeMB") * 1024 * 1024) %></td> <!-- format in GB -->\n<td class="event-count" title="<%- splunkUtil.sprintf(_(\'%s events\').t(), model.entity.entry.content.get("totalEventCount")) %>"><%- formatNumbersUtils.abbreviateNumber(model.entity.entry.content.get("totalEventCount")) %></td> <!-- Abbreviate number -->\n<td class="earliest-event" title="<%- formatToLocalTime(model.entity.entry.content.get("minTime")) %>"><%- formatToRelativeTime(model.entity.entry.content.get("minTime")) %></td> <!-- format into relative time -->\n<td class="latest-event" title="<%- formatToLocalTime(model.entity.entry.content.get("maxTime")) %>"><%- formatToRelativeTime(model.entity.entry.content.get("maxTime")) %></td><!-- format into relative time -->\n<td class="retention">\n    <% var frozenTimePeriodInSecs = model.entity.entry.content.get("frozenTimePeriodInSecs");\n        var frozenTimePeriodInSecsDisplay = frozenTimePeriodInSecs === 0 ? _("keep indefinitely").t() : timeUtils.getRelativeStringFromSeconds(frozenTimePeriodInSecs);\n    %>\n    <%- frozenTimePeriodInSecsDisplay %></td> <!-- format into relative time -->\n\n<% if (user.canViewArchives()) { %>\n    <td class="archive"><%- model.entity.entry.content.get("archive.provider") %></td>\n<% } %>\n\n<td class="index-status">\n    <div class="status-cell-placeholder"></div>\n</td>\n'},1038:function(module,exports){module.exports='<td class="index-name">\n    <% if (model.entity.entry.links.get("edit")) { %>\n    <a href=<%- editLink %> class="editAction"><%- model.entity.entry.get("name") %></a>\n    <% } else { %>\n    <span class="disabled-action"><%- model.entity.entry.get("name") %></span>\n    <% } %>\n</td>\n<td class="actions">\n    <% if (model.entity.entry.links.get("edit")) { %>\n    <a href=<%- editLink %> class="editAction"><%= _("Edit").t() %></a>\n    <% } else { %>\n    <span class="disabled-action"><%= _("Edit").t() %></span>\n    <% } %>\n    <% if (isInternal) { %>\n    <span class="disabled-action"><%= _("Delete").t() %></span>\n    <% if (isEnabled) { %>\n    <span class="disabled-action"><%= _("Disable").t() %></span>\n    <% } else { %>\n    <span class="disabled-action"><%= _("Enable").t() %></span>\n    <% } %>\n    <% } else { %>\n    <% if (isEnabled) { %>\n    <a href="#" class="deleteAction"><%= _("Delete").t() %></a>\n    <a href="#" class="disableAction"><%= _("Disable").t() %></a>\n    <% } else { %>\n    <span class="disabled-action"><%= _("Delete").t() %></span>\n    <a href="#" class="enableAction"><%= _("Enable").t() %></a>\n    <% } %>\n    <% } %>\n</td>\n<td class="index-type">\n    <i class="icon-<%-model.entity.getDataType()%> icon-large"></i>\n    <%- formatDataType(model.entity.getDataType()) %>\n</td>\n<% if (user.canUseApps()) { %>\n<td class="index-app"><%- model.entity.entry.acl.get("app") %></td>\n<% } %>\n<td class="current-size"><%- formatNumbersUtils.bytesToFileSize(model.entity.entry.content.get("currentDBSizeMB") * 1024 * 1024) %></td> <!-- format w/ size units -->\n<td class="max-size"><%- formatNumbersUtils.bytesToFileSize(model.entity.entry.content.get("maxTotalDataSizeMB") * 1024 * 1024) %></td> <!-- format in GB -->\n<td class="event-count" title="<%- splunkUtil.sprintf(_(\'%s events\').t(), model.entity.entry.content.get("totalEventCount")) %>"><%- formatNumbersUtils.abbreviateNumber(model.entity.entry.content.get("totalEventCount")) %></td> <!-- Abbreviate number -->\n<td class="earliest-event" title="<%- formatToLocalTime(model.entity.entry.content.get("minTime")) %>"><%- formatToRelativeTime(model.entity.entry.content.get("minTime")) %></td> <!-- format into relative time -->\n<td class="latest-event" title="<%- formatToLocalTime(model.entity.entry.content.get("maxTime")) %>"><%- formatToRelativeTime(model.entity.entry.content.get("maxTime")) %></td><!-- format into relative time -->\n<td class="retention">\n    <% var frozenTimePeriodInSecs = model.entity.entry.content.get("frozenTimePeriodInSecs");\n    var frozenTimePeriodInSecsDisplay = frozenTimePeriodInSecs === 0 ? _("keep indefinitely").t() : timeUtils.getRelativeStringFromSeconds(frozenTimePeriodInSecs);\n    %>\n    <%- frozenTimePeriodInSecsDisplay %></td> <!-- format into relative time -->\n\n<% if (user.canViewArchives()) { %>\n    <td class="archive"><%- model.entity.entry.content.get("archive.provider") %></td>\n<% } %>\n\n<td class="index-status">\n    <div class="status-cell-placeholder"></div>\n</td>\n'}});