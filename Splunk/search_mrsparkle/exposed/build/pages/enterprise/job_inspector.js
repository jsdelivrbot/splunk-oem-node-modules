webpackJsonp([46],{0:function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__.p=function(){function make_url(){for(var seg,len,output="",i=0,l=arguments.length;i<l;i++)seg=arguments[i].toString(),len=seg.length,len>1&&"/"==seg.charAt(len-1)&&(seg=seg.substring(0,len-1)),output+="/"!=seg.charAt(0)?"/"+seg:seg;if("/"!=output){var segments=output.split("/"),firstseg=segments[1];if("static"==firstseg||"modules"==firstseg){var postfix=output.substring(firstseg.length+2,output.length);output="/"+firstseg,window.$C.BUILD_NUMBER&&(output+="/@"+window.$C.BUILD_NUMBER),window.$C.BUILD_PUSH_NUMBER&&(output+="."+window.$C.BUILD_PUSH_NUMBER),"app"==segments[2]&&(output+=":"+getConfigValue("APP_BUILD",0)),output+="/"+postfix}}var root=getConfigValue("MRSPARKLE_ROOT_PATH","/"),djangoRoot=getConfigValue("DJANGO_ROOT_PATH",""),locale=getConfigValue("LOCALE","en-US"),combinedPath="";return combinedPath=djangoRoot&&output.substring(0,djangoRoot.length)===djangoRoot?output.replace(djangoRoot,djangoRoot+"/"+locale.toLowerCase()):"/"+locale+output,""==root||"/"==root?combinedPath:root+combinedPath}function getConfigValue(key,defaultValue){if(window.$C&&window.$C.hasOwnProperty(key))return window.$C[key];if(void 0!==defaultValue)return defaultValue;throw new Error("getConfigValue - "+key+" not set, no default provided")}return make_url("/static/build/pages/enterprise")+"/"}(),__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("routers/JobInspector"),__webpack_require__("util/router_utils")],__WEBPACK_AMD_DEFINE_RESULT__=function(JobInspectorRouter,router_utils){new JobInspectorRouter;router_utils.start_backbone_history()}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"routers/JobInspector":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),__webpack_require__("routers/Base"),__webpack_require__("models/classicurl"),__webpack_require__("models/search/Job"),__webpack_require__("models/services/saved/Search"),__webpack_require__("views/job_inspector/Master"),__webpack_require__("util/splunkd_utils")],__WEBPACK_AMD_DEFINE_RESULT__=function($,_,BaseRouter,classicurlModel,SearchJobModel,SavedSearchModel,JobInspectorView,splunkd_utils){return BaseRouter.extend({initialize:function(){BaseRouter.prototype.initialize.apply(this,arguments),this.enableSplunkBar=!1,this.enableAppBar=!1,this.enableFooter=!1,this.showAppsList=!1,this.fetchManagers=!1,this.fetchAppLocal=!1,this.model.searchJob=new SearchJobModel,this.model.savedSearch=new SavedSearchModel,this.deferreds.searchJobDeferred=$.Deferred(),this.deferreds.savedSearchJobDeferred=$.Deferred()},page:function(locale,app,page){BaseRouter.prototype.page.apply(this,arguments),classicurlModel.fetch({success:function(){if(classicurlModel.get("sid"))this.model.searchJob.set(this.model.searchJob.idAttribute,classicurlModel.get("sid")),this.model.searchJob.fetch({data:{message_level:"debug"},success:function(model,response){var savedSearchId=this.model.searchJob.getSavedSearchId();savedSearchId?(this.model.savedSearch.set(this.model.savedSearch.idAttribute,savedSearchId),this.model.savedSearch.fetch({success:function(){this.deferreds.savedSearchJobDeferred.resolve()}.bind(this),error:function(){this.model.savedSearch.unset(this.model.savedSearch.idAttribute),this.deferreds.savedSearchJobDeferred.resolve()}.bind(this)})):this.deferreds.savedSearchJobDeferred.resolve(),this.deferreds.searchJobDeferred.resolve()}.bind(this),error:function(model,response){this.model.searchJob.unset(this.model.searchJob.idAttribute),this.deferreds.searchJobDeferred.resolve(),this.deferreds.savedSearchJobDeferred.resolve()}.bind(this)});else{var noSidError=splunkd_utils.createSplunkDMessage(splunkd_utils.FATAL,_("No sid was specified.").t());this.model.searchJob.trigger("error",this.model.searchJob,noSidError),this.deferreds.searchJobDeferred.resolve(),this.deferreds.savedSearchJobDeferred.resolve()}}.bind(this)}),$.when(this.deferreds.pageViewRendered,this.deferreds.searchJobDeferred,this.deferreds.savedSearchJobDeferred).then(function(){this.jobInspector=new JobInspectorView({model:{searchJob:this.model.searchJob,savedSearch:this.model.savedSearch,application:this.model.application,serverInfo:this.model.serverInfo}}),this.setPageTitle(_("Search job inspector").t()),this.pageView.$(".main-section-body").html(this.jobInspector.render().el),$(".preload").replaceWith(this.pageView.el)}.bind(this))}})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"views/job_inspector/Master":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("views/shared/FlashMessages"),__webpack_require__("views/job_inspector/JobOverview"),__webpack_require__("views/job_inspector/JobExecutionCost"),__webpack_require__("views/job_inspector/job_properties/Master"),__webpack_require__("views/job_inspector/Footer"),__webpack_require__("views/job_inspector/Master.pcss")],__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,FlashMessage,JobOverviewView,JobExecutionCost,SearchJobPropertiesView,FooterView,css){return Base.extend({moduleId:module.id,className:"job-inspector",initialize:function(){Base.prototype.initialize.apply(this,arguments),this.model.searchJob.isNew()?(this.children.flashMessage=new FlashMessage({model:this.model.searchJob}),this.children.footerView=new FooterView({model:{application:this.model.application,serverInfo:this.model.serverInfo}})):(this.children.jobOverviewView=new JobOverviewView({model:{searchJob:this.model.searchJob,application:this.model.application}}),this.children.jobExecutionCost=new JobExecutionCost({model:{searchJob:this.model.searchJob}}),this.children.searchJobPropertiesView=new SearchJobPropertiesView({model:{searchJob:this.model.searchJob,savedSearch:this.model.savedSearch,application:this.model.application}}),this.children.footerView=new FooterView({model:{application:this.model.application,serverInfo:this.model.serverInfo}}))},render:function(){return this.$el.html(this.compiledTemplate({})),this.model.searchJob.isNew()?(this.children.flashMessage.render().appendTo(this.$el),this.children.footerView.render().appendTo(this.$el)):(this.children.jobOverviewView.render().appendTo(this.$el),this.children.jobExecutionCost.render().appendTo(this.$el),this.children.searchJobPropertiesView.render().appendTo(this.$el),this.children.footerView.render().appendTo(this.$el)),this},template:'\t                <div class="header">\t                    <h1><%- _("Search job inspector").t() %></h1>\t                </div>\t            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"views/job_inspector/JobOverview":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("uri/route"),__webpack_require__("util/time"),__webpack_require__("shim/splunk.util"),__webpack_require__("stubs/i18n")],__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,route,time_utils,splunkUtil,i18n){return Base.extend({moduleId:module.id,className:"job-overview",initialize:function(){Base.prototype.initialize.apply(this,arguments)},getFormattedTimeFromIso:function(isoDate){var jsDate=time_utils.isoToDateObject(isoDate);return i18n.format_datetime_microseconds(time_utils.jsDateToSplunkDateTimeWithMicroseconds(jsDate))},render:function(){var earliestTime=_.isUndefined(this.model.searchJob.entry.content.get("earliestTime"))?_("(earliest indexed event)").t():this.getFormattedTimeFromIso(this.model.searchJob.entry.content.get("earliestTime")),latestTime=_.isUndefined(this.model.searchJob.entry.content.get("latestTime"))?_("(latest indexed event)").t():this.getFormattedTimeFromIso(this.model.searchJob.entry.content.get("latestTime"));return this.$el.html(this.compiledTemplate({splunkUtil:splunkUtil,i18n:i18n,route:route,searchJob:this.model.searchJob,application:this.model.application,earliestTime:earliestTime,latestTime:latestTime,docLink:route.docHelp(this.model.application.get("root"),this.model.application.get("locale"),"inspector.noresults")})),this},template:'\t                <div class="summary">\t                    <% if (searchJob.entry.content.get("isZombie")) { %>\t                        <p><%- _("This search has encountered a fatal error and has been marked as zombied.").t() %></p>\t                    <% } else if (searchJob.entry.content.get("isFailed")) { %>\t                        <p>\t                            <%- _("This search did not successfully execute.  Any results returned from this job \t                                are not consistent and should not be used.").t() \t                            %>\t                        </p>\t                        <pre><%- this.model.searchJob.getSearch() %></pre>\t                    <% } else if (searchJob.entry.content.get("isPaused")) { %>\t                        <p><%- _("This search is currently paused and must be unpaused before continuing.").t() %></p>\t                    <% } else if (!searchJob.entry.content.get("isDone")) { %>\t                        <p>\t                            <%- splunkUtil.sprintf(_("This search is still running and is approximately %s \t                                complete.").t(), i18n.format_percent(searchJob.entry.content.get("doneProgress"))) \t                            %>\t                        </p>\t                    <% } else if (searchJob.entry.content.get("isDone")) { %>\t                        <% if (searchJob.entry.content.get("resultCount") == 0) { %>\t                            <% if (searchJob.entry.content.get("eventCount") == 0) { %>\t                                <p>\t                                    <%- splunkUtil.sprintf(_("This search has completed in %s seconds, but did not match any events.  The terms \t                                        specified in the highlighted portion of the search:").t(), i18n.format_number(searchJob.entry.content.get("runDuration"))) \t                                    %>\t                                </p>\t                                <pre>\t                                    <span class="highlighted"><%- searchJob.entry.content.get("eventSearch") || "None" %></span>\t                                    <% if (searchJob.entry.content.get("reportSearch")) { %>\t                                        <span>| <%- searchJob.entry.content.get("reportSearch") %></span>\t                                    <% } %>\t                                </pre>\t                                <p>\t                                    <%- _("over the time range:").t() %>\t                                </p>\t                                <pre>\t                                    <%- earliestTime %> - <%- latestTime %>\t                                </pre>\t                                <p>\t                                    <%- _("did not return any data.  Possible solutions are to:").t() %>\t                                </p>\t                                <ul>\t                                    <li><%- _("relax the primary search criteria").t() %></li>\t                                    <li><%- _("widen the time range of the search").t() %></li>\t                                    <li>\t                                        <%- _("check that the default search indexes for your account include the desired indexes").t() %>\t                                    </li>\t                                </ul>\t                            <% } else if (searchJob.entry.content.get("reportSearch") != "None" && \t                                        searchJob.entry.content.get("reportSearch").length > 0 ) { %>\t                                <%= splunkUtil.sprintf(_("This search has completed and found <span class=\'emphatic\'>%(eventCount)s </span>\t                                      matching %(entityName)s in %(runDuration)s seconds. However, the transforming commands in the \t                                      highlighted portion of the following search:").t(), \t                                      {eventCount: i18n.format_number(searchJob.entry.content.get("eventCount")), \t                                       entityName: i18n.ungettext("event", "events", searchJob.entry.content.get("eventCount")), \t                                       runDuration: i18n.format_number(searchJob.entry.content.get("runDuration"))\t                                      })\t                                %>\t                                <pre>\t                                    <% if (searchJob.entry.content.get("eventSearch")) { %>\t                                        <span class="muted">\t                                            <%- searchJob.entry.content.get("eventSearch") %> |\t                                        </span>\t                                    <% } %>\t                                    <span class="highlighted">\t                                        <%- searchJob.entry.content.get("reportSearch") %>\t                                    </span>\t                                </pre>\t                                <p>\t                                    <%- _("over the time range:").t() %>\t                                </p>\t                                <pre>\t                                    <%- earliestTime %> - <%- latestTime %>\t                                </pre>\t                                <p>\t                                    <%- _("generated no results.  Possible solutions are to:").t() %>\t                                </p>\t                                <ul>\t                                    <li><%- _("check the syntax of the commands").t() %></li>\t                                    <li>\t                                        <%- _("verify that the fields expected by the report commands are present in the events").t() %>\t                                    </li>\t                                </ul>\t                            <% } else { %>\t                                <p>\t                                    <%- _("This search has completed, but did not return any results.").t() %>\t                                </p>\t                            <% } %>\t                            <p>\t                                <%- _("Learn more about troubleshooting empty search results at").t() %>\t                                <a target="_blank" href="<%- docLink %>" title="<%- _("Splunk help").t() %>">\t                                    <%- _("Splunk Documentation").t() %>\t                                    <i class="icon-external"></i>\t                                </a>\t                            </p>\t                        <% } else { %>\t                            <p>\t                                <%= splunkUtil.sprintf(_("This search has completed and has returned <span class=\'emphatic\'>%(resultCount)s</span> %(resultEntity)s  \t                                by scanning <span class=\'emphatic\'>%(scanCount)s</span> %(eventEntity)s in <span class=\'emphatic\'>%(runDuration)s </span> seconds").t(), {\t                                    resultCount: i18n.format_number(searchJob.entry.content.get("resultCount")),\t                                    resultEntity: i18n.ungettext("result", "results", searchJob.entry.content.get("resultEntity")),\t                                    scanCount: i18n.format_number(searchJob.entry.content.get("scanCount")),\t                                    eventEntity: i18n.ungettext("event", "events", searchJob.entry.content.get("eventEntity")),\t                                    runDuration: i18n.format_number(searchJob.entry.content.get("runDuration"))\t                                })\t                                %>\t                            </p>\t                            <% if (searchJob.entry.content.get("isSavedSearch")) { %>\t                                <p>\t                                    <%- _("This search is an instance of the saved search:").t() %>\t                                    <span class="emphatic"><%- searchJob.entry.content.get("label") %></span>\t                                </p>\t                            <% } %>\t                        <% } %>\t                        <% if (searchJob.entry.content.get("messages").length > 0) { %>\t                            <div class="messages">\t                                <p><%- _("The following messages were returned by the search subsystem:").t() %></p>\t                                <ul>\t                                    <% _.each(searchJob.getMessages(),function(message) { %>\t                                        <li>\t                                            <%- message.type %> : \t                                            <span class="text"> <%= splunkUtil.getWikiTransform(message.text) %> </span>\t                                            <% if (message.help) { %>\t                                                <a href="<%- route.docHelp(application.get("root"), application.get("locale"), message.help) %>"\t                                                    target="_blank">\t                                                    <%- _("Learn More").t() %>\t                                                    <i class="icon-external"></i>\t                                                </a>\t                                            <% } %>\t                                        </li>\t                                    <% }) %> \t                                </ul>\t                            </div>\t                        <% } %>\t                    <% } %>\t                </div>\t                <p>\t                    (<%- _("SID:").t() %> \t                    <%- searchJob.id %>)\t                    <% _.each(searchJob.getAvailableSearchLogs(), function(link) { %>\t                        <a class="search-log" href="<%- route.searchJobUrls(application.get("root"), \t                                                        application.get("locale"), \t                                                        searchJob.id, \t                                                        link, \t                                                        {data: {outputMode:"raw"}}) %>">\t                            <%- link %>\t                        </a>\t                    <% }) %>\t                </p>\t            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"views/job_inspector/JobExecutionCost":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("views/shared/delegates/Accordion"),__webpack_require__("util/string_utils"),__webpack_require__("stubs/i18n")],__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,Accordion,stringUtils,i18n){return Base.extend({moduleId:module.id,className:"job-execution-cost accordion",initialize:function(){Base.prototype.initialize.apply(this,arguments)},constructPerformaceData:function(){var componentInfo,maxDuration=0,isNewBlock=!1,currentLevel=0,subComponentStartIndex=0,subComponentBlockPairs=[],subComponentStack=[],performanceData=[];return _.each(this.model.searchJob.entry.content.performance.attributes,function(compVal,compName){for(componentInfo={component:compName,invocationCount:compVal.invocations?parseInt(compVal.invocations,10):0,inputCount:compVal.input_count?parseInt(compVal.input_count,10):0,outputCount:compVal.output_count?parseInt(compVal.output_count,10):0,duration:compVal.duration_secs?parseFloat(compVal.duration_secs):0,displayLevel:0},maxDuration=Math.max(maxDuration,componentInfo.duration),componentInfo.displayDuration=componentInfo.duration;subComponentStack.length>0&&!stringUtils.strStartsWith(compName,subComponentStack[subComponentStack.length-1]+".");)subComponentStack.pop();componentInfo.displayLevel=subComponentStack.length,subComponentStack.push(compName),performanceData.push(componentInfo)}),_.each(performanceData,function(data,index){maxDuration?data.displayDuration=data.displayDuration/maxDuration:data.displayDuration=0,data.displayLevel!==currentLevel&&(isNewBlock?subComponentBlockPairs.push([subComponentStartIndex,index]):subComponentStartIndex=index,currentLevel=data.displayLevel,isNewBlock=!isNewBlock)}),_.each(subComponentBlockPairs,function(pair){var tempBlock=performanceData.slice(pair[0],pair[1]);tempBlock.sort(function(a,b){return a.duration>b.duration?-1:a.duration<b.duration?1:0});for(var i=pair[0],j=0;i<pair[1];i++,j++)performanceData[i]=tempBlock[j]}),performanceData},render:function(){return this.$el.html(this.compiledTemplate({performance:this.constructPerformaceData(),i18n:i18n})),this.accordion=new Accordion({el:this.el,collapsible:!0}),this},template:'\t                <div class="accordion-group">\t                    <div class="accordion-heading">\t                        <a class="accordion-toggle" href="#">\t                            <i class="icon-accordion-toggle"></i>\t                            <%- _("Execution costs").t() %>\t                        </a>\t                    </div>\t                    <div class="accordion-body">\t                        <table>\t                            <thead>\t                                <tr>\t                                    <th><%- _("Duration (seconds)").t() %></th>\t                                    <th></th>\t                                    <th><%- _("Component").t() %></th>\t                                    <th><%- _("Invocations").t() %></th>\t                                    <th><%- _("Input count").t() %></th>\t                                    <th><%- _("Output count").t() %></th>\t                                </tr>\t                            </thead>\t                            <tbody>\t                                <% _.each(performance, function(component) { %>\t                                    <tr class="<%- component.displayLevel ?  "sub" : ""  %>">\t                                        <td>\t                                            <img src="/static/img/skins/default/a.gif" width=<%- component.displayLevel * 15 %>px /> \t                                            <img src="/static/img/skins/default/a.gif" class="durationBar" \t                                                width=<%- Math.max(1, parseInt(component.displayDuration * 150)) %>px /> \t                                        </td>\t                                        <td class="numeric"><%- i18n.format_number(component.duration, "#,###,###.00") %></td>\t                                        <td>\t                                            <img src="/static/img/skins/default/a.gif" width=<%- component.displayLevel * 15 %>px /> \t                                            <%-component.component %>\t                                        </td>\t                                        <td class="numeric">\t                                            <% if(component.invocationCount) { %>\t                                                <%- i18n.format_number(component.invocationCount) %>\t                                            <% } else { %>\t                                                - \t                                            <% } %>\t                                        </td>\t                                        <td class="numeric">\t                                            <% if(component.inputCount) { %>\t                                                <%- i18n.format_number(component.inputCount) %>\t                                            <% } else { %>\t                                                - \t                                            <% } %>\t                                        </td>\t                                        <td class="numeric">\t                                            <% if(component.outputCount) { %>\t                                                <%- i18n.format_number(component.outputCount) %>\t                                            <% } else { %>\t                                                - \t                                            <% } %>\t                                        </td>\t                                    </tr>\t                                <% }) %>\t                            </tbody>\t                        </table>\t                    </div>\t                </div>\t            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"views/job_inspector/job_properties/Master":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("views/job_inspector/job_properties/Row"),__webpack_require__("views/shared/delegates/Accordion"),__webpack_require__("uri/route"),__webpack_require__("stubs/i18n")],__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,JobPropertyRow,Accordion,route,i18n){return Base.extend({moduleId:module.id,className:"job-properties accordion",initialize:function(){Base.prototype.initialize.apply(this,arguments),this.model.searchJob.entry.content.get("remoteSearchLogs")&&this.model.searchJob.entry.content.get("remoteSearchLogs").length>0&&_.isString(this.model.searchJob.entry.content.get("remoteSearchLogs")[0])?this.peerNameList=this.model.searchJob.entry.content.get("remoteSearchLogs")[0].split("\n"):this.peerNameList=[]},generateSortedJobProperties:function(model,additionalProps){var sortedJobProps=[],unsortedJobProps=_.extend({},model.entry.content.attributes,{"eai:acl":model.entry.acl},additionalProps);return unsortedJobProps.hasOwnProperty("messages")&&delete unsortedJobProps.messages,_.isEmpty(unsortedJobProps.custom)&&delete unsortedJobProps.custom,_.each(unsortedJobProps,function(value,prop){sortedJobProps.push({key:prop,value:value})}),sortedJobProps=_.sortBy(sortedJobProps,"key")},searchLogUrl:function(page,options){return route.searchJobUrls(this.model.application.get("root"),this.model.application.get("locale"),this.model.searchJob.id,page,options)},render:function(){var additionalSearchJobProps,hasSavedSearch=!this.model.savedSearch.isNew();if(this.$el.html(this.compiledTemplate({i18n:i18n,hasSavedSearch:hasSavedSearch,searchJob:this.model.searchJob,timelineLink:route.searchJobTimeline(this.model.application.get("root"),this.model.application.get("locale"),this.model.searchJob.id,{data:{outputMode:"xml"}}),summaryLink:route.searchJobSummary(this.model.application.get("root"),this.model.application.get("locale"),this.model.searchJob.id,{data:{outputMode:"xml"}}),searchLogLink:this.searchLogUrl.bind(this),peerNameList:this.peerNameList?this.peerNameList:[]})),hasSavedSearch){var additionalSavedSearchProperties={"eai:attributes":this.model.savedSearch.entry.fields},$savedSearchTableBody=this.$(".saved-search-properties > .accordion-body > table > tbody");this.renderPropertyRows(this.generateSortedJobProperties(this.model.savedSearch,additionalSavedSearchProperties),$savedSearchTableBody)}additionalSearchJobProps={createTime:this.model.searchJob.entry.attributes.published,custom:this.model.searchJob.entry.content.custom.attributes,modifiedTime:this.model.searchJob.entry.attributes.updated,request:this.model.searchJob.entry.content.request.attributes,runtime:this.model.searchJob.entry.content.runtime.attributes,search:this.model.searchJob.getSearch()},this.peerNameList&&this.peerNameList.length>0&&(additionalSearchJobProps.peerNameList=this.peerNameList);var $searchPropertiesTableBody=this.$(".search-job-properties > .accordion-body > table > tbody");return this.renderPropertyRows(this.generateSortedJobProperties(this.model.searchJob,additionalSearchJobProps),$searchPropertiesTableBody),this.accordion=new Accordion({el:this.el,collapsible:!0,defaultGroup:""}),this},renderPropertyRows:function(props,$tableBody){var fragment=document.createDocumentFragment();_.each(props,function(prop,index){var rowId="row"+index;this.children[rowId]=new JobPropertyRow({prop:prop}),this.children[rowId].render().appendTo(fragment)}.bind(this)),$tableBody.prepend(fragment)},template:'\t                <% if(hasSavedSearch) { %>\t                    <div class="saved-search-properties accordion-group">\t                        <div class="accordion-heading">\t                            <a class="accordion-toggle" href="#">\t                                <i class="icon-accordion-toggle"></i>\t                                <%- _("Saved search properties").t() %>\t                            </a>\t                        </div>\t                        <div class="accordion-body">\t                            <table>\t                                <tbody></tbody>\t                            </table>\t                        </div>\t                    </div>\t                <% } %>\t                <div class="search-job-properties accordion-group">\t                    <div class="accordion-heading">\t                        <a class="accordion-toggle" href="#">\t                            <i class="icon-accordion-toggle"></i>\t                            <%- _("Search job properties").t() %>\t                        </a>\t                    </div>\t                    <div class="accordion-body">\t                        <table>\t                            <tbody>\t                                <tr class="additional-links">\t                                    <td class="job-prop-name"><%- _("Additional info").t() %></td>\t                                    <td class="job-prop-value">\t                                        <% if(searchJob.isTimelineAvailable()) { %>\t                                            <a href="<%- timelineLink %>"><%- _("timeline").t() %></a>\t                                        <% } %>\t                                        <% if(searchJob.isSummaryAvailable()) { %>\t                                            <a href="<%- summaryLink %>"><%- _("field summary").t() %></a>\t                                        <% } %>\t                                        <% _.each(searchJob.getAvailableSearchLogs(), function(link) { %>\t                                            <a class="search-log" href="<%- searchLogLink(link, {data: {outputMode:"raw"}}) %>">\t                                                <%- link %>\t                                            </a>\t                                            <% if(peerNameList.length > 0) { %>\t                                                <span>(</span>\t                                                    <% _.each(peerNameList, function(peerName) { %>\t                                                        <a class="peer-link" href="<%- searchLogLink(link, {data: {peer: peerName, outputMode:"raw"}}) %>">\t                                                            <%- peerName %>\t                                                        </a>\t                                                    <% }) %>\t                                                <span>)</span>\t                                            <% } %>\t                                        <% }) %>\t                                    </td>\t                                </tr>\t                            </tbody>\t                        </table>\t                    </div>\t                </div>\t            '
})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"views/job_inspector/job_properties/Row":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("views/shared/JSONTree")],__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,JSONTree){return Base.extend({moduleId:module.id,tagName:"tr",initialize:function(){Base.prototype.initialize.apply(this,arguments),_.isObject(this.options.prop.value)&&(this.children.jsonTree=new JSONTree({json:this.options.prop.value}))},render:function(){return this.$el.html(this.compiledTemplate({})),this.children.jsonTree&&this.children.jsonTree.render().appendTo(this.$el.find(".job-prop-value")),this},template:'\t                <td class="job-prop-name"><%- this.options.prop.key %></td>\t                <td class="job-prop-value">\t                    <% if (!this.children.jsonTree) { %>\t                        <%- this.options.prop.value || _("None").t() %>\t                    <% } %>\t                </td>\t            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"views/job_inspector/Footer":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("shim/jquery"),__webpack_require__("require/underscore"),module,__webpack_require__("views/Base"),__webpack_require__("shim/splunk.util"),__webpack_require__("stubs/i18n")],__WEBPACK_AMD_DEFINE_RESULT__=function($,_,module,Base,splunkUtil,i18n){return Base.extend({moduleId:module.id,className:"footer",initialize:function(){Base.prototype.initialize.apply(this,arguments)},render:function(){return this.$el.html(this.compiledTemplate({application:this.model.application,serverInfo:this.model.serverInfo,splunkUtil:splunkUtil,i18n:i18n})),this},template:'\t                <p>\t                    <span class="emphatic"><%- _("Server info: ").t() %></span> \t                    <%- splunkUtil.sprintf(_("Splunk %(version)s, %(host)s, %(dateTime)s ").t(), {\t                            version: serverInfo.getVersion(),\t                            host: window.location.host,\t                            dateTime: i18n.format_datetime(new Date(),"eee MMM dd", "HH:mm:ss yyyy")\t                    }) %>\t                    <span class="emphatic"><%- _("User: ").t() %></span><%- application.get("owner")%>\t                </p>\t            '})}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"views/job_inspector/Master.pcss":function(module,exports,__webpack_require__){var content=__webpack_require__(1098);"string"==typeof content&&(content=[[module.id,content,""]]);__webpack_require__(14)(content,{});content.locals&&(module.exports=content.locals)},1098:function(module,exports,__webpack_require__){exports=module.exports=__webpack_require__(12)(),exports.push([module.id,".job-inspector{font-size:11px;background-color:#fff;font-family:Roboto,Droid,Helvetica Neue,Helvetica,Arial,sans-serif}.job-inspector .alerts.shared-flashmessages{padding:20px 0 0 20px}.job-inspector .header{background-color:#222;border-bottom:1px solid #eee;padding:5px 14px;font-size:12px}.job-inspector .header h1{margin:5px 0;color:#fff;font-size:18px;font-weight:400}.job-inspector .emphatic{font-weight:700}.job-inspector h2{color:#333}.job-inspector .accordion-heading,.job-inspector h2{font-size:12px;font-weight:700}.job-inspector .job-overview{padding:10px 10px 20px 14px;background-color:#eee}.job-inspector .job-overview>p a.search-log{text-decoration:underline}.job-inspector .job-overview .summary pre{white-space:normal}.job-inspector .job-overview .summary pre .highlighted{background-color:#f2b827;padding:2px}.job-inspector .job-overview .summary .messages li{list-style-type:none;margin-left:10px}.job-inspector .job-overview .summary .messages li .text{font-weight:700}.job-inspector .job-execution-cost{border-top:1px solid #ccc;padding:0 14px;font-size:10px}.job-inspector .job-execution-cost table th{padding:4px 10px;text-align:left;background-color:#eee}.job-inspector .job-execution-cost table tr.sub img.durationBar{opacity:.25}.job-inspector .job-execution-cost table td{padding:4px 10px;border-bottom:1px dotted #999;vertical-align:top}.job-inspector .job-execution-cost table td.numeric{text-align:right}.job-inspector .job-execution-cost table td img{height:1px}.job-inspector .job-execution-cost table td img.durationBar{height:12px;background-color:#000;opacity:.5}.job-inspector .job-properties{padding:0 14px;font-size:10px}.job-inspector .job-properties table{margin-bottom:15px;border-collapse:collapse;width:100%}.job-inspector .job-properties table tr.additional-links a{padding-right:10px;padding-bottom:10px;text-decoration:underline;display:block}.job-inspector .job-properties table tr.additional-links a.peer-link,.job-inspector .job-properties table tr.additional-links a.search-log{display:inline}.job-inspector .job-properties table tr.additional-links td.job-prop-value{white-space:normal;font-size:12px}.job-inspector .job-properties table td{padding:4px 10px;border-bottom:1px dotted #ccc;vertical-align:top}.job-inspector .job-properties table td.job-prop-name{font-weight:700;white-space:nowrap;font-size:10px;background-color:#eee}.job-inspector .job-properties table td.job-prop-value{font-weight:400;font-family:Droid Sans Mono,Consolas,Monaco,Courier New,Courier,monospace}.job-inspector .footer{padding:10px}.accordion-group{padding-top:14px}.accordion-group .accordion-toggle{padding-left:15px;background:none;border:0}.accordion-group .accordion-toggle .icon-accordion-toggle{left:0}.accordion-group .accordion-body{padding:14px 0 0 14px}",""])}});