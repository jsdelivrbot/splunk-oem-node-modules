[module]
className = Splunk.Module.ConvertToIntention
superClass = Splunk.Module
description = Converts a setting value to an intention, which it adds to its context and passes to its children.

#
# Example Config
#
# addterm:
# <module name="ConvertToIntention">
# <param name="settingToConvert">list_value</param>
# <param name="intention">
#     <param name="name">addterm</param>
#     <param name="arg">
#         <param name="sourcetype">$target$</param>
#     </param>
# </param>
#
# stringreplace (this replaces the variable $user$ in a search string):
# <module name="ConvertToIntention">
# <param name="settingToConvert">list_value</param>
# <param name="intention">
#     <param name="name">stringreplace</param>
#     <param name="arg">
#         <param name="user">
#             <param name="value">$target$</param>
#         </param>
#     </param>
# </param>

[param:intention]
required = True
label = This is the intention to add to the current search context.  If 'settingToConvert' is defined, use the "$target$" keyword within the intention somewhere to specify which value in the intention to replace. If 'settingToConvert' is omitted, you do not use "$target$" but instead specify the setting name or names directly , ie "$selectedHost$". 

[param:settingToConvert]
required = False
label = When set, this defines the name of a single setting value that will be set the intention, and which is then specified with a special "$target$" syntax.  It's easier to not set this parameter, in which case you're allowed to specify the keys directly like "selectedHost" or "$foo.bar$";

[param:preserveParentIntentions]
required = False
default = False
label = LEGACY. Has no function. this module was changed to *always* preserve existing intentions @62089 in june 2009, but this associated param was never removed.   

