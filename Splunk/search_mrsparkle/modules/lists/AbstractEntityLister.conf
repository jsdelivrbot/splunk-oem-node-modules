[module]
className = Splunk.Module.AbstractEntityLister
superClass = Splunk.Module
label = The base class for modules that need to obtain lists of Splunk Entities and display them in a particular way.

[param:entityPath]
required = True
label = This should be a valid entity path such as saved/searches.

[param:settingToCreate]
required = False
label = The setting to generate and pass down to child modules.

[param:entityFieldsToDisplay]
required = False
label = The entity fields to display.  These are specified as <list> objects in a view xml specification and must contain at least a "label" definition or a "multiLabel" definition. If "label" is defined it should be set to the name of  a field in the entity listing that will become the label of the generated list.  If "multiLabel" is defined it must be specified as a Python sprintf string where the tokens should map to fields in the entity list.  The <list> object may also contain the following options: "value" definition which is used by child classes to define the lister's behavior.

[param:staticFieldsToDisplay]
required = False
label = A set of <list> objects which define static list elements to add to the dynamically generated list elements.  For example a static option with a label of "Any" and a value of "*" might be desired in addition to a list of saved searches generated by the entity lister.  Static fields are defined in much the same way as entity fields, as <list> objects with a "label" definition that is set to the explicit label (i.e. "Any") and an optional value definition set to the value (i.e. "*"). 

[param:delimiter]
required = False
default = |
label = The character to use to separate each listed field.  Some concrete implementations of lists do not use the delimiter, such as the options lister.

[param:sortKey]
required = False
label = The field on which to sort the results.  This is often deferred to Python's default sort algorithm and will observe Python's sort behavior.

[param:sortDir]
required = False
values = asc, desc
label = The direction to sort the results.  This option may only be defined if the sortKey option is also defined.

[param:count]
required = False
label = The number of list elements to list.  This value only pertains to the dynamically generated list elements, not to the static elements.  In some concrete implementations, this value can be provided by a Paginator module and provide paging behavior.

[param:offset]
required = False
label = The starting offset for the dynamically generated list elements.

[param:postProcess]
required = False
label = The post process search to apply to the entity request.

[param:searchWhenChanged]
required = False
default = True
label = Usually the concrete Lister modules push their changes to their children when a user has acted on the list of elements.  In some cases this is not desirable, such as in the simplified form configurations.

[param:namespace]
required = False
label = The namespace to use when requesting the list of entities.  Normally this defaults to the current application's name.

[param:owner]
required = False
label = The owner to use when requesting the list of entities.  Normally this defaults to the current user.

[param:outputMode]
required = False
label = The type of output to generate from the list of entities.  For example this might be a list of HTML LI elements, or a list of HTML OPTION elements.  Normally this option is defined by the concrete Lister implementations.
